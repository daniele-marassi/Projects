@model Supp.Models.ChangePasswordDto

@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="ChangePassword">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                @Html.TextBoxFor(model => model.UserName, new { autocomplete = "off" })
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OldPassword" class="control-label"></label>
                @Html.PasswordFor(model => model.OldPassword, new { value = Model.OldPassword, autocomplete = "off" })
                <span asp-validation-for="OldPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NewPassword" class="control-label"></label>
                @Html.PasswordFor(model => model.NewPassword, new { value = Model.NewPassword, autocomplete = "off" })
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConfirmNewPassword" class="control-label"></label>
                @Html.PasswordFor(model => model.ConfirmNewPassword, new { value = Model.ConfirmNewPassword, autocomplete = "off" })
                <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="text-danger" style="padding:30px;">
    @Html.ValidationSummary(false)
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

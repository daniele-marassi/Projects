@model SuppModels.UserRoleDto

@{
    ViewData["Title"] = "Create UserRole";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Users.FirstOrDefault().UserFullName" class="control-label"></label>
                @Html.DropDownListFor(x => x.UserId, new SelectList(Model.Users, "Id", "UserFullName", Model.UserId), "-- Select --", new {@class="select" })
                @Html.ValidationMessageFor(x => x.UserId)
            </div>
            <div class="form-group">
                <label asp-for="UserRoleTypes.FirstOrDefault().TypeName" class="control-label"></label>
                @Html.DropDownListFor(x => x.UserRoleTypeId, new SelectList(Model.UserRoleTypes, "Id", "TypeName", Model.UserRoleTypeId), "-- Select --", new {@class="select" })
                @Html.ValidationMessageFor(x => x.UserRoleTypeId)
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<div class="text-danger" style="padding:30px;">
    @Html.ValidationSummary(false)
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

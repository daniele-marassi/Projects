@model X.PagedList.IPagedList<Supp.Models.WebSpeechDto>

@using Supp.Site.Controllers;
@using X.PagedList.Mvc.Core

<link href="~/css/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "WebSpeech List";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var culture = HomeController.Culture;
}

@using (Html.BeginForm("Index", "WebSpeeches", FormMethod.Get))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <h1>@ViewData["Title"]</h1>

    <hr />

    <div>
        <p>
            <a asp-action="Create">Create New</a>
        </p>
        <p>
            Find: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
              <input type="submit" value="Search" class="btn btn-primary" style="margin-top:-2px;" />
        </p>
        <table class="table">
            <thead>
                <tr>
                    <th id="borderTitle"></th>
                    <th id="selectable">
                        @Html.ActionLink("Name", "Index", new { sortOrder = "Name", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Phrase", "Index", new { sortOrder = "Phrase", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Operation", "Index", new { sortOrder = "Operation", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("OperationEnable", "Index", new { sortOrder = "OperationEnable", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Parameters", "Index", new { sortOrder = "Parameters", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Host", "Index", new { sortOrder = "Host", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Answer", "Index", new { sortOrder = "Answer", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Ico", "Index", new { sortOrder = "Ico", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Order", "Index", new { sortOrder = "Order", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Type", "Index", new { sortOrder = "Type", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Sub Type", "Index", new { sortOrder = "SubType", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Previous Phrase", "Index", new { sortOrder = "PreviousPhrase", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Step", "Index", new { sortOrder = "Step", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Step Type", "Index", new { sortOrder = "StepType", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Element Index", "Index", new { sortOrder = "ElementIndex", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("FinalStep", "Index", new { sortOrder = "FinalStep", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("PrivateInstruction", "Index", new { sortOrder = "PrivateInstruction", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("Groupable", "Index", new { sortOrder = "Groupable", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("GroupName", "Index", new { sortOrder = "GroupName", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("GroupOrder", "Index", new { sortOrder = "GroupOrder", currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th id="selectable">
                        @Html.ActionLink("HotShortcut", "Index", new { sortOrder = "HotShortcut", currentFilter = ViewBag.CurrentFilter })
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
                                <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Phrase)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Operation)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OperationEnable)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Parameters)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Host)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Answer)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Ico)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Order)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Type)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SubType)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PreviousPhrase)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Step)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StepType)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ElementIndex)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FinalStep)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PrivateInstruction)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Groupable)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.GroupName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.GroupOrder)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.HotShortcut)
                            </td>
                        </tr>
                    }
                }
                </tbody>
        </table>
    </div>

    <div class="text-danger" style="padding:30px;">
        @Html.ValidationSummary(false)
    </div>
}
    Page @if (Model != null) {@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)} of @if (Model != null) {@Model.PageCount}

    @if (Model != null) { @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))}
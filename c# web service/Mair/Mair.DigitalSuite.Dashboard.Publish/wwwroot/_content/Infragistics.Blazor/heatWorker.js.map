{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./ig/igniteui-core/type.ts","webpack:///./ig/igniteui-core/ArgumentException.ts","webpack:///./ig/igniteui-core/number.ts","webpack:///./ig/igniteui-core/colorCore.ts","webpack:///./ig/igniteui-core/string.ts","webpack:///./ig/igniteui-core/Color.ts","webpack:///./ig/igniteui-core/TileWorkSettings.ts","webpack:///./ig/igniteui-core/IArray.ts","webpack:///./ig/igniteui-core/IArrayList.ts","webpack:///./ig/igniteui-core/IComparer.ts","webpack:///./ig/igniteui-core/IComparer$1.ts","webpack:///./ig/igniteui-core/compareUtil.ts","webpack:///./ig/igniteui-core/Comparer$1_combined.ts","webpack:///./ig/igniteui-core/ReadOnlyCollection$1.ts","webpack:///./ig/igniteui-core/NotImplementedException.ts","webpack:///./ig/igniteui-core/List$1.ts","webpack:///./ig/igniteui-core/array.ts","webpack:///./ig/igniteui-core/TileImageCreatedEventArgs.ts","webpack:///./ig/igniteui-core/HeatTileImageCreatedEventArgs.ts","webpack:///./ig/igniteui-core/HeatTileGeneratorWorker.ts","webpack:///./ig/igniteui-core/ScalerVisibleBounds.ts","webpack:///./ig/igniteui-core/Rect.ts","webpack:///./ig/igniteui-core/HeatTileScaler.ts","webpack:///./ig/igniteui-core/ITileWorkCompletedSink.ts","webpack:///./ig/igniteui-core/HeatTileGeneratorWebWorker_combined.ts","webpack:///./heatworker.worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeIdentifierCache","_nextTypeIdentifier","Base","other","this","a","b","aIsNull","isNullable","hasValue","bIsNull","equals","Number","isNaN","Date","item1","item2","xComparable","typeCast","IComparable_$type","compareToObject","yComparable","compareSimple","undefined","$hashCode","nextHashCode","obj","getHashCode","Type","getPrimitiveHashCode","Cons","$type","InstanceConstructor","clone","prop","result","push","instanceConstructor","identifier","baseType","interfaces","staticInitializer","super","specializationCache","_staticInitializer","typeArguments","isEnumType","_isGenericType","_staticFields","_$nullNullable","enumInfo","_fullName","lastDotIndex","lastIndexOf","substr","types","length","typeName","stringId","toString","ret","type","indexOf","isGenericType","apply","replacement","j","updateCache","typeArg","initSelfReferences","specId","getSpecId","rest","Array","from","arguments","placeholders","hasPlaceholders","isFinite","specialize","generateString","_self","concat","slice","checkEquals","type1","type2","first","ValueType","tOther","isAssignableFrom","Number_$type","Boolean_$type","targetType","Nullable","getUnderlyingType","canAssignSimple","$t","Boolean","C","Error","createInstance","v","val","String","len","hash","charCodeAt","String_$type","Date_$type","depProp","PropMeta","changedFunction","props","names","currName","currOpts","hasDefaultValue","defaultValue","propType","changeHandler","setterFunc","getterFunc","aliasName","propertyAlias","parts","split","substring","toLowerCase","decodePropType","changedName","oldValue","newValue","meta","createWithDefaultAndCallback","createWithCallback","dp","registerAlt","setValueAlt","typeGetValue","getValueAlt","set","configurable","$$p","Array_$type","toNullable","typeCastObjTo$t","shouldWrap","markType","pendingStaticCtors","staticInit","$","IConvertible_$type","Enum","EnumBox","provider","EnumUtil","getName","getBoxIfEnum","enumGetBox","_boxes","values","enumType","ignoreCase","upper","toUpperCase","x","firstChar","charAt","actualNamesValuesMap","getValueFromName","namesValuesMap","flag","_nameMap","vals","getValues","getNames","map","zeroValueName","original","sort","unshift","join","actualNames","member","$tEnum","p2","parse","e","nullableType","isGenericTypeDefinition","Nullable$1","genericTypeArguments","_value","v1","v2","v1IsNull","v2IsNull","val1","val2","nullableEquals","getDefaultValue","canAssign","originalValue","IComparable$1_$type","PropertyChangedEventArgs","propertyName","_propertyName","IteratorWrapper","inner","getNew","_inner","_getNew","_hasNext","_current","next","done","EnumeratorWrapper","moveNext","current","EnumeratorWrapperObject","currentObject","getEn","arr","item","getEnumeratorObject","en","isArray","getEnumerator","EnumerableWrapper","iterator","EnumerableWrapperObject","fromEnum","IDisposable_$type","IEnumerable_$type","IEnumerator_$type","ICollection_$type","IList_$type","IEnumerable$1_$type","ICollection$1_$type","IList$1_$type","BaseError","initNumber","_message","_innerException","init1","init2","get_message","message","innerException","SystemException","NotSupportedException","FormatException","SeekOrigin","Stream","disposeCore","close","disposing","bytes","read","write","EventArgs","_empty","TypeRegistrar","isRegistered","htmlTagName","document","createElement","_registrar","has","igc","replace","igr","internal","prefix","postfix","externalName","Map","_rest","intDivide","divisor","truncate","Math","floor","ceil","logBase","n2","log","isNaN_","wellKnownColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","stringCompareTo","target","_a","_r","_g","_b","_colorString","_stringDirty","round","g","updateColorString","updateColors","colorString","obj_","str","asColorName","parseInt","parseFloat","check","stringStartsWith","a_","r_","g_","b_","left","right","l_op_Equality","l_op_Inequality","markStruct","_scaler","_blurRadius","_maxBlurRadius","_useBlurRadiusAdjustedForZoom","_minimumColor","_maximumColor","_tileViewport","_yValues","_xValues","_values","_isNewData","_minimumVisibleLatitude","_maximumVisibleLatitude","_minimumVisibleLongitude","_maximumVisibleLongitude","_z","_x","_y","_window","_testRun","_globalMinimum","_globalMaximum","_useGlobalMinMax","_minimumValue","_maximumValue","_scaleColors","_scaleColorOffsets","_useLogarithmicScale","_logarithmBase","_image","minA_","minimumColor","minR_","minG_","minB_","maxA_","maximumColor","maxR_","maxG_","maxB_","scaleColors_","scaleColors","color_","blurRadius","maxBlurRadius","useBlurRadiusAdjustedForZoom","tileViewport","top","width","height","yValues","xValues","isNewData","minimumVisibleLatitude","minimumVisibleLongitude","maximumVisibleLatitude","maximumVisibleLongitude","z","y","window","testRun","globalMinimum","globalMaximum","useGlobalMinMax","minimumValue","maximumValue","scaleColorOffsets","useLogarithmicScale","logarithmBase","IArray_$type","IArrayList_$type","IComparer_$type","IComparer$1_$type","obj1","obj2","compare","compareTo","comparison","_syncRoot","source","index","count","contains","array","arrayIndex","copyTo","_useFastCompare","_capacity","tryArray","add","newItem","splice","shift","setItem","equalsStatic","insertItem","removeItem","addItem","clearItems","index_","collection_","preciseType","asArrayList","asArray","asList_","i_","item_","arr_","inn_","parr_","arrLen","collection","j_","numToRemove_","dest","arrayCopyTo","indexOf1","n1","i1","i2","d1","d2","getTime","sortHelper","compare_","action","binarySearch1","defaultComparerValue","comparer","start","end","mid","testValue","compareResult","temp","sort2","func","self","runOn","match","_imageData","_url","_globalMinimumValue","_globalMaximumValue","_globalMaximumValueLongitude","_globalMaximumValueLatitude","_globalMinimumValueLongitude","_globalMinimumValueLatitude","settings","_settings","_messageId","_transferableSupported","_id","_maxAccPixelLatitude","_maxAccPixelLongitude","_minAccPixelLatitude","_minAccPixelLongitude","_completedSink","_nextId","zoomedBlurRadius","scaler","sqrt","pow","currLongitude","currLatitude","currValue","currMinLongitude","currMaxLongitude","currMinLatitude","currMaxLatitude","filterStartX","filterStartY","longitudes","latitudes","longitudesLength","minimumLongitude","maximumLongitude","minimumLatitude","maximumLatitude","filterBreadth","getFilterBreadth","filter","getFilter","zoomedBlurRadiusLat","abs","unscaleLatitude","zoomedBlurRadiusLon","unscaleLongitude","visibleLongitudes","visibleLatitudes","visibleValues","filterX","filterY","filterVal","filteredValue","imageData","getImageBytes","accumulationData","getAccumulationData","tileWidth","visibleLength","scaleLatitudes","scaleLongitudes","k","currAcc","accumulationLength","maxValue","minValue","maxAccLocation","minAccLocation","maxAccPixelY","maxAccPixelX","minAccPixelY","minAccPixelX","maxCount","minCount","sumMaxLatitude","sumMaxLongitude","sumMinLatitude","sumMinLongitude","i3","j1","k1","doRGBInterpolation","finish","currA","currR","currG","currB","range","useLogarithm","minA","maxA","minR","maxR","minG","maxG","minB","maxB","rangeA","rangeR","rangeG","rangeB","offsets","minA1","maxA1","minR1","maxR1","minG1","maxG1","minB1","rangeA1","rangeR1","rangeG1","rangeB1","radius","center","dist","sum","max","min","curr","j2","curr1","completedSink","onCompleted","$ret","url","globalMinimumValue","globalMaximumValue","globalMaximumValueLongitude","globalMaximumValueLatitude","globalMinimumValueLongitude","globalMinimumValueLatitude","image","_idLock","_curr","bottom","_top","_bottom","_right","_left","_width","_height","size","point1","point2","POSITIVE_INFINITY","NEGATIVE_INFINITY","isEmpty","containsInternal","point","containsLocation","rect","makeEmpty","intersectsWith","maxX","maxY","newWidth","newHeight","minX","minY","_latitudeSpan","_longitudeSpan","_projectedMaximum","_projectedRange","getProjectedValue","valueR","valueSin","sin","viewport","worldRect","visibleLeft","visibleRight","visibleTop","visibleBottom","exp","asin","degreeAsRadian","unscaledValue","getUnprojectedValue","getScaledValue","viewportHeight","projectedValue","scaledValue","getVisibleBounds","viewportTop","PI","ITileWorkCompletedSink_$type","_postmessage","args_","data_","data","cancelTile","_workers","currWorker","innerSettings","yValues_","xValues_","values_","Float64Array","outerColors","fromArgb","worker","messageId","transferableSupported","worker_","workers_","setInterval","doWork","_worker","args","outerArgs","imageData_","Uint8ClampedArray","postmessage","onmessage","postMessage"],"mappings":"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","file":"heatWorker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*! \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nlet _typeIdentifierCache: { [val: string]: number } = {};\r\nlet _nextTypeIdentifier = 0;\r\n\r\n// interface Function {\r\n//     $type?: Type;\r\n// }\r\n\r\nexport function getInstanceType(obj: any): Type {\r\n    if (obj.$type) {\r\n        return obj.$type;\r\n    }\r\n    else if (typeof obj === 'number') {\r\n        return Number_$type;\r\n    }\r\n    else if (typeof obj === 'string') {\r\n        return String_$type;\r\n    }\r\n    else if (typeof obj === 'boolean') {\r\n        return Boolean_$type;\r\n    }\r\n    else if (obj instanceof Date) {\r\n        return Date_$type;\r\n    }\r\n\r\n    return (<any>Base).prototype.$type;\r\n}\r\n\r\nexport class Base {\r\n    constructor () {\r\n\r\n    }\r\n    equals(other: any) : boolean {\r\n        return this === other;\r\n    }\r\n    static equalsStatic(a: any, b: any): boolean {\r\n        var aIsNull = (a == null) || (!!(<any>a).isNullable && !(<any>a).hasValue);\r\n        var bIsNull = (b == null) || (!!(<any>b).isNullable && !(<any>b).hasValue);\r\n\r\n        if (aIsNull || bIsNull) {\r\n            return aIsNull && bIsNull;\r\n        }\r\n\r\n        if (a.equals) {\r\n            return a.equals(b);\r\n        }\r\n\r\n        if (b.equals) {\r\n            return b.equals(a);\r\n        }\r\n\r\n        if (Number.isNaN(<any>a) && Number.isNaN(<any>b)) {\r\n            return true;\r\n        }\r\n\r\n        if (a instanceof Date) {\r\n            return b instanceof Date && +a === +b;\r\n        }\r\n\r\n        return a == b && typeof a == typeof b;\r\n    }\r\n\r\n    static equalsSimple(item1: any, item2: any): boolean {\r\n\t\treturn item1 == item2;\r\n\t};\r\n\r\n\tstatic compareSimple(item1: any, item2: any): number {\r\n\t\tif (item1 == item2) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tif (item1 < item2) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\treturn 1;\r\n\t};\r\n\r\n\tstatic compare(item1: any, item2: any): number {\r\n\t\tif (item1 === item2) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tvar xComparable = typeCast<IComparable>(IComparable_$type, item1);\r\n\t\tif (xComparable !== null && xComparable.compareToObject) {\r\n\t\t\treturn xComparable.compareToObject(item2);\r\n\t\t}\r\n\r\n\t\tvar yComparable = typeCast<IComparable>(IComparable_$type, item2);\r\n\t\tif (yComparable !== null && yComparable.compareToObject) {\r\n\t\t\treturn -yComparable.compareToObject(item1);\r\n\t\t}\r\n\r\n\t\treturn Base.compareSimple(item1, item2);\r\n\t};\r\n\r\n    private $hashCode: number;\r\n    static nextHashCode: number = 0;\r\n    getHashCode(): number {\r\n        if (this.$hashCode === undefined) {\r\n            this.$hashCode = Base.nextHashCode++;\r\n        }\r\n        return this.$hashCode;\r\n    }\r\n    static getHashCodeStatic(obj: any): number {\r\n        if (obj.getHashCode) {\r\n            return obj.getHashCode();\r\n        }\r\n        if (obj.$hashCode !== undefined) {\r\n            return obj.$hashCode;\r\n        }\r\n        if (!(typeof obj == \"object\")) {\r\n            return Type.getPrimitiveHashCode(obj);\r\n        } else {\r\n            obj.$hashCode = Base.nextHashCode++;\r\n            return obj.$hashCode;\r\n        }\r\n    }\r\n    memberwiseClone(): Base {\r\n\r\n        class Cons {\r\n\r\n        }\r\n        Cons.prototype = this.$type.InstanceConstructor.prototype;\r\n        let clone: any = new Cons();\r\n\r\n        for (var prop in this) {\r\n            if (this.hasOwnProperty(prop)) {\r\n                clone[ prop ] = this[ prop ];\r\n            }\r\n        }\r\n\r\n        return clone;\r\n    }\r\n    static referenceEquals(a: any, b: any): boolean {\r\n        return a === b || (a == null && b == null);\r\n    }\r\n    static getArrayOfValues(obj: any): any[] {\r\n\t\tvar result = [ ];\r\n\t\tfor (var i in obj) {\r\n\t\t\tif (obj.hasOwnProperty(i)) {\r\n\t\t\t\tresult.push(obj[ i ]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tstatic getArrayOfProperties(obj: any): any[] {\r\n\t\tvar result = [ ];\r\n\t\tfor (var i in obj) {\r\n\t\t\tif (obj.hasOwnProperty(i)) {\r\n\t\t\t\tresult.push(i);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n    $type: Type\r\n}\r\n\r\nexport type InstanceConstructor = \r\n    Function;\r\n\r\nexport class Type extends Base {\r\n    public specializationCache: { [val: string]: Type } = null;\r\n    private _staticInitializer: () => void = null;\r\n    private _fullName: string;\r\n    public name: string = null;\r\n    public typeArguments: (number | Type)[] = null;\r\n    public baseType: Type = null;\r\n    public interfaces: Type[] = null;\r\n    public identifier: number;\r\n    public isEnumType: boolean = false;\r\n    private _isGenericType: boolean = undefined;\r\n    private _staticFields: object = null;\r\n    InstanceConstructor: InstanceConstructor;\r\n    public isNullable: boolean = false;\r\n    public stringId: string;\r\n\r\n    _$nullNullable: any = null;\r\n\r\n    enumInfo: EnumInfo = null;\r\n\r\n    constructor (\r\n        instanceConstructor: InstanceConstructor,\r\n        identifier: string, \r\n        baseType: Type = Base.prototype.$type, \r\n        interfaces: Type[] = null, \r\n        staticInitializer: () => void = null) {\r\n\r\n        super();\r\n        this.specializationCache = {};\r\n        this._staticInitializer = staticInitializer;\r\n        this._fullName = identifier;\r\n        this.name = identifier;\r\n\r\n        this.InstanceConstructor = instanceConstructor;\r\n        var lastDotIndex = this.name.lastIndexOf(\".\");\r\n        if (lastDotIndex >= 0) {\r\n            this.name = this.name.substr(lastDotIndex + 1);\r\n        }\r\n    \r\n        this.typeArguments = null;\r\n        this.baseType = null;\r\n        this.interfaces = null;\r\n        if (baseType) {\r\n            this.baseType = baseType;\r\n        }\r\n        if (interfaces) {\r\n            this.interfaces = interfaces;\r\n        }\r\n\r\n        if (_typeIdentifierCache[ identifier ]) {\r\n            this.identifier = _typeIdentifierCache[ identifier ];\r\n        } else {\r\n            this.identifier = _nextTypeIdentifier++;\r\n            _typeIdentifierCache[ identifier ] = this.identifier;\r\n        }\r\n\r\n        // rather than always evaluating a function on a type to see if it is an enum\r\n        // we can just cache it once on the type\r\n        // if (baseType && Enum && baseType == Enum.prototype.$type) {\r\n        //     this.isEnumType = true;\r\n        // }\r\n    }\r\n    get typeName(): string {\r\n        return this.name;\r\n    }\r\n    get fullName(): string {\r\n        return this._fullName;\r\n    }\r\n    getSpecId(types: (number | Type)[]): string {\r\n        if (types.length === 1) {\r\n            if (!types[ 0 ]) {\r\n                return \"undef\";\r\n            } else if (types[ 0 ] === -1) {\r\n                return undefined;\r\n            } else if (!(<any>types[ 0 ]).typeName) {\r\n                return types[ 0 ].toString();\r\n            } else if ((<any>types[ 0 ]).stringId) {\r\n                return (<any>types[ 0 ]).stringId;\r\n            } else {\r\n                return (<Type>types[ 0 ]).identifier.toString();\r\n            }\r\n        }\r\n\r\n        var ret = \"\";\r\n        for (var i = 0; i < types.length; i++) {\r\n            var type = types[ i ];\r\n            if (!type) {\r\n                ret += \"undef\";\r\n            } else if (type == -1) {\r\n                return undefined;\r\n            } else if (!(<any>type).typeName) {\r\n                ret += type.toString();\r\n            } else if ((<any>type).stringId) {\r\n                ret += (<any>type).stringId;\r\n            } else {\r\n                ret += (<Type>type).identifier.toString();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    get isGenericType(): boolean {\r\n        if (this._isGenericType === undefined) {\r\n            this._isGenericType = this.name.indexOf(\"$\") >= 0;\r\n        }\r\n\r\n        return this._isGenericType;\r\n    }\r\n    get isGenericTypeDefinition() : boolean {\r\n        return this.typeArguments === null && this.isGenericType;\r\n    }\r\n    get genericTypeArguments(): (number | Type)[] {\r\n        return this.typeArguments;\r\n    }\r\n    getStaticFields(type?: Type): any {\r\n        if (type === undefined) {\r\n            type = this;\r\n        }\r\n\r\n        var t: Type | string = this;\r\n\r\n        while (t != null) {\r\n            if (t === type || t._fullName == type._fullName) {\r\n                if (t._staticFields == null && t._staticInitializer) {\r\n                    t._staticFields = {};\r\n                    t._staticInitializer.apply(t._staticFields, t.typeArguments);\r\n                }\r\n\r\n                return t._staticFields;\r\n            }\r\n\r\n            t = t.baseType;\r\n        }\r\n\r\n        return null;\r\n    }\r\n    initSelfReferences(replacement?: Type): Type {\r\n        var i, j;\r\n        if (replacement) {\r\n            if (this.typeArguments) {\r\n                var updateCache = false;\r\n\r\n                for (j = 0; j < this.typeArguments.length; j++) {\r\n                    var typeArg = this.typeArguments[ j ];\r\n                    if (typeArg == -1) {\r\n                        updateCache = true;\r\n                        this.typeArguments[ j ] = replacement;\r\n                    } else if (\r\n                        typeArg &&\r\n                        typeArg instanceof Type &&\r\n                        typeArg.initSelfReferences) {\r\n                        typeArg.initSelfReferences(replacement);\r\n                    }\r\n                }\r\n\r\n                if (updateCache) {\r\n                    var specId = this.getSpecId(this.typeArguments);\r\n                    var ret = this.specializationCache[ specId ];\r\n\r\n                    if (!ret) {\r\n                        this.specializationCache[ specId ] = this;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (this.baseType) {\r\n                this.baseType.initSelfReferences(this);\r\n            }\r\n\r\n            if (this.interfaces) {\r\n                for (i = 0; i < this.interfaces.length; i++) {\r\n                    this.interfaces[ i ].initSelfReferences(this);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n    specialize(...rest: (Type | number | Function)[]): Type {\r\n        var i;\r\n        if (!this.isGenericType) {\r\n            return this;\r\n        }\r\n\r\n        var specId = this.getSpecId(Array.from(arguments));\r\n        var ret = this.specializationCache[ specId ];\r\n        if (ret) {\r\n            return ret;\r\n        }\r\n        ret = new Type(this.InstanceConstructor, this._fullName, this.baseType, this.interfaces, this._staticInitializer);\r\n        ret.specializationCache = this.specializationCache;\r\n\r\n        var placeholders = this.typeArguments;\r\n        var hasPlaceholders = false;\r\n\r\n        // Make sure the placeholders are actually numbers. If they are types, we are re-specializing an\r\n        // already specialized type.\r\n        if (placeholders && placeholders.length) {\r\n            /* going back to how it used to be. we shouldn't assume that the number/order of the arguments\r\n                relates to the typearguments. this may be an interface that has its type information already\r\n                and either has placeholders or is a closed type\r\n            // you can have a mixed bag where some are placeholders and others are not and the\r\n            // placeholder doesn't have to be the first slot\r\n            for (i = 0; i < placeholders.length; i++) {\r\n                if (isFinite(placeholders[ i ])) {\r\n                    hasPlaceholders = true;\r\n                    break;\r\n                }\r\n            }*/\r\n            hasPlaceholders = true;\r\n        }\r\n\r\n        ret.typeArguments = [ ];\r\n        if (hasPlaceholders) {\r\n            for (i = 0; i < placeholders.length; i++) {\r\n\r\n                // if the argument being provided is a placeholder index and we already have\r\n                // a placeholder then keep the index we have. otherwise we're taking the index\r\n                // of the parent type\r\n                if (typeof placeholders[i] === \"number\" &&\r\n                    isFinite(<number>placeholders[ i ]) && !isFinite(arguments[<number>placeholders[ i ] ])) {\r\n                    ret.typeArguments[ i ] = arguments[ <number>placeholders[ i ] ];\r\n                } else {\r\n                    ret.typeArguments[ i ] = placeholders[ i ];\r\n                }\r\n            }\r\n        } else {\r\n            for (i = 0; i < arguments.length; i++) {\r\n                ret.typeArguments[ i ] = arguments[ i ];\r\n            }\r\n        }\r\n\r\n        // since the placeholder indexes for the basetype and interfaces implemented are based\r\n        // on the order of the type arguments for the defining types we should pass its typeargs\r\n        // and not the outermost type's type arguments which may be different in number and order\r\n        // than the base type of the base types and interfaces implemented\r\n        if (this.baseType && this.baseType.typeArguments) {\r\n            ret.baseType = this.specialize.apply(this.baseType, ret.typeArguments);\r\n        }\r\n\r\n        if (this.interfaces) {\r\n            ret.interfaces = [ ];\r\n            for (i = 0; i < this.interfaces.length; i++) {\r\n                ret.interfaces[ i ] = this.specialize.apply(this.interfaces[ i ], ret.typeArguments);\r\n            }\r\n        }\r\n\r\n        // rather than doing this check in various places we could just cache a field on the type\r\n        if (this._fullName == \"Nullable$1\" && ret.typeArguments.length == 1) {\r\n            ret.isNullable = true;\r\n        }\r\n\r\n        // if this was a self referencing type (e.g. IEquatable<Int32> for Int32 then we won't have the\r\n        // specId yet because we don't know the type argument. we'll update the cache when we update\r\n        // the self references. otherwise other types that use self references (but for a different type)\r\n        // will get and use the wrong type arguments\r\n        if (specId) {\r\n            this.specializationCache[ specId ] = ret;\r\n            ret.stringId = ret.generateString();\r\n        } else {\r\n            // the self referencing type needs to be able to put itself into the specialization cache\r\n            // of the original type\r\n            //ret.specializationCache = this.specializationCache;\r\n        }\r\n\r\n        if (this.InstanceConstructor != null) {\r\n            var _self = this;\r\n            ret.InstanceConstructor = function () {\r\n                _self.InstanceConstructor.apply(this,\r\n                    ret.typeArguments.concat(Array.prototype.slice.call(arguments, 0)));\r\n                return this;\r\n            };\r\n            ret.InstanceConstructor.prototype = this.InstanceConstructor.prototype;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    equals(other: Type) : boolean {\r\n        if (!(other instanceof Type)) {\r\n            return false;\r\n        }\r\n        if (this.identifier !== other.identifier) {\r\n            return false;\r\n        }\r\n        if (this.typeArguments === null && other.typeArguments === null) {\r\n            return true;\r\n        }\r\n        if (this.typeArguments === null && other.typeArguments !== null) {\r\n            return false;\r\n        }\r\n        if (this.typeArguments !== null && other.typeArguments === null) {\r\n            return false;\r\n        }\r\n        if (this.typeArguments.length !== other.typeArguments.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < this.typeArguments.length; i++) {\r\n\r\n            //TODO: handle covariance case here.\r\n            //if (!$.ig.util.canAssign(this.typeArguments[ i ], other.typeArguments[ i ])) {\r\n            //    return false;\r\n            //}\r\n            if (!Type.checkEquals(this.typeArguments[ i ], other.typeArguments[ i ])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n    static checkEquals(type1: any, type2: any): boolean {\r\n        if (type1 instanceof Type) {\r\n            return type1.equals(type2);\r\n        } else if (type2 instanceof Type) {\r\n            return type2.equals(type1);\r\n        } else {\r\n            return type1 === type2;\r\n        }\r\n    }\r\n\r\n    static op_Equality(type1: Type, type2: Type): boolean { \r\n        return type1.equals(type2);\r\n    }\r\n    static op_Inequality(type1: Type, type2: Type) { \r\n        return !type1.equals(type2);\r\n    }\r\n\r\n    generateString() : string {\r\n        if (!this.typeArguments || !this.typeArguments.length) {\r\n            return this.identifier.toString();\r\n        } else {\r\n            var ret = this.identifier.toString() + \"[\";\r\n            var first = true;\r\n            for (var i = 0; i < this.typeArguments.length; i++) {\r\n                if (this.typeArguments[ i ] == undefined) {\r\n                    continue;\r\n                }\r\n                if (first) { first = false; } else { ret += \",\"; }\r\n                if (this.typeArguments[ i ].toString) {\r\n                    ret += this.typeArguments[ i ].toString();\r\n                } else {\r\n                    ret += (<Type>this.typeArguments[ i ]).identifier.toString();\r\n                }\r\n            }\r\n            ret += \"]\";\r\n            return ret;\r\n        }\r\n    }\r\n    get isValueType() : boolean {\r\n        return this.baseType === ValueType.prototype.$type;\r\n    }\r\n    isAssignableFrom(tOther: Type): boolean {\r\n\r\n        // TODO: Unit test and make sure this is right (especially with generics\r\n        if (this === tOther) {\r\n            return true;\r\n        }\r\n\r\n        if (tOther.baseType && this.isAssignableFrom(tOther.baseType)) {\r\n            return true;\r\n        }\r\n\r\n        if (tOther.interfaces) {\r\n            for (var i = 0; i < tOther.interfaces.length; i++) {\r\n                if (this.isAssignableFrom(tOther.interfaces[ i ])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    isInstanceOfType(value: Type | string): boolean {\r\n        return typeCast(this, value) !== null;\r\n    }\r\n    get isPrimitive() {\r\n        return this === Number_$type ||\r\n            this === Boolean_$type;\r\n    }\r\n            \r\n    static canAssign(targetType: Type, type: Type) : boolean {\r\n\t\tif (targetType.name === 'Nullable$1' && type.name !== 'Nullable$1') {\r\n\t\t\ttargetType = Nullable.getUnderlyingType(targetType);\r\n\t\t}\r\n\r\n\t\treturn Type.canAssignSimple(targetType, type);\r\n\t}\r\n\r\n\tstatic canAssignSimple(targetType: Type, type: Type): boolean {\r\n\t\tif (targetType === type || Type.checkEquals(targetType, type)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (type.interfaces) {\r\n\t\t\tfor (var i = 0; i < type.interfaces.length; i++) {\r\n\t\t\t\tif (Type.canAssignSimple(targetType, type.interfaces[i])) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (type.baseType) {\r\n\t\t\treturn Type.canAssignSimple(targetType, type.baseType);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t\r\n\r\n    static createInstance<T>($t: Type | Function): T {\r\n        if ($t === Number || $t == Number_$type ||\r\n            (<Type>$t).isEnumType) {\r\n            return <T><any>0;\r\n        }\r\n\r\n        if ($t == Boolean || $t == Boolean_$type) {\r\n            return <T><any>false;\r\n        }\r\n\r\n        if ((<Type>$t).InstanceConstructor) {\r\n            var result;\r\n            //result = Object.create((<Type>$t).InstanceConstructor.prototype);\r\n\r\n            let C: any = (<Type>$t).InstanceConstructor;\r\n            //(<Type>$t).InstanceConstructor.apply(result, Array.prototype.slice.call(arguments, 1));\r\n            result = new C(...Array.prototype.slice.call(arguments, 1));\r\n            return <T>result;\r\n        }\r\n\r\n        throw new Error(\"Cannot find instance constructor for the type parameter\");\r\n    };\r\n\r\n    static getDefaultValue<T>($t: Type): T {\r\n\t\tif ($t === Number_$type ||\r\n\t\t\t$t.isEnumType) {\r\n\t\t\treturn <T><any>0;\r\n\t\t}\r\n\r\n\t\tif ($t == Boolean_$type) {\r\n\t\t\treturn <T><any>false;\r\n\t\t}\r\n\r\n\t\tif ($t.baseType === (<any>ValueType).$type) {\r\n\t\t\treturn Type.createInstance<T>($t);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n    \r\n    static getPrimitiveHashCode(v: any): number {\r\n        var val = typeof v;\r\n        if (val === \"string\" || v instanceof String) {\r\n            var hash = 0, i, chr, len;\r\n\t\t\tif (v.length === 0) {\r\n\t\t\t\treturn hash;\r\n\t\t\t}\r\n\t\t\tfor (i = 0, len = this.length; i < len; i++) {\r\n\t\t\t\tchr = v.charCodeAt(i);\r\n\t\t\t\t/*jslint bitwise: true */\r\n\t\t\t\thash = ((hash << 5) - hash) + chr;\r\n\t\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t\t}\r\n\r\n\t\t\treturn hash;\r\n        } else if (val === \"boolean\" || v instanceof Boolean) {\r\n            return +v;\r\n        } else {\r\n            return v;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // static mark(t: Function, name: string,\r\n    //     baseType: Type = Base.prototype.$type, \r\n    //     interfaces: Type[] = null, \r\n    //     staticInitializer: () => void = null) {\r\n    //     t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\r\n    //     (<any>t).$type = t.prototype.$type;\r\n    // }\r\n\r\n    private static decodePropType(val: any): Type {\r\n        if (val === 0) {\r\n            return Boolean_$type;\r\n        }\r\n        else if (val === 1) {\r\n            return Number_$type;\r\n        }\r\n        else if (val === 2) {\r\n            return String_$type;\r\n        }\r\n        else if (val === 3) {\r\n            return Date_$type;\r\n        }\r\n        else {\r\n            return <Type>val;\r\n        }\r\n    }\r\n\r\n    static dep(depProp: Function, PropMeta: Function, t: Function, changedFunction: string,\r\n        props: any[]) {\r\n        let names: string[] = [];\r\n        let currName = \"\";\r\n        let currOpts: any[] = [];\r\n        let hasDefaultValue = false;\r\n        let defaultValue: any = null;\r\n        let propType: Type = null;\r\n        let changeHandler : (sender: any, args: any) => void = null;\r\n        let setterFunc: (value: any) => void = null;\r\n        let getterFunc: () => any = null;\r\n        let aliasName: string = null;\r\n        let propertyAlias: string = null;\r\n\r\n        //debugger;\r\n        for (var i = 0; i < props.length; i++) {\r\n            if (i % 2 == 0) {\r\n                currName = props[i];\r\n                if (currName.indexOf(\":\") >= 0) {\r\n                    let parts = currName.split(':');\r\n                    if (parts.length == 2) {\r\n                        currName = parts[0];\r\n                        aliasName = parts[1];\r\n                        propertyAlias = currName.substring(0, 1).toLowerCase() + currName.substring(1) + \"Property\";\r\n                    } else {\r\n                        currName = parts[0];\r\n                        aliasName = parts[1];\r\n                        if (aliasName.length == 0) {\r\n                            aliasName = currName.substring(0, 1).toLowerCase() + currName.substring(1);\r\n                        }\r\n                        propertyAlias = parts[2];\r\n                    }\r\n                } else {\r\n                    aliasName = currName.substring(0, 1).toLowerCase() + currName.substring(1);\r\n                    propertyAlias = aliasName + \"Property\";\r\n                }\r\n                names.push(currName);\r\n            } else {\r\n                currOpts = props[i];\r\n                if (currOpts.length == 2) {\r\n                    hasDefaultValue = true;\r\n                    defaultValue = currOpts[1];\r\n                    propType = Type.decodePropType(currOpts[0]);\r\n                } else {\r\n                    hasDefaultValue = false;\r\n                    propType = Type.decodePropType(currOpts[0]);\r\n                }\r\n\r\n                let changedName = currName;\r\n                changeHandler = (o: any, a: any) => {\r\n                    o[changedFunction].call(o, changedName, a.oldValue, a.newValue);\r\n                }\r\n\r\n                let meta: any = null;\r\n                \r\n                if (hasDefaultValue) {\r\n                    meta = (<any>PropMeta).createWithDefaultAndCallback(defaultValue, changeHandler);\r\n                } else { \r\n                    meta = (<any>PropMeta).createWithCallback(changeHandler);\r\n                }\r\n\r\n                let dp = (<any>depProp).registerAlt(currName, propType, (<any>t).$type, meta);\r\n                \r\n                setterFunc = function (this: any, v: any): void {\r\n                    (<any>this).setValueAlt(dp, v);\r\n                }\r\n\r\n                if (propType.isEnumType) {\r\n                    getterFunc = function (this: any): any {\r\n                        return typeGetValue((<any>this).getValueAlt(dp));\r\n                    }\r\n                }\r\n                else {\r\n                    getterFunc = function (this: any): any {\r\n                        return (<any>this).getValueAlt(dp);\r\n                    }\r\n                }\r\n\r\n                Object.defineProperty(t.prototype, aliasName, {\r\n                    set: setterFunc,\r\n                    get: getterFunc,\r\n                    configurable: true\r\n                });\r\n\r\n                (<any>t)[propertyAlias] = dp; \r\n            }\r\n\r\n                      \r\n        }\r\n\r\n        // let superClass = (<any>t).$type.baseType;\r\n        // if (superClass !== null && superClass !== undefined) {\r\n        //     let superNames = superClass.InstanceConstructor.$$p;\r\n        //     if (superNames) {\r\n        //         for (var j = superNames.length - 1; j >= 0; j--) {\r\n        //             names.unshift(superNames[j]);\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        (<any>t).$$p = names;\r\n    }\r\n}\r\n\r\nmarkType(Type, \"Type\");\r\nmarkType(Base, \"Base\", null);\r\n\r\nexport function typeGetValue(v: any): any {\r\n    if (v !== null && v.$type && v.$type.isEnumType) {\r\n        return v.value;\r\n    }\r\n\r\n    return v;\r\n}\r\n\r\nexport function typeCast<T>(targetType: Type | Function, obj: any): T {\r\n    if (obj === undefined || obj === null) {\r\n        return null;\r\n    }\r\n\r\n    if (targetType === Array) {\r\n        return <T><any>((obj instanceof Array) ? obj : null);\r\n    }\r\n\r\n    if (targetType === String) {\r\n        targetType = String_$type;\r\n    }\r\n    if (targetType === Number) {\r\n        targetType = Number_$type;\r\n    }\r\n    if (targetType === Boolean) {\r\n        targetType = Boolean_$type;\r\n    }\r\n    if (targetType === Date) {\r\n        targetType = Date_$type;\r\n    }\r\n\r\n    var type = obj;\r\n\r\n    if (obj.$type) {\r\n        type = obj.$type;\r\n    }\r\n    else if (typeof obj === 'number') {\r\n        type = targetType === Number ? Number : Number_$type;\r\n    }\r\n    else if (typeof obj === 'string') {\r\n        type = String_$type;\r\n    }\r\n    else if (typeof obj === 'boolean') {\r\n        type = Boolean_$type;\r\n    }\r\n    else if (obj instanceof Date) {\r\n        type = Date_$type;\r\n    }\r\n    else if (obj instanceof Array) {\r\n        type = Array_$type;\r\n    }\r\n\r\n    if (Type.canAssignSimple(<Type>targetType, type)) {\r\n        return obj;\r\n    }\r\n\r\n    if (targetType.name === 'Nullable$1' && type.name !== 'Nullable$1') {\r\n        targetType = Nullable.getUnderlyingType(<Type>targetType);\r\n        if (Type.canAssignSimple(<Type>targetType, type)) {\r\n            return <T><any>toNullable(targetType, obj);\r\n        }\r\n\r\n        return <T><any>toNullable(targetType, null);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function typeCastObjTo$t<T>($t: Type, v: any) {\r\n\r\n    var shouldWrap = false;\r\n    if ($t.isNullable) {\r\n        $t = <Type>$t.typeArguments[ 0 ];\r\n        shouldWrap = true;\r\n    }\r\n\r\n    if (v !== null && $t.isEnumType) {\r\n        v = v.value;\r\n    }\r\n\r\n    return shouldWrap ? toNullable($t, v) : v;\r\n}\r\n\r\n\r\nlet pendingStaticCtors = new Array();\r\nexport function markStruct(t: Function, name: string,\r\n        baseType: Type = ValueType.prototype.$type, \r\n        interfaces: Type[] = null, \r\n        staticInitializer: () => void = null) {\r\n    t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\r\n\r\n    //TODO: do we need/want a flag on the function like we have in js?\r\n    if (typeof (<any>t).staticInit === \"function\") {\r\n        pendingStaticCtors.push(t);\r\n    }\r\n\r\n    (<any>t).$type = t.prototype.$type;\r\n    (<any>t).$ = t.prototype.$type;\r\n\r\n    return t.prototype.$type;\r\n}\r\n\r\nexport interface EnumInfo {\r\n    names: string[];\r\n    actualNames: string[];\r\n    namesValuesMap: { [index: string]: number };\r\n    actualNamesValuesMap: { [index: string]: number };\r\n}\r\n\r\nexport function markEnum(name: string, encodedDef: string): Type {\r\n    let t = new Type(null, name, Base.prototype.$type, [ IConvertible_$type ]);\r\n    t.isEnumType = true;\r\n\r\n    let parts = encodedDef.split(\"|\");\r\n    let names: string[] = [];\r\n    let actualNames: string[] = [];\r\n    let namesValuesMap: { [index: string]: number } = {};\r\n    let actualNamesValuesMap: { [index: string]: number } = {};\r\n\r\n    for (var i = 0; i < parts.length; i++) {\r\n        let subParts = parts[i].split(\",\");\r\n        let nameParts = subParts[0].split(\":\");\r\n\r\n        let name = nameParts[0];\r\n        let actualName = nameParts[0];\r\n        if (nameParts.length > 1) {\r\n            actualName = nameParts[1];\r\n        }\r\n        names.push(name);\r\n        actualNames.push(actualName);\r\n        //TODO: did we support string enums??\r\n        namesValuesMap[name] = parseInt(subParts[1]);\r\n        actualNamesValuesMap[actualName] = parseInt(subParts[1]);\r\n    }\r\n\r\n    let info: EnumInfo = {\r\n        names: names,\r\n        actualNames: actualNames,\r\n        namesValuesMap: namesValuesMap,\r\n        actualNamesValuesMap: actualNamesValuesMap\r\n    };\r\n    t.enumInfo = info;\r\n    \r\n    return t;\r\n}\r\n\r\nexport function markType(t: Function, name: string,\r\n        baseType: Type = Base.prototype.$type, \r\n        interfaces: Type[] = null, \r\n        staticInitializer: () => void = null): Type {\r\n    t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\r\n\r\n    //TODO: do we need/want a flag on the function like we have in js?\r\n    if (typeof (<any>t).staticInit === \"function\") {\r\n        pendingStaticCtors.push(t);\r\n    }\r\n\r\n    //t.prototype.$ = t.prototype.$type;\r\n    (<any>t).$type = t.prototype.$type;\r\n    (<any>t).$ = t.prototype.$type;\r\n    return t.prototype.$type;\r\n}\r\n\r\nexport function callStaticConstructors() {\r\n    if (pendingStaticCtors.length > 0) {\r\n        //TODO: is the copy of the array needed? \r\n        let classes = Array.from(pendingStaticCtors);\r\n        pendingStaticCtors.length = 0;\r\n        for (let c of classes) {\r\n            c.staticInit();\r\n        }\r\n    }\r\n}\r\n//markType(Base, \"BaseObject\");\r\n//markType(Type, \"Type\");\r\n\r\nexport interface IConvertible {\r\n    toBoolean(provider: IFormatProvider): boolean;\r\n    toByte(provider: IFormatProvider): number;\r\n    toChar(provider: IFormatProvider): string;\r\n    toDateTime(provider: IFormatProvider): Date;\r\n    toDecimal(provider: IFormatProvider): number;\r\n    toDouble(provider: IFormatProvider): number;\r\n    toInt16(provider: IFormatProvider): number;\r\n    toInt32(provider: IFormatProvider): number;\r\n    toInt64(provider: IFormatProvider): number;\r\n    toSByte(provider: IFormatProvider): number;\r\n    toSingle(provider: IFormatProvider): number;\r\n    toString1(provider: IFormatProvider): string;\r\n    toUInt16(provider: IFormatProvider): number;\r\n    toUInt32(provider: IFormatProvider): number;\r\n    toUInt64(provider: IFormatProvider): number;\r\n}\r\nexport let IConvertible_$type = new Type(null, \"IConvertible\");\r\n\r\n\r\nexport class Enum extends Base {\r\n    static $t: Type = markType(Enum, \"Enum\");\r\n}\r\nclass EnumBox extends Enum {\r\n    constructor(public readonly value: number, type: Type) {\r\n        super();\r\n        this.$type = type;\r\n    }\r\n    getHashCode(): number {\r\n        return this.value;\r\n    }\r\n    // TODO: Fill out remaining IConvertible implementation\r\n    toDouble(provider: IFormatProvider): number {\r\n        return this.value;\r\n    }\r\n    toString(): string {\r\n        return EnumUtil.getName(this.$type, this.value);\r\n    }\r\n}\r\n\r\nexport function getBoxIfEnum<T>($t: Type, v: any) {\r\n    if (v !== null && $t) { // TODO: Remove the $t check here and fix the null ref issue\r\n        if ($t.isNullable) {\r\n            $t = <Type>$t.typeArguments[ 0 ];\r\n        }\r\n\r\n        if ($t.isEnumType) {\r\n            return enumGetBox<T>($t, v);\r\n        }\r\n    }\r\n\r\n    return v;\r\n};\r\n\r\nexport function enumGetBox<T>($t: Type, v: number): T {\r\n    if (!(<any>$t)._boxes) {\r\n        (<any>$t)._boxes = {};\r\n    }\r\n\r\n    if (!(<any>$t)._boxes[ v ]) {\r\n        (<any>$t)._boxes[v] = new EnumBox(v, $t);\r\n    }\r\n\r\n    return (<any>$t)._boxes[ v ];\r\n}\r\n\r\nexport class EnumUtil {\r\n    private static getValueFromName(values: any, enumType: Type, value: string, ignoreCase: boolean) {\r\n        if (values.hasOwnProperty(value)) {\r\n            return enumGetBox(enumType, values[value]);\r\n        } else if (ignoreCase) {\r\n            var upper = value.toUpperCase();\r\n\r\n            for (var x in values) {\r\n                if (x.toUpperCase() === upper) {\r\n                    return enumGetBox(enumType, values[x]);\r\n                }\r\n            }\r\n        } else {\r\n            // A.S. Nov 4, 2016 Adjusted to handle case where leading char is _.\r\n            var firstChar = value.charAt(0);\r\n            if (firstChar != \"_\") {\r\n                value = firstChar.toLowerCase() + value.substr(1);\r\n            } else {\r\n                value = \"_\" + value.charAt(1).toLowerCase() + value.substr(2);\r\n            }\r\n            if (values.hasOwnProperty(value)) {\r\n                return enumGetBox(enumType, values[value]);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static parse(enumType: Type, value: string, ignoreCase: boolean) {\r\n        //var info = Type.getDefinedNameAndNamespace(enumType.fullName);\r\n\r\n        //if (Type.canAssign(this.$type, enumType)) \r\n        {\r\n            //var p = info.namespace[ info.name ].prototype;\r\n            var values = enumType.isEnumType ? enumType.enumInfo.actualNamesValuesMap : enumType.InstanceConstructor.prototype;\r\n\r\n            let val = EnumUtil.getValueFromName(values, enumType, value, ignoreCase);\r\n            if (val !== null) {\r\n                return val;\r\n            }\r\n\r\n            if (enumType.isEnumType) {\r\n                values = enumType.enumInfo.namesValuesMap;\r\n\r\n                let val = EnumUtil.getValueFromName(values, enumType, value, ignoreCase);\r\n                if (val !== null) {\r\n                    return val;\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new Error(\"Invalid \" + enumType.name + \" value: \" + value);\r\n    }\r\n    \r\n    // static $getName(value: number): string {\r\n\r\n    // }\r\n    // static $value(): number {\r\n\r\n    // }\r\n    //private _v: number;\r\n\r\n    static enumHasFlag(value: number, flag: number): boolean {\r\n\t\t/*jslint bitwise: true */\r\n\t\treturn (value & flag) === flag;\r\n\t}\r\n\r\n    \r\n    static toString(enumType: Type, value: any): string {\r\n        return EnumUtil.getName<any>(enumType, value);\r\n    }\r\n\r\n    static getName<T>(enumType: Type, v: number): string {\r\n        if ((<any>enumType)._nameMap == undefined) {\r\n            let vals = EnumUtil.getValues<T>(enumType);\r\n            let names = enumType.isEnumType ? enumType.enumInfo.names : EnumUtil.getNames<T>(enumType);\r\n\r\n            let map: any = {};\r\n            for (let i = 0; i < vals.length; i++) {\r\n                map[vals[i]] = names[i];\r\n            }\r\n            (<any>enumType)._nameMap = map;\r\n        }\r\n        let lookup = (<any>enumType)._nameMap;\r\n        return lookup[v];\r\n    }\r\n\r\n    static getFlaggedName(enumType: Type, v: number, getName: (v: number) => string): string {\r\n        var names = [ ];\r\n        var original = v;\r\n        var zeroValueName;\r\n        var value;\r\n\r\n        var values: string[] = [ ];\r\n        for (var p in this) {\r\n            if (this.hasOwnProperty(p)) {\r\n                value = (<any>enumType)[ p ];\r\n                if (typeof (<any>enumType)[ p ] == \"number\") {\r\n                    values.push(p);\r\n                }\r\n            }\r\n        }\r\n\r\n        values.sort((a, b) => { return (<any>this)[ a ] - (<any>this)[ b ]; });\r\n\r\n        for (var i = values.length - 1; i >= 0; i--) {\r\n            value = <number>(<any>this)[ values[ i ] ];\r\n            if (value === 0) {\r\n                zeroValueName = getName(0);\r\n            }\r\n                /*jslint bitwise: true */\r\n            else if ((v & value) === value) {\r\n                v -= value;\r\n                names.unshift(getName(value));\r\n            }\r\n        }\r\n\r\n        if (v !== 0) {\r\n            return original.toString();\r\n        }\r\n\r\n        if (original !== 0) {\r\n            return names.join(\", \");\r\n        }\r\n\r\n        return zeroValueName || \"0\";\r\n    }\r\n    static getValues<T>($t: Type): number[] {\r\n        var result = [ ];\r\n\r\n        if ($t.isEnumType) {\r\n            for (let i = 0; i < $t.enumInfo.actualNames.length; i++) {\r\n                result.push($t.enumInfo.actualNamesValuesMap[$t.enumInfo.actualNames[i]]);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        var p = $t.isEnumType ?\r\n            $t.enumInfo.actualNames : $t.InstanceConstructor.prototype;\r\n        for (var member in p) {\r\n            if (p.hasOwnProperty(member)) {\r\n                if (typeof p[ member ] === \"number\") {\r\n                    result.push(p[ member ]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n    static getNames<T>($t: Type): string[] {\r\n        var result = [ ];\r\n\r\n        if ($t.isEnumType) {\r\n            for (let i = 0; i < $t.enumInfo.actualNames.length; i++) {\r\n                result.push($t.enumInfo.actualNames[i]);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        var p = $t.isEnumType ?\r\n            $t.enumInfo.actualNames : $t.InstanceConstructor.prototype;\r\n        for (var member in p) {\r\n            if (p.hasOwnProperty(member)) {\r\n                if (typeof p[ member ] === \"number\") {\r\n                    result.push(member);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n    \r\n    static getEnumValue<T>($t: Type, v: any): T {\r\n\t\tif (v !== null) {\r\n\t\t\tif (typeof v === \"number\") {\r\n\t\t\t\treturn <T><any>v;\r\n\t\t\t} else {\r\n\t\t\t\treturn v.value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn <T><any>0;\r\n\t}\r\n\r\n    static isDefined<T>($t: Type, value: T) {\r\n        value = typeGetValue(value);\r\n        var p = $t.isEnumType ?\r\n            $t.enumInfo.actualNamesValuesMap : $t.InstanceConstructor.prototype;\r\n        for (var member in p) {\r\n            if (p.hasOwnProperty(member)) {\r\n                if (p[ member ] === value) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // TODO: Fill out remaining IConvertible implementation\r\n    static toDouble(enumType: Type, value: any, provider: any): number {\r\n        return value.value;\r\n    }\r\n    static toObject<T>($t: Type, value: T): any {\r\n        return value;\r\n    }\r\n    static tryParse$1<TEnum>($tEnum: Type, value: string, ignoreCase: boolean, result: TEnum): { ret: boolean, p2: TEnum } {\r\n        try {\r\n            return {\r\n                ret: true,\r\n                p2: typeGetValue(EnumUtil.parse($tEnum, value, ignoreCase))\r\n            };\r\n        } catch (e) {\r\n            result = Type.createInstance<TEnum>($tEnum);\r\n            return {\r\n                ret: false,\r\n                p2: result\r\n            };\r\n        }\r\n    }\r\n}   \r\n\r\nexport class ValueType extends Base {\r\n    static $t: Type = markType(ValueType, \"ValueType\");\r\n}\r\n\r\nexport class Nullable extends Base {\r\n    static getUnderlyingType(nullableType: Type): Type {\r\n        if (nullableType.isGenericType !== undefined && nullableType.isGenericType &&\r\n            !nullableType.isGenericTypeDefinition &&\r\n            Nullable$1.prototype.$type.typeName == nullableType.typeName) {\r\n            return <Type>nullableType.genericTypeArguments[ 0 ];\r\n        }\r\n\r\n        return null;\r\n    }\r\n    static $t: Type = markType(Nullable, \"Nullable\");\r\n}\r\n\r\nexport class Nullable$1<T> extends Base {\r\n    protected $t: Type = null;\r\n    private _value: T = null;\r\n    constructor($t: Type, value: T) {\r\n        super();\r\n        this.$t = $t;\r\n        this.$type = this.$type.specialize(this.$t);\r\n        \r\n        if (value !== undefined) {\r\n            this._value = value;\r\n        }\r\n    }\r\n\r\n    static nullableEquals(v1: any, v2: any): boolean {\r\n\t\t/*jshint eqnull:true */\r\n\t\tvar v1IsNull = (v1 == null) || (!!v1.isNullable && !v1.hasValue);\r\n\t\tvar v2IsNull = (v2 == null) || (!!v2.isNullable && !v2.hasValue);\r\n\r\n\t\tif (v1IsNull && v2IsNull) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (v1IsNull != v2IsNull) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar val1 = v1;\r\n\t\tvar val2 = v2;\r\n\t\tif (v1.isNullable) {\r\n\t\t\tval1 = v1.value;\r\n\t\t}\r\n\t\tif (v2.isNullable) {\r\n\t\t\tval2 = v2.value;\r\n\t\t}\r\n\r\n\t\treturn val1 == val2;\r\n\t}\r\n\r\n    equals(value: Nullable$1<T>): boolean {\r\n        return Nullable$1.nullableEquals(this, value);\r\n    }\r\n    getHashCode(): number {\r\n        if (this._value === null) {\r\n            return 0;\r\n        }\r\n        if ((<any>this._value)[\"getHashCode\"] !== undefined) {\r\n            return (<any>this._value).getHashCode();\r\n        }\r\n        return Type.getPrimitiveHashCode(this._value);\r\n    }\r\n    get hasValue(): boolean {\r\n        return this._value !== null;\r\n    }\r\n    toString(): string {\r\n        return this._value === null ? \"\" : this._value.toString();\r\n    }\r\n    get value(): T {\r\n        return this._value;\r\n    }\r\n    set value(value: T) {\r\n        this._value = value;\r\n    }\r\n    getValueOrDefault(): T {\r\n        if (this.hasValue) {\r\n            return this._value;\r\n        } else {\r\n            return this.getDefaultValue();\r\n        }\r\n    }\r\n    getDefaultValue(): T {\r\n        if (Type.canAssign(Number_$type, this.$t)) {\r\n            return <T><any>0;\r\n        } else if (Type.canAssign(Boolean_$type, this.$t)) {\r\n            return <T><any>false;\r\n        } else if (this.$t.baseType == ValueType.prototype.$type) {\r\n            return Type.createInstance<T>(this.$t);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    getValueOrDefault1(defaultValue: T): T {\r\n        if (this.hasValue) {\r\n            return this._value;\r\n        } else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n    preIncrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        this._value = <T><any>((<number><any>this._value) + 1);\r\n        return this;\r\n    }\r\n    preDecrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        this._value = <T><any>((<number><any>this._value) - 1);\r\n        return this;\r\n    }\r\n    postIncrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        var originalValue = this._value;\r\n        this._value = <T><any>((<number><any>this._value) + 1);\r\n        return new Nullable$1(this.$t, originalValue);\r\n    }\r\n    postDecrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        var originalValue = this._value;\r\n        this._value = <T><any>((<number><any>this._value) - 1);\r\n        return new Nullable$1(this.$t, originalValue);\r\n    }\r\n    readonly isNullable = true;\r\n    static $t: Type = markType(Nullable$1, \"Nullable$1\");\r\n}\r\n\r\nexport function toNullable<T>(t: Type, value: T | Nullable$1<T>): Nullable$1<T> {\r\n\r\n    if (value == null) {\r\n        return t._$nullNullable || (t._$nullNullable = new Nullable$1<T>(t, null));\r\n    } else if ((<any>value).isNullable) {\r\n        return <Nullable$1<T>>value;\r\n    }\r\n\r\n    return new Nullable$1<T>(t, <T>value);\r\n}\r\n\r\nexport interface IComparable {\r\n    compareToObject(other: object): number;\r\n}\r\nexport let IComparable_$type = new Type(null, \"IComparable\");\r\nexport interface IComparable$1<T> {\r\n    compareTo(other: T): number;\r\n}\r\nexport let IComparable$1_$type = new Type(null, \"IComparable$1\");\r\nexport interface IEquatable$1<T> {\r\n    equals(other: T): boolean;\r\n}\r\nexport let IEquatable$1_$type = new Type(null, \"IEquatable$1\");\r\n\r\nexport interface INotifyPropertyChanged {\r\n    propertyChanged: (sender: object, args: PropertyChangedEventArgs) => void;\r\n}\r\nexport let INotifyPropertyChanged_$type = new Type(null, \"INotifyPropertyChanged\");\r\n\r\nexport class PropertyChangedEventArgs extends Base {\r\n    constructor(propertyName: string) {\r\n        super();\r\n        this._propertyName = propertyName;\r\n    }\r\n    private _propertyName: string = null;\r\n    get propertyName() : string {\r\n        return this._propertyName;\r\n    }\r\n    set propertyName(value: string) {\r\n        this._propertyName = value;\r\n    }\r\n\r\n    static $t: Type = markType(PropertyChangedEventArgs, \"PropertyChangedEventArgs\");\r\n}\r\n    \r\nexport class IteratorWrapper<T> implements IEnumerator$1<T> {\r\n    private _inner: Iterator<T> = null;\r\n    private _getNew: () => Iterator<T> = null;\r\n    constructor (inner: Iterator<T>, getNew: () => Iterator<T>) {\r\n        this._inner = inner;\r\n        this._getNew = getNew;\r\n    }\r\n    private _hasNext: boolean = true;\r\n    private _current: T = null;\r\n    moveNext(): boolean {\r\n        let next = this._inner.next();\r\n        this._hasNext = !next.done;\r\n        this._current = next.value;\r\n        return this._hasNext;\r\n    }\r\n    get current(): T {\r\n        return this._current;\r\n    }\r\n    get currentObject(): T {\r\n        return this._current;\r\n    }\r\n    dispose(): void {\r\n    }\r\n    reset(): void {\r\n        this._inner = this._getNew();\r\n        this._current = null;\r\n        this._hasNext = true;\r\n    }\r\n}\r\n\r\nexport class IterableWrapper<T> implements IEnumerable$1<T>, IEnumerable {\r\n    private _inner: () => Iterable<T> = null;\r\n    constructor (inner: () => Iterable<T>) {\r\n        this._inner = inner;\r\n    }\r\n    getEnumerator() : IEnumerator$1<T> {\r\n        return new IteratorWrapper<T>(this._inner()[Symbol.iterator](), () => this._inner()[Symbol.iterator]());\r\n    }\r\n    getEnumeratorObject(): IEnumerator {\r\n        return new IteratorWrapper<T>(this._inner()[Symbol.iterator](), () => this._inner()[Symbol.iterator]());\r\n    }\r\n}\r\n\r\nexport class EnumeratorWrapper<T> implements Iterator<T> {\r\n    private _inner: IEnumerator$1<T> = null;\r\n    \r\n    constructor (inner: IEnumerator$1<T>) {\r\n        this._inner = inner;\r\n    }\r\n    \r\n    next() : IteratorResult<T> {\r\n        let done = !this._inner.moveNext();\r\n        let value: T = null;\r\n        if (!done) {\r\n            value = this._inner.current;\r\n        }\r\n\r\n        return {\r\n            done: done,\r\n            value: value\r\n        };\r\n    }\r\n}\r\n\r\nexport class EnumeratorWrapperObject<T> implements Iterator<T> {\r\n    private _inner: IEnumerator = null;\r\n\r\n    constructor(inner: IEnumerator) {\r\n        this._inner = inner;\r\n    }\r\n\r\n    next(): IteratorResult<T> {\r\n        let done = !this._inner.moveNext();\r\n        let value: T = null;\r\n        if (!done) {\r\n            value = this._inner.currentObject;\r\n        }\r\n\r\n        return {\r\n            done: done,\r\n            value: value\r\n        };\r\n    }\r\n}\r\n\r\nexport function* getEn(arr: any[]) {\r\n    for (let item of arr) {\r\n        yield item;\r\n    }\r\n}\r\n\r\nexport function getEnumeratorObject(en: any): IEnumerator {\r\n    if ((<any>en).$type === undefined &&\r\n        (en instanceof Array || Array.isArray(en))) {\r\n        let arr = <any[]>en;\r\n        return new IteratorWrapper<any>(getEn(arr), () => getEn(arr));\r\n    }\r\n    return en.getEnumeratorObject();\r\n}\r\n\r\nexport function getEnumerator(en: any): IEnumerator$1<any> {\r\n    if ((<any>en).$type === undefined &&\r\n        (en instanceof Array || Array.isArray(en))) {\r\n        let arr = <any[]>en;\r\n        return new IteratorWrapper<any>(getEn(arr), () => getEn(arr));\r\n    }\r\n    return en.getEnumerator();\r\n}\r\n\r\nexport class EnumerableWrapper<T> implements Iterable<T> {\r\n    private _inner: IEnumerable$1<T> = null;\r\n    constructor (inner: IEnumerable$1<T>) {\r\n        this._inner = inner;\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new EnumeratorWrapper<T>(\r\n            getEnumerator(\r\n            this._inner));\r\n    }\r\n}\r\n\r\nexport class EnumerableWrapperObject implements Iterable<any> {\r\n    private _inner: IEnumerable = null;\r\n    constructor (inner: IEnumerable) {\r\n        this._inner = inner;\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new EnumeratorWrapperObject<any>(\r\n            getEnumeratorObject(\r\n            this._inner));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function toEnum<T>(v: () => Iterable<T>): IEnumerable$1<T> {\r\n    return new IterableWrapper<T>(v);\r\n}\r\n    \r\nexport function fromEnum<T>(v: IEnumerable$1<T>): Iterable<T> {\r\n    return new EnumerableWrapper<T>(v);\r\n}\r\n\r\nexport function toEn(v: () => Iterable<any>): IEnumerable {\r\n    return new IterableWrapper<any>(v);\r\n}\r\n    \r\nexport function fromEn<T>(v: IEnumerable): Iterable<T> {\r\n    return new EnumerableWrapperObject(v);\r\n}\r\n\r\nexport function *fromDict<T>(v: Map<string, any>): Iterable<{ key: string, value: any }> {\r\n    for (let item of v) {\r\n        let [key, value] = item;\r\n        yield { key: key, value: value };\r\n    }\r\n}\r\n\r\n\r\nexport let Number_$type: Type = new Type(Number, \"Number\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let String_$type: Type = new Type(String, \"String\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let Date_$type: Type = new Type(Date, \"Date\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let Boolean_$type: Type = new Type(Boolean, \"Boolean\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let Void_$type: Type = new Type(null, \"Void\", Base.prototype.$type);\r\nexport let n$ = Number_$type;\r\nexport let s$ = String_$type;\r\nexport let d$ = Date_$type;\r\nexport let b$ = Boolean_$type;\r\nexport let v$ = Void_$type;\r\n\r\nexport interface Delegate extends Function {\r\n    enumerate?(arr: any[]): void;\r\n    original?: any;\r\n    target?: any;\r\n}\r\n\r\nexport let Delegate_$type = new Type(null, \"Delegate\");\r\n\r\nexport function runOn<T>(target: any, func: T): T {\r\n    var self = <Function><any>func;\r\n    var ret: any = function () {\r\n        return self.apply(target, arguments);\r\n    };\r\n    ret.original = self;\r\n    ret.target = target;\r\n\r\n    return <T>ret;\r\n}\r\n\r\nexport function delegateCombine<T extends Delegate>(del1: T, del2: T): T {\r\n    if (!del1) {\r\n        return del2;\r\n    }\r\n\r\n    if (!del2) {\r\n        return del1;\r\n    }\r\n\r\n    var ret = function () {\r\n        del1.apply(null, arguments);\r\n        return del2.apply(null, arguments);\r\n    };\r\n    (<any>ret).enumerate = function (arr: any[]) {\r\n        if (del1) {\r\n            if (del1.enumerate) {\r\n                del1.enumerate(arr);\r\n            } else {\r\n                arr.push(del1);\r\n            }\r\n        }\r\n        if (del2) {\r\n            if (del2.enumerate) {\r\n                del2.enumerate(arr);\r\n            } else {\r\n                arr.push(del2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return <T><any>ret;\r\n};\r\n\r\n\r\nexport function delegateRemove<T extends Delegate>(del1: T, del2: T): T {\r\n    if (!del1) {\r\n        return null;\r\n    }\r\n    if (!del2) {\r\n        return del1;\r\n    }\r\n\r\n    var arr: any[] = [ ];\r\n    var del = null;\r\n    if (del1.enumerate) {\r\n        del1.enumerate(arr);\r\n    } else {\r\n        arr.push(del1);\r\n    }\r\n\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (del2.original) {\r\n            if (arr[ i ].original == del2.original &&\r\n                arr[ i ].target == del2.target) {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (arr[ i ] == del2) {\r\n            continue;\r\n        }\r\n\r\n        del = delegateCombine(del, arr[ i ]);\r\n    }\r\n\r\n    return del;\r\n};\r\n\r\n\r\nexport interface IDisposable {\r\n    dispose(): void\r\n}\r\nexport let IDisposable_$type = new Type(null, 'IDisposable');\r\n\r\nexport interface IEnumerable {\r\n    getEnumeratorObject() : IEnumerator\r\n}\r\nexport let IEnumerable_$type = new Type(null, \"IEnumerable\");\r\n\r\nexport interface IEnumerator {\r\n    currentObject: any;\r\n    moveNext(): boolean;\r\n    reset(): void;\r\n}\r\nexport let IEnumerator_$type = new Type(null, \"IEnumerator\");\r\n\r\nexport interface IEqualityComparer$1<T> {   \r\n    equalsC(x: T, y: T): boolean;\r\n    getHashCodeC(obj: T): number;\r\n}\r\nexport let IEqualityComparer$1_$type = new Type(null, \"IEqualityComparer$1\");\r\n\r\nexport interface IEqualityComparer {   \r\n    equals(x: any, y: any): boolean;\r\n    getHashCode(obj: any): number;\r\n}\r\nexport let IEqualityComparer_$type = new Type(null, \"IEqualityComparer\");\r\n\r\n\r\nexport interface ICollection extends IEnumerable {\r\n    readonly count: number;\r\n    copyTo(array: any[], index: number): void;\r\n    readonly isSynchronized: boolean;\r\n    readonly syncRoot: any;  \r\n}\r\nexport let ICollection_$type = new Type(null, \"ICollection\", null, [ IEnumerable_$type ]);\r\nexport interface IList extends ICollection {\r\n    readonly isFixedSize: boolean;\r\n    readonly isReadOnly: boolean;\r\n    isSynchronized: boolean;\r\n    item(index: number, value?: any): any;\r\n    add(item: any): void;\r\n    clear(): void;\r\n    contains(item: any): boolean;\r\n    indexOf(item: any): number;\r\n    insert(index: number, item: any): void;\r\n    remove(item: any): boolean;\r\n    removeAt(index: number): void;\r\n}\r\nexport let IList_$type = new Type(null, \"IList\", null, [ IEnumerable_$type, ICollection_$type ]);\r\n\r\nexport interface IEnumerable$1<T> extends IEnumerable {\r\n    getEnumerator() : IEnumerator$1<T>\r\n}\r\nexport let IEnumerable$1_$type = new Type(null, \"IEnumerable$1\", null, [ IEnumerable_$type ]);\r\n\r\nexport interface ICollection$1<T> extends IEnumerable$1<T>, IEnumerable {\r\n        readonly count: number;\r\n        readonly isReadOnly: boolean;\r\n        add(item: T): void;   \r\n        clear(): void;\r\n        contains(item: T): boolean;\r\n        copyTo(array: T[], arrayIndex: number): void;\r\n\t\tremove(item: T): boolean;\r\n}\r\nexport let ICollection$1_$type = new Type(null, \"ICollection$1\", null, [ IEnumerable$1_$type.specialize(0), IEnumerable_$type ]);\r\n\r\nexport interface IList$1<T> extends ICollection$1<T>, IEnumerable$1<T>, IEnumerable {\r\n        item(index: number, value?: T): T;\r\n        indexOf(item: T): number;\r\n        insert(index: number, item: T): void;\r\n        removeAt(index: number): void;\r\n}\r\nexport let IList$1_$type = new Type(null, \"IList$1\", null,  [ \r\n    ICollection$1_$type.specialize(0),\r\n    IEnumerable$1_$type.specialize(0),\r\n    IEnumerable_$type ]);\r\n\r\nexport interface IEnumerator$1<T> extends IEnumerator, IDisposable {\r\n    current: T;\r\n    moveNext(): boolean;\r\n    reset(): void;\r\n}\r\nexport let IEnumerator$1_$type = new Type(null, \"IEnumerator$1\", null, [ IEnumerator_$type, IDisposable_$type ]);\r\n\r\nexport interface IDictionary {\r\n    // count: number;\r\n    // isFixedSize: boolean;\r\n    // isReadOnly: boolean;\r\n    // isSynchronized: boolean;\r\n    // item(key: any): object;\r\n    \r\n    // add(key: any, item: any): void;\r\n    // clear(): void;\r\n    // contains(key: any): boolean;\r\n    // remove(key: any): boolean;\r\n}\r\nexport let IDictionary_$type = new Type(null, \"IDictionary\");\r\n\r\nexport class BaseError extends Base {\r\n    static $t: Type = markType(BaseError, \"BaseError\");\r\n    constructor(initNumber: number = -1, ...rest: any[]) {\r\n        super();\r\n        if (initNumber >= 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n        }\r\n        return;\r\n    }   \r\n    protected get_message(): string {\r\n        return this._message;\r\n    }\r\n    get message() : string {\r\n        return this.get_message();\r\n    }\r\n    get innerException(): any {\r\n        return this._innerException;\r\n    }\r\n    private _message: string = null;\r\n    private _innerException: any = null;\r\n    init1(initNumber: number, message: string) {\r\n        this._message = message;\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        this._message = message;\r\n        this._innerException = innerException;\r\n    }\r\n    toString() : string {\r\n        return this._message;\r\n    }\r\n}\r\n\r\nexport class SystemException extends BaseError {\r\n\tconstructor(initNumber: number, ...rest: any[]) {\r\n        super(0);\r\n        if (initNumber > 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n        //super(0);\r\n    }\r\n    init1(initNumber: number, message: string) {\r\n        super.init1(1, message);\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        super.init2(2, message, innerException);\r\n    }\r\n    static $t: Type = markType(SystemException, \"SystemException\", BaseError.prototype.$type);\r\n}\r\n\r\nexport class NotSupportedException extends SystemException {\r\n    constructor (initNumber: number, ...rest: any[]) {\r\n        super(0);\r\n        if (initNumber > 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    init1(initNumber: number, message: string) {\r\n        super.init1(1, message);\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        super.init2(2, message, innerException);\r\n    }\r\n    static $t: Type = markType(NotSupportedException, \"NotSupportedException\", SystemException.prototype.$type);\r\n}\r\n\r\nexport class FormatException extends SystemException {\r\n    constructor (initNumber: number, ...rest: any[]) {\r\n        super(0);\r\n        if (initNumber > 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    init1(initNumber: number, message: string) {\r\n        super.init1(1, message);\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        super.init2(2, message, innerException);\r\n    }\r\n    static $t: Type = markType(FormatException, \"FormatException\", SystemException.prototype.$type);\r\n}\r\n\r\nexport class PointUtil {\r\n    static equals(p1: Point, p2: Point): boolean {\r\n        if (p1 == null && p2 == null) {\r\n            return true;\r\n        }\r\n        if (p1 == null && p2 != null) {\r\n            return false\r\n        }\r\n        if (p1 != null && p2 == null) {\r\n            return false;\r\n        }\r\n        return p1.x == p2.x && p1.y == p2.y;\r\n    }\r\n    static notEquals(p1: Point, p2: Point): boolean {\r\n        return !PointUtil.equals(p1, p2);\r\n    }\r\n    static create() {\r\n        return { x: 0, y: 0, $type: Point_$type };\r\n    }\r\n    static createXY(x: number, y: number) {\r\n        return { x: x, y: y, $type: Point_$type };\r\n    }\r\n}\r\nexport interface Point {\r\n    x: number;\r\n    y: number;\r\n}\r\nexport let Point_$type = new Type(null, \"Point\");\r\n\r\nexport enum SeekOrigin {\r\n    Begin,\r\n    Current,\r\n    End\r\n}\r\n\r\nexport abstract class Stream extends Base {\r\n\t\tclose(): void {\r\n\t\t\tthis.disposeCore(true);\r\n\t\t}\r\n\t\tdispose(): void {\r\n\t\t\tthis.close();\r\n\t\t}\r\n\t\tprotected disposeCore(disposing: boolean): void {\r\n\t\t}\r\n\t\tabstract flush(): void;\r\n\t\treadByte(): number {\r\n\t\t\tvar bytes = [ 0 ];\r\n\t\t\tvar count = (<any>this).read(bytes, 0, 1);\r\n\t\t\tif (count === 0) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\r\n\t\t\treturn bytes[ 0 ];\r\n\t\t}\r\n\t\twriteByte(value: number) {\r\n\t\t\t(<any>this).write([ value ], 0, 1);\r\n        }\r\n        abstract read(bytes: number[], offset: number, count: number): number;\r\n        abstract seek(offset: number, origin: SeekOrigin): number;\r\n        abstract setLength(value: number): void;\r\n        abstract write(buffer: number[], offset: number, count: number): void;\r\n        abstract get canRead(): boolean;\r\n        abstract get canSeek(): boolean;\r\n        abstract get canWrite(): boolean;\r\n        abstract get length(): number;\r\n        abstract get position(): number;\r\n        abstract set position(value: number);\r\n\r\n        static $t: Type = markType(Stream, \"Stream\");\r\n    }\r\n\r\n    export class EventArgs extends Base {\r\n        private static _empty: EventArgs;\r\n        static get empty(): EventArgs {\r\n            if (EventArgs._empty) {\r\n                return EventArgs._empty;\r\n            }\r\n            EventArgs._empty = new EventArgs;\r\n            return EventArgs._empty;\r\n        }\r\n        static $t: Type = markType(EventArgs, \"EventArgs\");\r\n    }\r\n\r\n    export interface IFormatProvider {\r\n        getFormat(formatType: Type): any;\r\n    }\r\n    export let IFormatProvider_$type = new Type(null, 'IFormatProvider');\r\n\r\nexport let Array_$type: Type = new Type(Array, \"Array\", Base.prototype.$type, [IEnumerable_$type, ICollection_$type]);\r\nexport let a$ = Array_$type;\r\n\r\nexport class TypeRegistrar {\r\n    static _registrar: Map<string, Function> = new Map<string, Function>();\r\n    static create(typeName: string, ...rest: any[]): any {\r\n        if (TypeRegistrar.isRegistered(typeName)) {\r\n            let C: any = TypeRegistrar.get(typeName);\r\n            if (C.htmlTagName) {\r\n                return document.createElement(C.htmlTagName);\r\n            } else {\r\n                return new C(...rest);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static register(typeName: string, type: Type): void {\r\n        TypeRegistrar._registrar.set(typeName, type.InstanceConstructor);\r\n    }\r\n\r\n    static registerCons(typeName: string, type: Function): void {\r\n        TypeRegistrar._registrar.set(typeName, type);\r\n    }\r\n\r\n    static callRegister(typeName: string): void {\r\n        let type = TypeRegistrar.get(typeName);\r\n        if (type !== undefined && type !== null &&\r\n            type[\"register\"] !== undefined) {\r\n            type[\"register\"]();\r\n        }\r\n    }\r\n\r\n    static isRegistered(typeName: string): boolean {\r\n        return TypeRegistrar.get(typeName) !== null;\r\n    }\r\n\r\n    static get(typeName: string): any {\r\n        if (TypeRegistrar._registrar.has(typeName)) {\r\n            return TypeRegistrar._registrar.get(typeName);\r\n        }\r\n\r\n        if (typeName.indexOf(\"Igx\") == 0) {\r\n            let igc = typeName.replace(\"Igx\", \"Igc\");\r\n            if (TypeRegistrar._registrar.has(igc)) {\r\n                return TypeRegistrar._registrar.get(igc);\r\n            }\r\n            let igr = typeName.replace(\"Igx\", \"Igr\");\r\n            if (igr.indexOf(\"Component\") == igr.length - 9) {\r\n                igr = igr.substring(0, igr.length - 9);\r\n            }\r\n            if (TypeRegistrar._registrar.has(igr)) {\r\n                return TypeRegistrar._registrar.get(igr);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static createFromInternal(internal: any, prefix: string, postfix: string): any {\r\n        if (!internal) {\r\n            return null;\r\n        }\r\n        if (!internal.$type) {\r\n            return null;\r\n        }\r\n        let name = internal.$type.name;\r\n        let externalName = prefix + name + postfix;\r\n        if (!TypeRegistrar.isRegistered(externalName)) {\r\n            return null;\r\n        }\r\n        return TypeRegistrar.create(externalName);\r\n    }\r\n}\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseError, Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArgumentException extends BaseError {\r\n\tstatic $t: Type = markType(ArgumentException, 'ArgumentException', (<any>BaseError).$type);\r\n\tconstructor(initNumber: number);\r\n\tconstructor(initNumber: number, message: string);\r\n\tconstructor(initNumber: number, message: string, paramName: string);\r\n\tconstructor(initNumber: number, message: string, innerException: BaseError);\r\n\tconstructor(initNumber: number, ..._rest: any[]);\r\n\tconstructor(initNumber: number, ..._rest: any[]) {\r\n\t\tinitNumber = (initNumber == void 0) ? 0 : initNumber;\r\n\t\tswitch (initNumber) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet message: string = <string>_rest[0];\r\n\t\t\t\tsuper(1, message);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t{\r\n\t\t\t\tlet message: string = <string>_rest[0];\r\n\t\t\t\tlet paramName: string = <string>_rest[1];\r\n\t\t\t\tsuper(1, message);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t{\r\n\t\t\t\tlet message: string = <string>_rest[0];\r\n\t\t\t\tlet innerException: BaseError = <BaseError>_rest[1];\r\n\t\t\t\tsuper(2, message, innerException);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nexport function log10(value: number): number {\r\n\t\treturn Math.log(value) / Math.log(10);\r\n}\r\nexport function toDouble(value: number): number {\r\n\t\treturn +value;\r\n}\r\nexport let toDecimal = toDouble;\r\nexport function compareTo(value: number, other: number) {\r\n\tif (value == other) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tif (value < other) {\r\n\t\t\treturn -1;\r\n\t}\r\n\treturn 1;\r\n}\r\nexport function isInfinity(value: number): boolean {\r\n\t\treturn !isFinite(value) && !isNaN_(value);\r\n}\r\nexport function intDivide(value: number, divisor: number): number {\r\n\tvar result = value / divisor;\r\n\treturn truncate(result);\r\n}\r\nexport function truncate(val: number): number {\r\n\tif (val >= 0) {\r\n\t\treturn Math.floor(val);\r\n\t} else {\r\n\t\treturn Math.ceil(val);\r\n\t}\r\n}\r\nexport function logBase(n: number, n2: number): number {\r\n\treturn Math.log(n) / Math.log(n2);\r\n}\r\nexport function tryParseNumber(s: string, v?: number) : { p1: number, ret: boolean } {\r\n\tvar value = Number(s);\r\n\tif (value !== null && isFinite(value) && s.trim().length !== 0) {\r\n\t\treturn {\r\n\t\t\tp1: value,\r\n\t\t\tret: true\r\n\t\t};\r\n\t} else {\r\n\t\treturn {\r\n\t\t\tp1: 0,\r\n\t\t\tret: false\r\n\t\t};\r\n\t}\r\n}\r\nexport function isNegativeInfinity(v: number) {\r\n\treturn v == Number.NEGATIVE_INFINITY;\r\n}\r\nexport function isPositiveInfinity(v: number) {\r\n\treturn v == Number.POSITIVE_INFINITY;\r\n}\r\nexport function isNaN_(v: number) {\r\n\treturn v !== v; // http://us6.campaign-archive1.com/?u=2cc20705b76fa66ab84a6634f&id=43bf7f05e9\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n    export function getColorStringSafe(v: any): string {\r\n\t\t/*jshint eqnull:true */\r\n\t\treturn v == null ? null : v.colorString();\r\n\t};\r\n\r\n\texport const wellKnownColors: { [val: string]: string } = {\r\n\t\taliceblue: \"f0f8ff\",\r\n\t\tantiquewhite: \"faebd7\",\r\n\t\taqua: \"00ffff\",\r\n\t\taquamarine: \"7fffd4\",\r\n\t\tazure: \"f0ffff\",\r\n\t\tbeige: \"f5f5dc\",\r\n\t\tbisque: \"ffe4c4\",\r\n\t\tblack: \"000000\",\r\n\t\tblanchedalmond: \"ffebcd\",\r\n\t\tblue: \"0000ff\",\r\n\t\tblueviolet: \"8a2be2\",\r\n\t\tbrown: \"a52a2a\",\r\n\t\tburlywood: \"deb887\",\r\n\t\tcadetblue: \"5f9ea0\",\r\n\t\tchartreuse: \"7fff00\",\r\n\t\tchocolate: \"d2691e\",\r\n\t\tcoral: \"ff7f50\",\r\n\t\tcornflowerblue: \"6495ed\",\r\n\t\tcornsilk: \"fff8dc\",\r\n\t\tcrimson: \"dc143c\",\r\n\t\tcyan: \"00ffff\",\r\n\t\tdarkblue: \"00008b\",\r\n\t\tdarkcyan: \"008b8b\",\r\n\t\tdarkgoldenrod: \"b8860b\",\r\n\t\tdarkgray: \"a9a9a9\",\r\n\t\tdarkgreen: \"006400\",\r\n\t\tdarkkhaki: \"bdb76b\",\r\n\t\tdarkmagenta: \"8b008b\",\r\n\t\tdarkolivegreen: \"556b2f\",\r\n\t\tdarkorange: \"ff8c00\",\r\n\t\tdarkorchid: \"9932cc\",\r\n\t\tdarkred: \"8b0000\",\r\n\t\tdarksalmon: \"e9967a\",\r\n\t\tdarkseagreen: \"8fbc8f\",\r\n\t\tdarkslateblue: \"483d8b\",\r\n\t\tdarkslategray: \"2f4f4f\",\r\n\t\tdarkturquoise: \"00ced1\",\r\n\t\tdarkviolet: \"9400d3\",\r\n\t\tdeeppink: \"ff1493\",\r\n\t\tdeepskyblue: \"00bfff\",\r\n\t\tdimgray: \"696969\",\r\n\t\tdodgerblue: \"1e90ff\",\r\n\t\tfeldspar: \"d19275\",\r\n\t\tfirebrick: \"b22222\",\r\n\t\tfloralwhite: \"fffaf0\",\r\n\t\tforestgreen: \"228b22\",\r\n\t\tfuchsia: \"ff00ff\",\r\n\t\tgainsboro: \"dcdcdc\",\r\n\t\tghostwhite: \"f8f8ff\",\r\n\t\tgold: \"ffd700\",\r\n\t\tgoldenrod: \"daa520\",\r\n\t\tgray: \"808080\",\r\n\t\tgreen: \"008000\",\r\n\t\tgreenyellow: \"adff2f\",\r\n\t\thoneydew: \"f0fff0\",\r\n\t\thotpink: \"ff69b4\",\r\n\t\tindianred: \"cd5c5c\",\r\n\t\tindigo: \"4b0082\",\r\n\t\tivory: \"fffff0\",\r\n\t\tkhaki: \"f0e68c\",\r\n\t\tlavender: \"e6e6fa\",\r\n\t\tlavenderblush: \"fff0f5\",\r\n\t\tlawngreen: \"7cfc00\",\r\n\t\tlemonchiffon: \"fffacd\",\r\n\t\tlightblue: \"add8e6\",\r\n\t\tlightcoral: \"f08080\",\r\n\t\tlightcyan: \"e0ffff\",\r\n\t\tlightgoldenrodyellow: \"fafad2\",\r\n\t\tlightgrey: \"d3d3d3\",\r\n\t\tlightgreen: \"90ee90\",\r\n\t\tlightpink: \"ffb6c1\",\r\n\t\tlightsalmon: \"ffa07a\",\r\n\t\tlightseagreen: \"20b2aa\",\r\n\t\tlightskyblue: \"87cefa\",\r\n\t\tlightslateblue: \"8470ff\",\r\n\t\tlightslategray: \"778899\",\r\n\t\tlightsteelblue: \"b0c4de\",\r\n\t\tlightyellow: \"ffffe0\",\r\n\t\tlime: \"00ff00\",\r\n\t\tlimegreen: \"32cd32\",\r\n\t\tlinen: \"faf0e6\",\r\n\t\tmagenta: \"ff00ff\",\r\n\t\tmaroon: \"800000\",\r\n\t\tmediumaquamarine: \"66cdaa\",\r\n\t\tmediumblue: \"0000cd\",\r\n\t\tmediumorchid: \"ba55d3\",\r\n\t\tmediumpurple: \"9370d8\",\r\n\t\tmediumseagreen: \"3cb371\",\r\n\t\tmediumslateblue: \"7b68ee\",\r\n\t\tmediumspringgreen: \"00fa9a\",\r\n\t\tmediumturquoise: \"48d1cc\",\r\n\t\tmediumvioletred: \"c71585\",\r\n\t\tmidnightblue: \"191970\",\r\n\t\tmintcream: \"f5fffa\",\r\n\t\tmistyrose: \"ffe4e1\",\r\n\t\tmoccasin: \"ffe4b5\",\r\n\t\tnavajowhite: \"ffdead\",\r\n\t\tnavy: \"000080\",\r\n\t\toldlace: \"fdf5e6\",\r\n\t\tolive: \"808000\",\r\n\t\tolivedrab: \"6b8e23\",\r\n\t\torange: \"ffa500\",\r\n\t\torangered: \"ff4500\",\r\n\t\torchid: \"da70d6\",\r\n\t\tpalegoldenrod: \"eee8aa\",\r\n\t\tpalegreen: \"98fb98\",\r\n\t\tpaleturquoise: \"afeeee\",\r\n\t\tpalevioletred: \"d87093\",\r\n\t\tpapayawhip: \"ffefd5\",\r\n\t\tpeachpuff: \"ffdab9\",\r\n\t\tperu: \"cd853f\",\r\n\t\tpink: \"ffc0cb\",\r\n\t\tplum: \"dda0dd\",\r\n\t\tpowderblue: \"b0e0e6\",\r\n\t\tpurple: \"800080\",\r\n\t\tred: \"ff0000\",\r\n\t\trosybrown: \"bc8f8f\",\r\n\t\troyalblue: \"4169e1\",\r\n\t\tsaddlebrown: \"8b4513\",\r\n\t\tsalmon: \"fa8072\",\r\n\t\tsandybrown: \"f4a460\",\r\n\t\tseagreen: \"2e8b57\",\r\n\t\tseashell: \"fff5ee\",\r\n\t\tsienna: \"a0522d\",\r\n\t\tsilver: \"c0c0c0\",\r\n\t\tskyblue: \"87ceeb\",\r\n\t\tslateblue: \"6a5acd\",\r\n\t\tslategray: \"708090\",\r\n\t\tsnow: \"fffafa\",\r\n\t\tspringgreen: \"00ff7f\",\r\n\t\tsteelblue: \"4682b4\",\r\n\t\ttan: \"d2b48c\",\r\n\t\tteal: \"008080\",\r\n\t\tthistle: \"d8bfd8\",\r\n\t\ttomato: \"ff6347\",\r\n\t\tturquoise: \"40e0d0\",\r\n\t\tviolet: \"ee82ee\",\r\n\t\tvioletred: \"d02090\",\r\n\t\twheat: \"f5deb3\",\r\n\t\twhite: \"ffffff\",\r\n\t\twhitesmoke: \"f5f5f5\",\r\n\t\tyellow: \"ffff00\",\r\n        yellowgreen: \"9acd32\"\r\n\t};\r\n\r\nexport function stringToColor(str: string) {\r\n    var ret = {\r\n        a: 255,\r\n        r: 0,\r\n        g: 0,\r\n        b: 0\r\n    };\r\n\r\n    var asColorName = str.replace(\" \", \"\").toLowerCase();\r\n\r\n    if (asColorName === \"transparent\") {\r\n        return { a: 0, r: 0, g: 0, b: 0 };\r\n    }\r\n\r\n    if (wellKnownColors[ asColorName ] !== undefined) {\r\n        str = wellKnownColors[ asColorName ];\r\n    }\r\n    var parts;\r\n    if (str.lastIndexOf(\"rgba\", 0) === 0) {\r\n        str = str.replace(\"rgba\", \"\").replace(\" \", \"\").replace(\"(\", \"\").replace(\")\", \"\");\r\n        parts = str.split(\",\");\r\n        ret.r = parseInt(parts[ 0 ], 10);\r\n        ret.g = parseInt(parts[ 1 ], 10);\r\n        ret.b = parseInt(parts[ 2 ], 10);\r\n        ret.a = parseFloat(parts[ 3 ]) * 255.0;\r\n    } else if (str.lastIndexOf(\"rgb\", 0) === 0) {\r\n        str = str.replace(\"rgb\", \"\").replace(\" \", \"\").replace(\"(\", \"\").replace(\")\", \"\");\r\n        parts = str.split(\",\");\r\n        ret.r = parseInt(parts[ 0 ], 10);\r\n        ret.g = parseInt(parts[ 1 ], 10);\r\n        ret.b = parseInt(parts[ 2 ], 10);\r\n    } else {\r\n        str = str.replace(\"#\", \"\").replace(\" \", \"\");\r\n        if (str.length === 8) {\r\n\t\t\tret.r = parseInt(str.substr(0, 2), 16);\r\n\t\t\tret.g = parseInt(str.substr(2, 2), 16);\r\n            ret.b = parseInt(str.substr(4, 2), 16);\r\n            ret.a = parseInt(str.substr(6, 2), 16);\r\n\t\t} else if (str.length === 6) {\r\n            ret.r = parseInt(str.substr(0, 2), 16);\r\n            ret.g = parseInt(str.substr(2, 2), 16);\r\n            ret.b = parseInt(str.substr(4, 2), 16);\r\n        } else if (str.length === 3) {\r\n            ret.r = parseInt(str.substr(0, 1) + str.substr(0, 1), 16);\r\n            ret.g = parseInt(str.substr(1, 1) + str.substr(1, 1), 16);\r\n            ret.b = parseInt(str.substr(2, 1) + str.substr(2, 1), 16);\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n\r\nexport function rgbToHex(color: string): string {\r\n    /* Convert color from RGB to HEX format. null if non-rgb color is provided.\r\n        paramType=\"string\" optional=\"false\" Color in RGB format.\r\n        returnType=\"string|null\" Returns converted color from RGB to HEX format. null if non-rgb color is provided.\r\n    */\r\n    var r, g, b, colHex = null;\r\n\r\n    if (color.charAt(0) === \"r\") {\r\n        let colorArr = color.replace(\"rgb(\", \"\").replace(\")\", \"\").split(\",\");\r\n        r = parseInt(colorArr[ 0 ], 10).toString(16);\r\n        g = parseInt(colorArr[ 1 ], 10).toString(16);\r\n        b = parseInt(colorArr[ 2 ], 10).toString(16);\r\n        r = r.length === 1 ? \"0\" + r : r;\r\n        g = g.length === 1 ? \"0\" + g : g;\r\n        b = b.length === 1 ? \"0\" + b : b;\r\n        colHex = \"#\" + r + g + b;\r\n    }\r\n    return colHex;\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IEnumerable$1, Type, FormatException } from \"./type\";\r\nimport { getEnumerator } from \"./type\";\r\nimport { EnumUtil } from './type';\r\n\r\nexport const enum CompareOptions {\r\n    None = 0,\r\n    IgnoreCase = 1,\r\n    IgnoreNonSpace = 2,\r\n    IgnoreSymbols = 4,\r\n    IgnoreKanaType = 8,\r\n    IgnoreWidth = 16,\r\n    OrdinalIgnoreCase = 268435456,\r\n    StringSort = 536870912,\r\n    Ordinal = 1073741824\r\n}\r\n\r\nexport const enum StringComparison {\r\n    CurrentCulture = 0,\r\n    CurrentCultureIgnoreCase = 1,\r\n    InvariantCulture = 2,\r\n    InvariantCultureIgnoreCase = 3,\r\n    Ordinal = 4,\r\n    OrdinalIgnoreCase = 5\r\n}\r\n\r\n\r\n\r\nexport function stringStartsWith(str: string, check: string): boolean {\r\n    return str.indexOf(check) == 0;\r\n}\r\nexport function stringEndsWith(str: string, check: string): boolean {\r\n    let ind = str.lastIndexOf(check);\r\n    return ind >= 0 && ind == str.length - check.length;\r\n}\r\nexport function stringContains(str: string, check: string): boolean {\r\n    return str.indexOf(check) != -1;\r\n}\r\n\r\nexport function stringCreateFromCharArray(charArray: string[]): string {\r\n    return charArray.join(\"\");\r\n}\r\n\r\nexport function stringCreateFromChar(char: string, count: number): string {\r\n    var ret = \"\";\r\n    for (var i = 0; i < count; i++) {\r\n        ret = ret + char;\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nexport function stringCreateFromCharArraySlice(charArray: string[], start: number, length: number): string {\r\n    var ret = \"\";\r\n    for (var i = 0; i < length; i++) {\r\n        ret = ret + charArray[start + i];\r\n    }\r\n\r\n    return ret;\r\n};\r\n\r\nexport function stringToCharArray(target: string): string[] {\r\n    return target.split(\"\");\r\n}\r\n\r\nexport function stringCopyToCharArray(source: string, sourceIndex: number, destination: string[], destinationIndex: number, count: number) {\r\n    for (var i = destinationIndex; i < destinationIndex + count; i++) {\r\n        destination[i] = source.charAt(sourceIndex + i - destinationIndex);\r\n    }\r\n};\r\n\r\nexport function stringIsDigit(str: string, index?: number): boolean {\r\n    index = index || 0;\r\n    var ch = str.charAt(index);\r\n    if (ch >= \"0\" && ch <= \"9\") {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport function charMaxValue(): string {\r\n    return \"\\uffff\";\r\n}\r\n\r\nexport function charMinValue(): string {\r\n    return \"\\u0000\";\r\n}\r\n\r\n// static toDateTime(target: string) {\r\n// \tvar result = new Date(target);\r\n// \tif (!isNaN(+result)) {\r\n// \t\treturn result;\r\n// \t}\r\n\r\n// \t// TODO: Cache this regex?\r\n// \tif (/^((([0-9]{1,4})\\s*(\\s+((a|p)m?)\\s*))|(([0-9]{1,4})\\s*:\\s*([0-9]?[0-9])\\s*(:\\s*([0-9]?[0-9])\\s*(.\\s*([0-9]{0,4})[0-9]*\\s*)?)?(\\s+((a|p)m?)\\s*)?)|(\\s*([0-9]?[0-9])\\s*:\\s*([0-9]?[0-9])\\s*.\\s*([0-9]{0,4})[0-9]*\\s*(\\s+((a|p)m?)\\s*)?))$/i.test(target)) {\r\n// \t\t// The string can be a time string only, in which case we should return today at that time.\r\n// \t\treturn new Date(new Date().toDateString() + \" \" + target);\r\n// \t}\r\n\r\n// \tthrow new FormatException(1, \"The string cannot be converted to a date\");\r\n// }\r\n// static toDecimal(target: string) {\r\n// \tvar result = +target;\r\n\r\n// \tif (isNaN(result)) {\r\n// \t\tnew FormatException(1, \"The string cannot be converted to a number\");\r\n// \t}\r\n\r\n// \treturn result;\r\n// }\r\nexport function stringToString1(target: string): string {\r\n    return target.toString();\r\n}\r\n\r\nexport function stringRemove(target: string, index: number, count?: number): string {\r\n    if (!count || ((index + count) > target.length)) {\r\n        return target.substr(0, index);\r\n    }\r\n    return target.substr(0, index) + target.substr(index + count);\r\n}\r\n\r\nexport function stringCompareTo(target: string, other: string) {\r\n    if (target == other) {\r\n        return 0;\r\n    }\r\n    if (target < other) {\r\n        return -1;\r\n    }\r\n    return 1;\r\n}\r\nexport let stringCompare = stringCompareTo;\r\n\r\nexport function stringIsNullOrEmpty(target: string) { return !target || target.length < 1; }\r\nexport function stringIsNullOrWhiteSpace(target: string) { return !target || target.trim().length < 1; }\r\nexport function stringEmpty() { return \"\"; }\r\nexport function stringEquals(target: string, other: string) { return target == other }\r\n\r\nexport function stringEscapeRegExp(str: string): string {\r\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n}\r\n\r\nexport function createGuid() {\r\n    /*jslint bitwise: true */\r\n    function S4() {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    }\r\n\r\n    return (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() +\r\n        S4() + S4()).toLowerCase();\r\n}\r\n\r\nexport function stringConcat(...s: string[]) {\r\n    return String.prototype.concat(...s);\r\n}\r\n\r\nexport function stringReplace(str: string, oldValue: string, newValue: string): string {\r\n    return str.replace(new RegExp(stringEscapeRegExp(oldValue), \"g\"), newValue);\r\n}\r\n\r\nexport function stringJoin(sep: string, ...vals: string[]): string {\r\n    return vals.join(sep);\r\n}\r\n\r\nexport function stringJoin1<T>($t: Type, sep: string, vals: IEnumerable$1<T>) {\r\n    var result;\r\n    var en = getEnumerator(vals);\r\n    while (en.moveNext()) {\r\n        var v = en.current.toString();\r\n\r\n        if (result === undefined) {\r\n            result = v;\r\n        } else {\r\n            result += sep + v;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function stringToString$1<T>($t: Type, v: any) {\r\n    if (v !== null && $t) {\r\n        if ($t.isNullable) {\r\n            $t = <Type>$t.typeArguments[0];\r\n        }\r\n\r\n        if ($t.isEnumType) {\r\n            return EnumUtil.getName($t, v);\r\n        }\r\n    }\r\n\r\n    return v.toString();\r\n}\r\n\r\nexport function stringToLocaleLower(str: string, locale?: any): string {\r\n    if (locale == null || locale.name == null)\r\n        return str.toLocaleLowerCase();\r\n\r\n    return (<any>str).toLocaleLowerCase(locale.name);\r\n}\r\n\r\nexport function stringToLocaleUpper(str: string, locale?: any): string {\r\n    if (locale == null || locale.name == null)\r\n        return str.toLocaleUpperCase();\r\n\r\n    return (<any>str).toLocaleUpperCase(locale.name);\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ValueType, Base, typeCast, Nullable$1, markStruct, Type } from \"./type\";\r\nimport { ArgumentException } from \"./ArgumentException\";\r\nimport { truncate } from \"./number\";\r\nimport { stringToColor } from \"./colorCore\";\r\nimport { stringStartsWith } from \"./string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class Color extends ValueType {\r\n\tstatic $t: Type = markStruct(Color, 'Color');\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tprivate _a: number = 0;\r\n\tget a(): number {\r\n\t\treturn this._a;\r\n\t}\r\n\tset a(value: number) {\r\n\t\tthis._a = <number>truncate(Math.round(<number>value));\r\n\t\tthis._stringDirty = true;\r\n\t}\r\n\tprivate _r: number = 0;\r\n\tget r(): number {\r\n\t\treturn this._r;\r\n\t}\r\n\tset r(value: number) {\r\n\t\tthis._r = <number>truncate(Math.round(<number>value));\r\n\t\tthis._stringDirty = true;\r\n\t}\r\n\tprivate _g: number = 0;\r\n\tget g(): number {\r\n\t\treturn this._g;\r\n\t}\r\n\tset g(value: number) {\r\n\t\tthis._g = <number>truncate(Math.round(<number>value));\r\n\t\tthis._stringDirty = true;\r\n\t}\r\n\tprivate _b: number = 0;\r\n\tget b(): number {\r\n\t\treturn this._b;\r\n\t}\r\n\tset b(value: number) {\r\n\t\tthis._b = <number>truncate(Math.round(<number>value));\r\n\t\tthis._stringDirty = true;\r\n\t}\r\n\tprivate _colorString: string = null;\r\n\tget colorString(): string {\r\n\t\tif (this._stringDirty || this._colorString == null) {\r\n\t\t\tthis._stringDirty = false;\r\n\t\t\tthis.updateColorString();\r\n\t\t}\r\n\t\treturn this._colorString;\r\n\t}\r\n\tset colorString(value: string) {\r\n\t\tthis._colorString = value;\r\n\t\tthis.updateColors();\r\n\t}\r\n\tprivate _stringDirty: boolean = false;\r\n\tstatic create(value: any): Color {\r\n\t\tif (typeCast<Color>((<any>Color).$type, value) !== null) {\r\n\t\t\treturn <Color>value;\r\n\t\t}\r\n\t\tlet ret = new Color();\r\n\t\tif (typeof value === 'string') {\r\n\t\t\tret.colorString = <string>value;\r\n\t\t} else if (value != null) {\r\n\t\t\tthrow new ArgumentException(1, \"Unknown color type\");\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\tprivate updateColorString(): void {\r\n\t\tthis._colorString = \"rgba(\" + this._r + \",\" + this._g + \",\" + this._b + \",\" + this._a / 255 + \")\";\r\n\t}\r\n\tprivate updateColors(): void {\r\n\t\tif (this.colorString == null) {\r\n\t\t\tthis.a = this.r = this.g = this.b = 0;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet obj_ = stringToColor(this._colorString);\r\n\t\tthis._a = typeof obj_.a != 'undefined' ? Math.round(obj_.a) : 0;\r\n\t\tthis._r = typeof obj_.r != 'undefined' ? Math.round(obj_.r) : 0;\r\n\t\tthis._g = typeof obj_.g != 'undefined' ? Math.round(obj_.g) : 0;\r\n\t\tthis._b = typeof obj_.b != 'undefined' ? Math.round(obj_.b) : 0;\r\n\t\tif (stringStartsWith(this._colorString, \"#\") && this._colorString.length == 9) {\r\n\t\t\tthis.updateColorString();\r\n\t\t}\r\n\t}\r\n\tstatic fromArgb(a_: number, r_: number, g_: number, b_: number): Color {\r\n\t\tlet c: Color = new Color();\r\n\t\tc._a = <number>(a_ | 0);\r\n\t\tc._r = <number>(r_ | 0);\r\n\t\tc._g = <number>(g_ | 0);\r\n\t\tc._b = <number>(b_ | 0);\r\n\t\tc._stringDirty = true;\r\n\t\treturn c;\r\n\t}\r\n\tequals(obj: any): boolean {\r\n\t\tif ((typeCast<Color>((<any>Color).$type, obj) !== null) == false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet other = <Color>obj;\r\n\t\treturn this._a == other._a && this._r == other._r && this._g == other._g && this._b == other._b;\r\n\t}\r\n\tgetHashCode(): number {\r\n\t\treturn (this._a << 24) | (this._r << 16) | (this._g << 8) | this._b;\r\n\t}\r\n\tstatic l_op_Inequality(left: Color, right: Color): boolean {\r\n\t\treturn !(Color.l_op_Equality(left, right));\r\n\t}\r\n\tstatic l_op_Inequality_Lifted(left: Nullable$1<Color>, right: Nullable$1<Color>): boolean {\r\n\t\tif (!left.hasValue) {\r\n\t\t\treturn right.hasValue;\r\n\t\t} else if (!right.hasValue) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn Color.l_op_Inequality(left.value, right.value);\r\n\t}\r\n\tstatic l_op_Equality(left: Color, right: Color): boolean {\r\n\t\treturn left._a == right._a && left._r == right._r && left._g == right._g && left._b == right._b;\r\n\t}\r\n\tstatic l_op_Equality_Lifted(left: Nullable$1<Color>, right: Nullable$1<Color>): boolean {\r\n\t\tif (!left.hasValue) {\r\n\t\t\treturn !right.hasValue;\r\n\t\t} else if (!right.hasValue) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn Color.l_op_Equality(left.value, right.value);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"./type\";\r\nimport { HeatTileScaler } from \"./HeatTileScaler\";\r\nimport { Color } from \"./Color\";\r\nimport { Rect } from \"./Rect\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileWorkSettings extends Base {\r\n\tstatic $t: Type = markType(TileWorkSettings, 'TileWorkSettings');\r\n\tprivate _scaler: HeatTileScaler = null;\r\n\tget scaler(): HeatTileScaler {\r\n\t\treturn this._scaler;\r\n\t}\r\n\tset scaler(value: HeatTileScaler) {\r\n\t\tthis._scaler = value;\r\n\t}\r\n\tprivate _blurRadius: number = 0;\r\n\tget blurRadius(): number {\r\n\t\treturn this._blurRadius;\r\n\t}\r\n\tset blurRadius(value: number) {\r\n\t\tthis._blurRadius = value;\r\n\t}\r\n\tprivate _maxBlurRadius: number = 0;\r\n\tget maxBlurRadius(): number {\r\n\t\treturn this._maxBlurRadius;\r\n\t}\r\n\tset maxBlurRadius(value: number) {\r\n\t\tthis._maxBlurRadius = value;\r\n\t}\r\n\tprivate _useBlurRadiusAdjustedForZoom: boolean = false;\r\n\tget useBlurRadiusAdjustedForZoom(): boolean {\r\n\t\treturn this._useBlurRadiusAdjustedForZoom;\r\n\t}\r\n\tset useBlurRadiusAdjustedForZoom(value: boolean) {\r\n\t\tthis._useBlurRadiusAdjustedForZoom = value;\r\n\t}\r\n\tprivate _minimumColor: Color = new Color();\r\n\tget minimumColor(): Color {\r\n\t\treturn this._minimumColor;\r\n\t}\r\n\tset minimumColor(value: Color) {\r\n\t\tthis._minimumColor = value;\r\n\t}\r\n\tprivate _maximumColor: Color = new Color();\r\n\tget maximumColor(): Color {\r\n\t\treturn this._maximumColor;\r\n\t}\r\n\tset maximumColor(value: Color) {\r\n\t\tthis._maximumColor = value;\r\n\t}\r\n\tprivate _tileViewport: Rect = null;\r\n\tget tileViewport(): Rect {\r\n\t\treturn this._tileViewport;\r\n\t}\r\n\tset tileViewport(value: Rect) {\r\n\t\tthis._tileViewport = value;\r\n\t}\r\n\tprivate _yValues: number[] = null;\r\n\tget yValues(): number[] {\r\n\t\treturn this._yValues;\r\n\t}\r\n\tset yValues(value: number[]) {\r\n\t\tthis._yValues = value;\r\n\t}\r\n\tprivate _xValues: number[] = null;\r\n\tget xValues(): number[] {\r\n\t\treturn this._xValues;\r\n\t}\r\n\tset xValues(value: number[]) {\r\n\t\tthis._xValues = value;\r\n\t}\r\n\tprivate _values: number[] = null;\r\n\tget values(): number[] {\r\n\t\treturn this._values;\r\n\t}\r\n\tset values(value: number[]) {\r\n\t\tthis._values = value;\r\n\t}\r\n\tprivate _isNewData: boolean = false;\r\n\tget isNewData(): boolean {\r\n\t\treturn this._isNewData;\r\n\t}\r\n\tset isNewData(value: boolean) {\r\n\t\tthis._isNewData = value;\r\n\t}\r\n\tprivate _minimumVisibleLatitude: number = 0;\r\n\tget minimumVisibleLatitude(): number {\r\n\t\treturn this._minimumVisibleLatitude;\r\n\t}\r\n\tset minimumVisibleLatitude(value: number) {\r\n\t\tthis._minimumVisibleLatitude = value;\r\n\t}\r\n\tprivate _maximumVisibleLatitude: number = 0;\r\n\tget maximumVisibleLatitude(): number {\r\n\t\treturn this._maximumVisibleLatitude;\r\n\t}\r\n\tset maximumVisibleLatitude(value: number) {\r\n\t\tthis._maximumVisibleLatitude = value;\r\n\t}\r\n\tprivate _minimumVisibleLongitude: number = 0;\r\n\tget minimumVisibleLongitude(): number {\r\n\t\treturn this._minimumVisibleLongitude;\r\n\t}\r\n\tset minimumVisibleLongitude(value: number) {\r\n\t\tthis._minimumVisibleLongitude = value;\r\n\t}\r\n\tprivate _maximumVisibleLongitude: number = 0;\r\n\tget maximumVisibleLongitude(): number {\r\n\t\treturn this._maximumVisibleLongitude;\r\n\t}\r\n\tset maximumVisibleLongitude(value: number) {\r\n\t\tthis._maximumVisibleLongitude = value;\r\n\t}\r\n\tprivate _z: number = 0;\r\n\tget z(): number {\r\n\t\treturn this._z;\r\n\t}\r\n\tset z(value: number) {\r\n\t\tthis._z = value;\r\n\t}\r\n\tprivate _x: number = 0;\r\n\tget x(): number {\r\n\t\treturn this._x;\r\n\t}\r\n\tset x(value: number) {\r\n\t\tthis._x = value;\r\n\t}\r\n\tprivate _y: number = 0;\r\n\tget y(): number {\r\n\t\treturn this._y;\r\n\t}\r\n\tset y(value: number) {\r\n\t\tthis._y = value;\r\n\t}\r\n\tprivate _window: Rect = null;\r\n\tget window(): Rect {\r\n\t\treturn this._window;\r\n\t}\r\n\tset window(value: Rect) {\r\n\t\tthis._window = value;\r\n\t}\r\n\tprivate _testRun: boolean = false;\r\n\tget testRun(): boolean {\r\n\t\treturn this._testRun;\r\n\t}\r\n\tset testRun(value: boolean) {\r\n\t\tthis._testRun = value;\r\n\t}\r\n\tprivate _globalMinimum: number = 0;\r\n\tget globalMinimum(): number {\r\n\t\treturn this._globalMinimum;\r\n\t}\r\n\tset globalMinimum(value: number) {\r\n\t\tthis._globalMinimum = value;\r\n\t}\r\n\tprivate _globalMaximum: number = 0;\r\n\tget globalMaximum(): number {\r\n\t\treturn this._globalMaximum;\r\n\t}\r\n\tset globalMaximum(value: number) {\r\n\t\tthis._globalMaximum = value;\r\n\t}\r\n\tprivate _useGlobalMinMax: boolean = false;\r\n\tget useGlobalMinMax(): boolean {\r\n\t\treturn this._useGlobalMinMax;\r\n\t}\r\n\tset useGlobalMinMax(value: boolean) {\r\n\t\tthis._useGlobalMinMax = value;\r\n\t}\r\n\tprivate _minimumValue: number = 0;\r\n\tget minimumValue(): number {\r\n\t\treturn this._minimumValue;\r\n\t}\r\n\tset minimumValue(value: number) {\r\n\t\tthis._minimumValue = value;\r\n\t}\r\n\tprivate _maximumValue: number = 0;\r\n\tget maximumValue(): number {\r\n\t\treturn this._maximumValue;\r\n\t}\r\n\tset maximumValue(value: number) {\r\n\t\tthis._maximumValue = value;\r\n\t}\r\n\tprivate _scaleColors: Color[] = null;\r\n\tget scaleColors(): Color[] {\r\n\t\treturn this._scaleColors;\r\n\t}\r\n\tset scaleColors(value: Color[]) {\r\n\t\tthis._scaleColors = value;\r\n\t}\r\n\tprivate _scaleColorOffsets: number[] = null;\r\n\tget scaleColorOffsets(): number[] {\r\n\t\treturn this._scaleColorOffsets;\r\n\t}\r\n\tset scaleColorOffsets(value: number[]) {\r\n\t\tthis._scaleColorOffsets = value;\r\n\t}\r\n\tprivate _useLogarithmicScale: boolean = false;\r\n\tget useLogarithmicScale(): boolean {\r\n\t\treturn this._useLogarithmicScale;\r\n\t}\r\n\tset useLogarithmicScale(value: boolean) {\r\n\t\tthis._useLogarithmicScale = value;\r\n\t}\r\n\tprivate _logarithmBase: number = 0;\r\n\tget logarithmBase(): number {\r\n\t\treturn this._logarithmBase;\r\n\t}\r\n\tset logarithmBase(value: number) {\r\n\t\tthis._logarithmBase = value;\r\n\t}\r\n\tprivate _image: any = null;\r\n\tget image(): any {\r\n\t\treturn this._image;\r\n\t}\r\n\tset image(value: any) {\r\n\t\tthis._image = value;\r\n\t}\r\n\tflatten(): any {\r\n\t\tlet minA_ = this.minimumColor.a;\r\n\t\tlet minR_ = this.minimumColor.r;\r\n\t\tlet minG_ = this.minimumColor.g;\r\n\t\tlet minB_ = this.minimumColor.b;\r\n\t\tlet maxA_ = this.maximumColor.a;\r\n\t\tlet maxR_ = this.maximumColor.r;\r\n\t\tlet maxG_ = this.maximumColor.g;\r\n\t\tlet maxB_ = this.maximumColor.b;\r\n\t\tlet scaleColors_: any[] = null;\r\n\t\tif (this.scaleColors != null) {\r\n\t\t\tscaleColors_ = <any[]>new Array(this.scaleColors.length);\r\n\t\t\tfor (let i = 0; i < this.scaleColors.length; i++) {\r\n\t\t\t\tlet a_ = this.scaleColors[i].a;\r\n\t\t\t\tlet r_ = this.scaleColors[i].r;\r\n\t\t\t\tlet g_ = this.scaleColors[i].g;\r\n\t\t\t\tlet b_ = this.scaleColors[i].b;\r\n\t\t\t\tlet color_ = { a: a_, r: r_, g: g_, b: b_ };\r\n\t\t\t\tscaleColors_[i] = color_;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t\tblurRadius: this.blurRadius,\r\n\t\t\t\tmaxBlurRadius: this.maxBlurRadius,\r\n                //isLinearScaler: this.isLinearScaler,\r\n                //linearScalerMinimumXValue: this.linearScalerMinimumXValue,\r\n                //linearScalerMinimumYValue: this.linearScalerMinimumYValue,\r\n                //linearScalerMaximumXValue: this.linearScalerMaximumXValue,\r\n                //linearScalerMaximumYValue: this.linearScalerMaximumYValue,\r\n                //linearScalerXIsInverted: this.linearScalerXIsInverted,\r\n                //linearScalerYIsInverted: this.linearScalerYIsInverted,\r\n\t\t\t\tuseBlurRadiusAdjustedForZoom: this.useBlurRadiusAdjustedForZoom,\r\n\t\t\t\tminimumColor: { a: minA_, r: minR_, g: minG_, b: minB_ },\r\n\t\t\t\tmaximumColor: { a: maxA_, r: maxR_, g: maxG_, b: maxB_ },\r\n\t\t\t\ttileViewport: { left: this.tileViewport.left, top: this.tileViewport.top, width: this.tileViewport.width, height: this.tileViewport.height },\r\n\t\t\t\tyValues:   this.yValues,\r\n\t\t\t\txValues: this.xValues,\r\n\t\t\t\tvalues: this.values,\r\n\t\t\t\tisNewData: this.isNewData,\r\n\t\t\t\tminimumVisibleLatitude: this.minimumVisibleLatitude,\r\n\t\t\t\tminimumVisibleLongitude: this.minimumVisibleLongitude,\r\n\t\t\t\tmaximumVisibleLatitude: this.maximumVisibleLatitude,\r\n\t\t\t\tmaximumVisibleLongitude: this.maximumVisibleLongitude,\r\n\t\t\t\tz: this.z,\r\n\t\t\t\tx: this.x,\r\n\t\t\t\ty: this.y,\r\n\t\t\t\twindow: { left: this.window.left, top: this.window.top, width: this.window.width, height: this.window.height },\r\n\t\t\t\ttestRun: this.testRun,\r\n\t\t\t\tglobalMinimum: this.globalMinimum,\r\n\t\t\t\tglobalMaximum: this.globalMaximum,\r\n\t\t\t\tuseGlobalMinMax: this.useGlobalMinMax,\r\n\t\t\t\tminimumValue: this.minimumValue,\r\n\t\t\t\tmaximumValue: this.maximumValue,\r\n\t\t\t\tscaleColorOffsets: this.scaleColorOffsets,\r\n\t\t\t\tscaleColors: scaleColors_,\r\n\t\t\t\tuseLogarithmicScale: this.useLogarithmicScale,\r\n\t\t\t\tlogarithmBase: this.logarithmBase\r\n\t\t\t}\r\n            ;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IArray { \r\n\tasArray(): any[];\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IArray_$type = new Type(null, 'IArray');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ArrayBox$1 } from \"./array\";\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IArrayList { \r\n\tasArrayList(): ArrayBox$1<any>;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IArrayList_$type = new Type(null, 'IArrayList');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IComparer { \r\n\tcompareObject(x: any, y: any): number;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IComparer_$type = new Type(null, 'IComparer');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IComparer$1<T> { \r\n\tcompare(x: T, y: T): number;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IComparer$1_$type = new Type(null, 'IComparer$1');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Type, Base } from \"./type\";\r\n\r\nexport class CompareUtil {\r\n    static compareToObject(obj1: any, obj2: any): number {\r\n        if (obj1.compareToObject) {\r\n            return <number>obj1.compareToObject(obj2);\r\n        }\r\n        return Base.compare(obj1, obj2);\r\n    }\r\n    static compareTo(obj1: any, obj2: any) {\r\n        if (obj1.compareTo) {\r\n            return <number>obj1.compareTo(obj2);\r\n        }\r\n        return Base.compare(obj1, obj2);\r\n    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, typeCastObjTo$t, markType, IComparable$1, IComparable$1_$type, typeCast } from \"./type\";\r\nimport { IComparer, IComparer_$type } from \"./IComparer\";\r\nimport { IComparer$1, IComparer$1_$type } from \"./IComparer$1\";\r\nimport { CompareUtil } from \"./compareUtil\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class Comparer$1<T> extends Base implements IComparer, IComparer$1<T> {\r\n\tstatic $t: Type = markType(Comparer$1, 'Comparer$1', (<any>Base).$type, [IComparer_$type, IComparer$1_$type.specialize(0)]);\r\n\tprotected $t: Type = null;\r\n\tconstructor($t: Type) {\r\n\t\tsuper();\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t}\r\n\tstatic defaultComparerValue<T>($t: Type): Comparer$1<T> {\r\n\t\treturn new DefaultComparer$1<T>($t);\r\n\t}\r\n\tabstract compare(x: T, y: T): number;\r\n\tstatic create<T>($t: Type, comparison: (x: T, y: T) => number): Comparer$1<T> {\r\n\t\treturn null;\r\n\t}\r\n\tcompareObject(x: any, y: any): number {\r\n\t\treturn this.compare(typeCastObjTo$t<T>(this.$t, x), typeCastObjTo$t<T>(this.$t, y));\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DefaultComparer$1<T> extends Comparer$1<T> {\r\n\tstatic $t: Type = markType(DefaultComparer$1, 'DefaultComparer$1', (<any>Comparer$1).$type.specialize(0));\r\n\tprotected $t: Type = null;\r\n\tconstructor($t: Type) {\r\n\t\tsuper($t);\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t}\r\n\tcompare(x: T, y: T): number {\r\n\t\tlet xComparable = typeCast<IComparable$1<T>>(IComparable$1_$type.specialize(this.$t), x);\r\n\t\tif (xComparable != null) {\r\n\t\t\treturn CompareUtil.compareTo(xComparable, y);\r\n\t\t}\r\n\t\tlet yComparable = typeCast<IComparable$1<T>>(IComparable$1_$type.specialize(this.$t), y);\r\n\t\tif (yComparable != null) {\r\n\t\t\treturn -CompareUtil.compareTo(yComparable, x);\r\n\t\t}\r\n\t\treturn <number>(Base.compare(x, y));\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, IList$1, IList$1_$type, ICollection$1, ICollection$1_$type, IEnumerable$1, IEnumerable$1_$type, IEnumerable, IEnumerable_$type, IList, IList_$type, ICollection, ICollection_$type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, Type, typeCastObjTo$t, markType, getEnumerator } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ReadOnlyCollection$1<T> extends Base implements IList$1<T>, IList {\r\n\tstatic $t: Type = markType(ReadOnlyCollection$1, 'ReadOnlyCollection$1', (<any>Base).$type, [IList$1_$type.specialize(0), IList_$type]);\r\n\tprotected $t: Type = null;\r\n\tconstructor($t: Type, initNumber: number);\r\n\tconstructor($t: Type, initNumber: number, source: IList$1<T>);\r\n\tconstructor($t: Type, initNumber: number, ..._rest: any[]);\r\n\tconstructor($t: Type, initNumber: number, ..._rest: any[]) {\r\n\t\tsuper();\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t\tinitNumber = (initNumber == void 0) ? 0 : initNumber;\r\n\t\tswitch (initNumber) {\r\n\t\t\tcase 0: break;\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet source: IList$1<T> = <IList$1<T>>_rest[0];\r\n\t\t\t\tthis._inner = source;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate _inner: IList$1<T> = null;\r\n\titem(index: number, value?: T): T {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tthis._inner.item(index, value);\r\n\t\t\treturn value;\r\n\t\t} else {\r\n\t\t\treturn this._inner.item(index);\r\n\t\t}\r\n\t}\r\n\tindexOf(item: T): number {\r\n\t\treturn this._inner.indexOf(item);\r\n\t}\r\n\tinsert(index: number, item: T): void {\r\n\t}\r\n\tremoveAt(index: number): void {\r\n\t}\r\n\tget count(): number {\r\n\t\treturn this._inner.count;\r\n\t}\r\n\tget isReadOnly(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tadd(item: T): void {\r\n\t}\r\n\tclear(): void {\r\n\t}\r\n\tcontains(item: T): boolean {\r\n\t\treturn this._inner.contains(item);\r\n\t}\r\n\tcopyTo(array: T[], arrayIndex: number): void {\r\n\t\tthis._inner.copyTo(array, arrayIndex);\r\n\t}\r\n\tremove(item: T): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tgetEnumerator(): IEnumerator$1<T> {\r\n\t\treturn getEnumerator(this._inner);\r\n\t}\r\n\tgetEnumeratorObject(): IEnumerator {\r\n\t\treturn getEnumerator(this._inner);\r\n\t}\r\n\tget isFixedSize(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tadd1(value: any): number {\r\n\t\treturn -1;\r\n\t}\r\n\tcontains1(value: any): boolean {\r\n\t\treturn this._inner.contains(typeCastObjTo$t<T>(this.$t, value));\r\n\t}\r\n\tindexOf1(value: any): number {\r\n\t\treturn this._inner.indexOf(typeCastObjTo$t<T>(this.$t, value));\r\n\t}\r\n\tinsert1(index: number, value: any): void {\r\n\t}\r\n\tremove1(value: any): void {\r\n\t}\r\n\tcopyTo1(array: any[], index: number): void {\r\n\t\tthis._inner.copyTo(<T[]>array, index);\r\n\t}\r\n\tprotected get items(): IList$1<T> {\r\n\t\treturn this._inner;\r\n\t}\r\n\tget isSynchronized(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprivate readonly _syncRoot: any = {};\r\n\tget syncRoot(): any {\r\n\t\treturn this._syncRoot;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseError, Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class NotImplementedException extends BaseError {\r\n\tstatic $t: Type = markType(NotImplementedException, 'NotImplementedException', (<any>BaseError).$type);\r\n\tconstructor(initNumber: number);\r\n\tconstructor(initNumber: number, message: string);\r\n\tconstructor(initNumber: number, ..._rest: any[]);\r\n\tconstructor(initNumber: number, ..._rest: any[]) {\r\n\t\tinitNumber = (initNumber == void 0) ? 0 : initNumber;\r\n\t\tswitch (initNumber) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(1, \"not implemented\");\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet message: string = <string>_rest[0];\r\n\t\t\t\tsuper(1, message);\r\n\t\t\t\tthrow new NotImplementedException(0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, IList$1, IList$1_$type, ICollection$1, ICollection$1_$type, IEnumerable$1, IEnumerable$1_$type, IEnumerable, IEnumerable_$type, IList, IList_$type, ICollection, ICollection_$type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, Type, fromEnum, getBoxIfEnum, typeCast, typeCastObjTo$t, fromEn, Number_$type, typeGetValue, Date_$type, runOn, markType, String_$type, getEnumeratorObject } from \"./type\";\r\nimport { IArray, IArray_$type } from \"./IArray\";\r\nimport { IArrayList, IArrayList_$type } from \"./IArrayList\";\r\nimport { ArrayBox$1, arrayCopyTo } from \"./array\";\r\nimport { Comparer$1 } from \"./Comparer$1\";\r\nimport { IComparer$1 } from \"./IComparer$1\";\r\nimport { ReadOnlyCollection$1 } from \"./ReadOnlyCollection$1\";\r\nimport { NotImplementedException } from \"./NotImplementedException\";\r\nimport { intDivide } from \"./number\";\r\nimport { stringCompareTo } from \"./string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class List$1<T> extends Base implements IList$1<T>, IArray, IList {\r\n\tstatic $t: Type = markType(List$1, 'List$1', (<any>Base).$type, [IList$1_$type.specialize(0), IArray_$type, IList_$type]);\r\n\tprotected $t: Type = null;\r\n\t_inner: T[] = null;\r\n\tprivate readonly _useFastCompare: boolean = false;\r\n\tconstructor($t: Type, initNumber: number);\r\n\tconstructor($t: Type, initNumber: number, source: IEnumerable$1<T>);\r\n\tconstructor($t: Type, initNumber: number, capacity: number);\r\n\tconstructor($t: Type, initNumber: number, ..._rest: any[]);\r\n\tconstructor($t: Type, initNumber: number, ..._rest: any[]) {\r\n\t\tsuper();\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t\tinitNumber = (initNumber == void 0) ? 0 : initNumber;\r\n\t\tswitch (initNumber) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tthis._inner = <T[]>([]);\r\n\t\t\t\tthis._useFastCompare = <boolean>(this.$t.InstanceConstructor && this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet source: IEnumerable$1<T> = <IEnumerable$1<T>>_rest[0];\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._inner = <T[]>([]);\r\n\t\t\t\t\tthis._useFastCompare = <boolean>(this.$t.InstanceConstructor && this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.tryArray(0, source, true)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let item of fromEnum<T>(source)) {\r\n\t\t\t\t\tthis.add(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t{\r\n\t\t\t\tlet capacity: number = <number>_rest[0];\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._inner = <T[]>([]);\r\n\t\t\t\t\tthis._useFastCompare = <boolean>(this.$t.InstanceConstructor && this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected setItem(index: number, newItem: T): void {\r\n\t\tthis._inner[index] = newItem;\r\n\t}\r\n\tprotected insertItem(index: number, newItem: T): void {\r\n\t\tthis._inner.splice(index, 0, newItem);\r\n\t}\r\n\tprotected addItem(newItem: T): void {\r\n\t\tthis._inner.push(newItem);\r\n\t}\r\n\tprotected removeItem(index: number): void {\r\n\t\tif (index == 0) {\r\n\t\t\tthis._inner.shift();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._inner.splice(index, 1);\r\n\t}\r\n\tprotected clearItems(): void {\r\n\t\tthis._inner = <T[]>([]);\r\n\t}\r\n\titem(index: number, value?: T): T {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tthis.setItem(index, value);\r\n\t\t\treturn value;\r\n\t\t} else {\r\n\t\t\treturn this._inner[index];\r\n\t\t}\r\n\t}\r\n\tindexOf(item: T): number {\r\n\t\tif (this._useFastCompare) {\r\n\t\t\treturn <number>(this._inner.indexOf(item));\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this._inner.length; i++) {\r\n\t\t\tif (Base.equalsStatic(getBoxIfEnum<T>(this.$t, item), getBoxIfEnum<T>(this.$t, this._inner[i]))) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tindexOf2(item: T, index: number): number {\r\n\t\tif (this._useFastCompare) {\r\n\t\t\treturn <number>(this._inner.indexOf(item, index));\r\n\t\t}\r\n\t\tfor (; index < this._inner.length; index++) {\r\n\t\t\tif (Base.equalsStatic(getBoxIfEnum<T>(this.$t, item), getBoxIfEnum<T>(this.$t, this._inner[index]))) {\r\n\t\t\t\treturn index;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tlastIndexOf(item: T): number {\r\n\t\tif (this._useFastCompare) {\r\n\t\t\treturn <number>(this._inner.lastIndexOf(item));\r\n\t\t}\r\n\t\tfor (let i: number = this._inner.length - 1; i >= 0; i--) {\r\n\t\t\tif (Base.equalsStatic(getBoxIfEnum<T>(this.$t, item), getBoxIfEnum<T>(this.$t, this._inner[i]))) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tinsert(index: number, item: T): void {\r\n\t\tthis.insertItem(index, item);\r\n\t}\r\n\tremoveAt(index: number): void {\r\n\t\tthis.removeItem(index);\r\n\t}\r\n\tget count(): number {\r\n\t\treturn this._inner.length;\r\n\t}\r\n\tget isReadOnly(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tadd(item: T): void {\r\n\t\tthis.addItem(item);\r\n\t}\r\n\tclear(): void {\r\n\t\tthis.clearItems();\r\n\t}\r\n\tcontains(item: T): boolean {\r\n\t\treturn this.indexOf(item) >= 0;\r\n\t}\r\n\tcopyTo(array: T[], arrayIndex: number): void {\r\n\t\tfor (let i: number = 0; i < this._inner.length; i++) {\r\n\t\t\tarray[arrayIndex + i] = this._inner[i];\r\n\t\t}\r\n\t}\r\n\tremove(item: T): boolean {\r\n\t\tlet indexOf: number = this.indexOf(item);\r\n\t\tif (indexOf < 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.removeItem(indexOf);\r\n\t\treturn true;\r\n\t}\r\n\tgetEnumerator(): IEnumerator$1<T> {\r\n\t\treturn <IEnumerator$1<T>><any>getEnumeratorObject(this._inner);\r\n\t}\r\n\tgetEnumeratorObject(): IEnumerator {\r\n\t\treturn getEnumeratorObject(this._inner);\r\n\t}\r\n\tasArray(): any[] {\r\n\t\treturn this._inner;\r\n\t}\r\n\tprivate tryArray(index_: number, collection_: any, preciseType: boolean): boolean {\r\n\t\tlet asArrayList = typeCast<IArrayList>(IArrayList_$type, collection_);\r\n\t\tif (asArrayList != null) {\r\n\t\t\tlet a_ = asArrayList.asArrayList();\r\n\t\t\tArray.prototype.splice.apply(this._inner, Array.prototype.concat.apply([index_, 0], a_));\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet asArray = typeCast<IArray>(IArray_$type, collection_);\r\n\t\tif (asArray != null) {\r\n\t\t\tlet a_ = asArray.asArray();\r\n\t\t\tArray.prototype.splice.apply(this._inner, Array.prototype.concat.apply([index_, 0], a_));\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet asList_ = typeCast<IList$1<T>>(IList$1_$type.specialize(this.$t), collection_);\r\n\t\tif (asList_ != null) {\r\n\t\t\tfor (let i_: number = 0; i_ < asList_.count; i_++) {\r\n\t\t\t\tlet item_ = asList_.item(i_);\r\n\t\t\t\tthis._inner.splice(index_ + i_, 0, item_);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet arr_ = <any[]>(Array.isArray(collection_) ? collection_ : null);\r\n\t\tif (arr_ != null) {\r\n\t\t\tlet inn_ = this._inner;\r\n\t\t\tif (this._inner.length == 0) {\r\n\t\t\t\tif (preciseType) {\r\n\t\t\t\t\tlet parr_ = <T[]>arr_;\r\n\t\t\t\t\tlet arrLen = arr_.length;\r\n\t\t\t\t\tfor (let i_ = 0; i_ < arrLen; i_++) {\r\n\t\t\t\t\t\tinn_[index_++] = parr_[i_];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet len = arr_.length;\r\n\t\t\t\t\tfor (let i_ = 0; i_ < len; i_++) {\r\n\t\t\t\t\t\tinn_[index_++] = typeCastObjTo$t<T>(this.$t, arr_[i_]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i_ = 0; i_ < arr_.length; i_++) {\r\n\t\t\t\t\tinn_.splice(index_++, 0, arr_[i_]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tinsertRange1(index: number, collection: IEnumerable): void {\r\n\t\tif (this.tryArray(index, collection, false)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet j_: number = index;\r\n\t\tfor (let item_ of fromEn<any>(collection)) {\r\n\t\t\tthis._inner.splice(j_, 0, item_);\r\n\t\t\tj_++;\r\n\t\t}\r\n\t}\r\n\tinsertRange(index: number, collection: IEnumerable$1<T>): void {\r\n\t\tif (this.tryArray(index, collection, true)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet j_: number = index;\r\n\t\tfor (let item_ of fromEnum<T>(collection)) {\r\n\t\t\tthis._inner.splice(j_, 0, item_);\r\n\t\t\tj_++;\r\n\t\t}\r\n\t}\r\n\tremoveRange(index_: number, numToRemove_: number): void {\r\n\t\tif (index_ == 0 && numToRemove_ == 1) {\r\n\t\t\tthis._inner.shift();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._inner.splice(index_, numToRemove_);\r\n\t}\r\n\tcopyTo1(array: any[], index: number): void {\r\n\t\tarrayCopyTo(this._inner, array, index);\r\n\t}\r\n\tget isFixedSize(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tadd1(value: any): number {\r\n\t\tthis.addItem(typeCastObjTo$t<T>(this.$t, value));\r\n\t\treturn this._inner.length - 1;\r\n\t}\r\n\tcontains1(item: any): boolean {\r\n\t\treturn this.indexOf1(item) >= 0;\r\n\t}\r\n\tindexOf1(item: any): number {\r\n\t\treturn this.indexOf(typeCastObjTo$t<T>(this.$t, item));\r\n\t}\r\n\tinsert1(index: number, value: any): void {\r\n\t\tthis.insertItem(index, typeCastObjTo$t<T>(this.$t, value));\r\n\t}\r\n\tremove1(value: any): void {\r\n\t\tlet indexOf = this.indexOf1(value);\r\n\t\tif (indexOf < 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.removeItem(indexOf);\r\n\t}\r\n\tsort(): void {\r\n\t\tlet c: (obj1: any, obj2: any) => number = null;\r\n\t\tif (this.$t == Number_$type) {\r\n\t\t\tc = (n1: any, n2: any) => {\r\n\t\t\t\tlet d1 = <number>n1;\r\n\t\t\t\tlet d2 = <number>n2;\r\n\t\t\t\tif (d1 < d2) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (d1 == d2) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else if (this.$t == Number_$type) {\r\n\t\t\tc = (n1: any, n2: any) => {\r\n\t\t\t\tlet f1 = <number>n1;\r\n\t\t\t\tlet f2 = <number>n2;\r\n\t\t\t\tif (f1 < f2) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (f1 == f2) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else if (this.$t == Number_$type) {\r\n\t\t\tc = (n1: any, n2: any) => {\r\n\t\t\t\tlet i1 = typeGetValue(n1);\r\n\t\t\t\tlet i2 = typeGetValue(n2);\r\n\t\t\t\tif (i1 < i2) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (i1 == i2) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else if (this.$t == Date_$type) {\r\n\t\t\tc = (n1: any, n2: any) => {\r\n\t\t\t\tlet d1 = <Date>n1;\r\n\t\t\t\tlet d2 = <Date>n2;\r\n\t\t\t\tif (d1.getTime() < d2.getTime()) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (d1.getTime() == d2.getTime()) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tc = (n1: any, n2: any) => stringCompareTo((<string>n1), <string>n2);\r\n\t\t}\r\n\t\tthis.sortHelper(c);\r\n\t}\r\n\tprivate sortHelper(compare_: (obj1: any, obj2: any) => number): void {\r\n\t\tthis._inner.sort(compare_);\r\n\t}\r\n\tsort2(compare_: (arg1: T, arg2: T) => number): void {\r\n\t\tthis._inner.sort(compare_);\r\n\t}\r\n\tprivate _capacity: number = 0;\r\n\tget capacity(): number {\r\n\t\treturn this._capacity;\r\n\t}\r\n\tset capacity(value: number) {\r\n\t\tthis._capacity = value;\r\n\t}\r\n\taddRange(values: IEnumerable$1<T>): void {\r\n\t\tfor (let item_ of fromEnum<T>(values)) {\r\n\t\t\tthis._inner.push(item_);\r\n\t\t}\r\n\t}\r\n\ttoArray(): T[] {\r\n\t\treturn this._inner;\r\n\t}\r\n\tforEach(action: (arg1: T) => void): void {\r\n\t\tfor (let i: number = 0; i < this._inner.length; i++) {\r\n\t\t\taction(this._inner[i]);\r\n\t\t}\r\n\t}\r\n\tget isSynchronized(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprivate readonly _syncRoot: any = {};\r\n\tget syncRoot(): any {\r\n\t\treturn this._syncRoot;\r\n\t}\r\n\tbinarySearch(item: T): number {\r\n\t\treturn this.binarySearch1(item, Comparer$1.defaultComparerValue<T>(this.$t));\r\n\t}\r\n\tbinarySearch1(item: T, comparer: IComparer$1<T>): number {\r\n\t\tlet start: number = 0;\r\n\t\tlet end: number = this.count - 1;\r\n\t\twhile (start <= end) {\r\n\t\t\tlet mid: number = start + (intDivide((end - start), 2));\r\n\t\t\tlet testValue: T = this._inner[mid];\r\n\t\t\tlet compareResult: number = comparer.compare(testValue, item);\r\n\t\t\tif (compareResult == 0) {\r\n\t\t\t\treturn mid;\r\n\t\t\t}\r\n\t\t\tif (compareResult < 0) {\r\n\t\t\t\tstart = mid + 1;\r\n\t\t\t} else {\r\n\t\t\t\tend = mid - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ~start;\r\n\t}\r\n\tasReadOnly(): ReadOnlyCollection$1<T> {\r\n\t\treturn new ReadOnlyCollection$1<T>(this.$t, 1, this);\r\n\t}\r\n\treverse(): void {\r\n\t\tfor (let i: number = 0; i < intDivide(this.count, 2); i++) {\r\n\t\t\tlet other = this.count - i - 1;\r\n\t\t\tlet temp = this._inner[i];\r\n\t\t\tthis._inner[i] = this._inner[other];\r\n\t\t\tthis._inner[other] = temp;\r\n\t\t}\r\n\t}\r\n\tsort1(comparer: IComparer$1<T>): void {\r\n\t\tthis.sort2(runOn(comparer, comparer.compare));\r\n\t}\r\n\tfindIndex(match: (obj: T) => boolean): number {\r\n\t\tfor (let i: number = 0; i < this._inner.length; i++) {\r\n\t\t\tif (match(this._inner[i])) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tremoveAll(match: (obj: T) => boolean): number {\r\n\t\tthrow new NotImplementedException(0);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IList, ICollection, IEnumerable, IEnumerable$1, IEnumerator, IEnumerator$1, IteratorWrapper, IList$1, getEnumerator, getEnumeratorObject, Base, Type, Array_$type } from \"./type\";\r\n\r\n\texport function arrayCopyTo(source: any[], dest: any[], index: number) {\r\n\t\tfor (var i = 0; i < source.length; i++) {\r\n\t\t\tdest[ index++ ] = source[ i ];\r\n\t\t}\r\n\t}\r\n    export function arrayCopy(source: any[], sourceIndex: number, dest: any[], destIndex: number, count: number) {\r\n\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\tdest[ destIndex + i ] = source[ sourceIndex + i ];\r\n        }\r\n    }\r\n    export function arrayInsert(target: any[], index: number, item: any) {\r\n        target.splice(index, 0, item);\r\n    }\r\n    export function arrayRemoveAt(target: any[], index: number) {\r\n\t\ttarget.splice(index, 1);\r\n\t}\r\n\r\n\texport function arrayRemoveItem(target: any[], item: any) {\r\n\t\tvar index = target.indexOf(item);\r\n\t\tif (index >= 0) {\r\n\t\t\ttarget.splice(index, 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n    }\r\n    \r\n    export function arrayGetValue(target: any[], index: number) {\r\n        return target[index];\r\n    }\r\n    \r\n    export function arrayGetLength(target: any[], dimension: number) {\r\n\r\n\t\t// TODO: Is there a better way to do this? Maybe attach the rank values to the array?\r\n\r\n\t\tvar array = target;\r\n\t\tvar dim = dimension;\r\n\r\n\t\twhile (array) {\r\n\t\t\tif (dim === 0) {\r\n\t\t\t\treturn array.length;\r\n\t\t\t}\r\n\r\n\t\t\tdim--;\r\n\t\t\tarray = array[ 0 ];\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n    }\r\n\r\n    export function arrayGetRank(target: any[]) {\r\n        return 1;\r\n    }\r\n    \r\n    export function arrayResize<T>(target: T[], length: number) {\r\n        target.length = 0;\r\n    }\r\n\r\n    export function arrayInsertRange(target: any[], index: number, items: any[]) {\r\n\t\tvar i = 0;\r\n\t\tif (target.length === 0) {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget[ index++ ] = items[ i ];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget.splice(index++, 0, items[ i ]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texport function arrayInsertRange1(target: any[], index: number, items: any[]) {\r\n\r\n\t\t//TODO: adjust this later, but this is the safest change to make right now.\r\n\t\tvar i = 0;\r\n\t\tif (target.length === 0) {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget[ index++ ] = items[ i ];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget.splice(index++, 0, items[ i ]);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    \r\n    export function arrayShallowClone(arr: any[]) {\r\n\t\tvar newArr = [];\r\n\t\tfor (var i = 0; i < arr.length; i++) {\r\n\t\t\tnewArr[ i ] = arr[ i ];\r\n\t\t}\r\n\t\treturn newArr;\r\n    }\r\n    \r\n    export function arrayClear(arr: any[]) {\r\n        arr.length = 0;\r\n\t\t}\r\n\r\n //   export function listItem(list: any, index: number, item?: any): void {\r\n //       if ((<any>list).$type === undefined) {\r\n //           let arr = <any[]>list;\r\n //           if (item !== undefined) {\r\n //               arr[index] = item;\r\n //               return item;\r\n //           } else {\r\n //               return arr[index];\r\n //           }\r\n //       }\r\n //       if (item !== undefined) {\r\n //           list.item(index, item);\r\n //           return item;\r\n //       }\r\n //       return list.item(index);\r\n //   }\r\n\r\n\t//export function  listAdd(list: any, item: any): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\tarrayInsert(arr, arr.length, item);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.add(item);\r\n\t//\t}\r\n\t//export function  listClear(list: any): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\tarrayClear(arr);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.clear();\r\n\t//\t}\r\n\t//export function listContains(list: any, item: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn arr.indexOf(item) > -1;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.contains(item);\r\n\t//\t}\r\n\t//export function listIndexOf(list: any, item: any): number {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn arr.indexOf(item);\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.indexOf(item);\r\n\t//\t}\r\n\t//export function listInsert(list: any, index: number, item: any): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\tarrayInsert(arr, index, item);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.contains(item);\r\n\t//\t}\r\n\t//export function listRemove(list: any, item: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n //                       arrayRemoveItem(arr, item);\r\n //                       return true;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.remove(item);\r\n\t//\t}\r\n\t//export function listRemoveAt(list: any, index: number): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n //                       arrayRemoveAt(arr, index);\r\n //                       return;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.removeAt(index);\r\n\t//\t}\r\n\t//export function listIsFixedSize(list: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn false;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.isFixedSize;\r\n\t//\t}\r\n\t//export function listIsReadOnly(list: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn false;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.isReadOnly;\r\n\t//\t}\r\n\t//export function collectionCount(collection: any): number {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\treturn arr.length;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.count;\r\n\t//\t}\r\n\t//export function collectionCopyTo(collection: any, array: any[], index: number): void {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\tarrayCopy(arr, 0, array, index, arr.length);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.copyTo(array, index);\r\n\t//\t}\r\n\t//export function collectionIsSynchronized(collection: any): boolean {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\treturn false;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.isSynchronized;\r\n\t//\t}\r\n\t//export function collectionSyncRoot(collection: any): any {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\treturn arr;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.syncRoot;\r\n //   }\r\n\r\nexport function boxArray$1<T>(array: any): ArrayBox$1<T> {\r\n    return new ArrayBox$1<T>(array);\r\n}\r\n\r\nexport function unboxArray<T>(box: any): T[] {\r\n    if (box.$arrayWrapper) {\r\n        return <T[]>box._target;\r\n    }\r\n    return <T[]>box;\r\n}\r\n\r\nexport function arrayListCreate(): ArrayBox$1<any> {\r\n    return new ArrayBox$1<any>([]);\r\n}\r\n\r\nexport class ArrayBox$1<T> implements IList, IList$1<T>, ICollection, IEnumerable, IEnumerable$1<T> {\r\n\tisFixedSize: boolean = false;\r\n\tisSynchronized: boolean = false;\r\n\tsyncRoot: any = null;\r\n\r\n\tprivate _target: any[];\r\n\tconstructor(target: any) {\r\n\t\tthis._target = target;\r\n\t}\r\n\r\n    item(index: number, value?: T): T {\r\n        if (arguments.length === 2) {\r\n            this._target[index] = value;\r\n            return value;\r\n        } else {\r\n            return <T>this._target[index];\r\n        }\r\n    }\r\n\tindexOf(item: T): number {\r\n\t\treturn this._target.indexOf(item);\r\n\t}\r\n\tinsert(index: number, item: T): void {\r\n\t\tthis._target.splice(index, 0, item);\r\n    }\r\n    insertRange(index: number, items: any[]) {\r\n        arrayInsertRange(this._target, index, items);\r\n    }\r\n    removeRange(index: number, count: number) {\r\n        this._target.splice(index, count);\r\n    }\r\n\tremoveAt(index: number): void {\r\n\t\tthis._target.splice(index, 1);\r\n\t}\r\n\tget count(): number {\r\n\t\treturn this._target.length;\r\n\t}\r\n\tisReadOnly: boolean = false;\r\n\tadd(item: T): void {\r\n\t\tthis._target.push(item);\r\n\t}\r\n\tclear(): void {\r\n\t\tthis._target.length = 0;\r\n\t}\r\n\tcontains(item: T): boolean {\r\n\t\treturn this._target.indexOf(item) >= 0;\r\n\t}\r\n\tcopyTo(array: T[], arrayIndex: number): void {\r\n\t\tfor (let i = 0; i < this._target.length; i++) {\r\n\t\t\tarray[i + arrayIndex] = this._target[i];\r\n\t\t}\r\n\t}\r\n\tremove(item: T): boolean {\r\n\t\tlet index = this._target.indexOf(item);\r\n\t\tif (index < 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis._target.splice(index, 1);\r\n\t\treturn true;\r\n\t}\r\n\tgetEnumerator(): IEnumerator$1<T> {\r\n\t\treturn getEnumerator(this._target);\r\n\t}\r\n\tgetEnumeratorObject(): IEnumerator {\r\n\t\treturn getEnumeratorObject(this._target);\r\n    }\r\n    getHashCode(): number {\r\n\t\treturn Base.getHashCodeStatic(this._target);\r\n\t}\r\n\t$arrayWrapper: boolean = true;\r\n\tequals(other: any): boolean {\r\n\t\tif (other.$arrayWrapper) {\r\n\t\t\tother = other._target;\r\n\t\t}\r\n\t\treturn this._target === other;\r\n    }\r\n    get $type(): Type {\r\n        return Array_$type;\r\n    }\r\n    reverse(): void {\r\n        let len = this._target.length;\r\n        for (let i = 0; i < len / 2.0; i++) {\r\n            let swap = this._target[(len - 1) - i];\r\n            this._target[(len - 1) - i] = this._target[i];\r\n            this._target[i] = swap;\r\n        }    \r\n    }\r\n}\r\n\r\n\t\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileImageCreatedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(TileImageCreatedEventArgs, 'TileImageCreatedEventArgs', (<any>EventArgs).$type);\r\n\tprivate _imageData: number[] = null;\r\n\tget imageData(): number[] {\r\n\t\treturn this._imageData;\r\n\t}\r\n\tset imageData(value: number[]) {\r\n\t\tthis._imageData = value;\r\n\t}\r\n\tprivate _image: any = null;\r\n\tget image(): any {\r\n\t\treturn this._image;\r\n\t}\r\n\tset image(value: any) {\r\n\t\tthis._image = value;\r\n\t}\r\n\tprivate _z: number = 0;\r\n\tget z(): number {\r\n\t\treturn this._z;\r\n\t}\r\n\tset z(value: number) {\r\n\t\tthis._z = value;\r\n\t}\r\n\tprivate _x: number = 0;\r\n\tget x(): number {\r\n\t\treturn this._x;\r\n\t}\r\n\tset x(value: number) {\r\n\t\tthis._x = value;\r\n\t}\r\n\tprivate _y: number = 0;\r\n\tget y(): number {\r\n\t\treturn this._y;\r\n\t}\r\n\tset y(value: number) {\r\n\t\tthis._y = value;\r\n\t}\r\n\tprivate _url: string = null;\r\n\tget url(): string {\r\n\t\treturn this._url;\r\n\t}\r\n\tset url(value: string) {\r\n\t\tthis._url = value;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileImageCreatedEventArgs extends TileImageCreatedEventArgs {\r\n\tstatic $t: Type = markType(HeatTileImageCreatedEventArgs, 'HeatTileImageCreatedEventArgs', (<any>TileImageCreatedEventArgs).$type);\r\n\tprivate _globalMinimumValue: number = 0;\r\n\tget globalMinimumValue(): number {\r\n\t\treturn this._globalMinimumValue;\r\n\t}\r\n\tset globalMinimumValue(value: number) {\r\n\t\tthis._globalMinimumValue = value;\r\n\t}\r\n\tprivate _globalMaximumValue: number = 0;\r\n\tget globalMaximumValue(): number {\r\n\t\treturn this._globalMaximumValue;\r\n\t}\r\n\tset globalMaximumValue(value: number) {\r\n\t\tthis._globalMaximumValue = value;\r\n\t}\r\n\tprivate _globalMaximumValueLongitude: number = 0;\r\n\tget globalMaximumValueLongitude(): number {\r\n\t\treturn this._globalMaximumValueLongitude;\r\n\t}\r\n\tset globalMaximumValueLongitude(value: number) {\r\n\t\tthis._globalMaximumValueLongitude = value;\r\n\t}\r\n\tprivate _globalMaximumValueLatitude: number = 0;\r\n\tget globalMaximumValueLatitude(): number {\r\n\t\treturn this._globalMaximumValueLatitude;\r\n\t}\r\n\tset globalMaximumValueLatitude(value: number) {\r\n\t\tthis._globalMaximumValueLatitude = value;\r\n\t}\r\n\tprivate _globalMinimumValueLongitude: number = 0;\r\n\tget globalMinimumValueLongitude(): number {\r\n\t\treturn this._globalMinimumValueLongitude;\r\n\t}\r\n\tset globalMinimumValueLongitude(value: number) {\r\n\t\tthis._globalMinimumValueLongitude = value;\r\n\t}\r\n\tprivate _globalMinimumValueLatitude: number = 0;\r\n\tget globalMinimumValueLatitude(): number {\r\n\t\treturn this._globalMinimumValueLatitude;\r\n\t}\r\n\tset globalMinimumValueLatitude(value: number) {\r\n\t\tthis._globalMinimumValueLatitude = value;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Number_$type, Type, markType } from \"./type\";\r\nimport { TileWorkSettings } from \"./TileWorkSettings\";\r\nimport { ITileWorkCompletedSink } from \"./ITileWorkCompletedSink\";\r\nimport { HeatTileScaler } from \"./HeatTileScaler\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { Rect } from \"./Rect\";\r\nimport { Color } from \"./Color\";\r\nimport { HeatTileImageCreatedEventArgs } from \"./HeatTileImageCreatedEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { truncate, isNaN_, logBase } from \"./number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileGeneratorWorker extends Base {\r\n\tstatic $t: Type = markType(HeatTileGeneratorWorker, 'HeatTileGeneratorWorker');\r\n\tprivate _settings: TileWorkSettings = null;\r\n\tprivate _imageData: number[] = null;\r\n\tprivate _x: number = 0;\r\n\tprivate _y: number = 0;\r\n\tprivate _z: number = 0;\r\n\tprivate _url: string = null;\r\n\tprivate static _idLock: any = {};\r\n\tprivate static _nextId: number = 0;\r\n\tprivate _messageId: number = 0;\r\n\tget messageId(): number {\r\n\t\treturn this._messageId;\r\n\t}\r\n\tset messageId(value: number) {\r\n\t\tthis._messageId = value;\r\n\t}\r\n\tprivate _transferableSupported: boolean = false;\r\n\tget transferableSupported(): boolean {\r\n\t\treturn this._transferableSupported;\r\n\t}\r\n\tset transferableSupported(value: boolean) {\r\n\t\tthis._transferableSupported = value;\r\n\t}\r\n\tprivate _id: number = 0;\r\n\tget id(): number {\r\n\t\treturn this._id;\r\n\t}\r\n\tget settings(): TileWorkSettings {\r\n\t\treturn this._settings;\r\n\t}\r\n\tconstructor(settings: TileWorkSettings) {\r\n\t\tsuper();\r\n\t\tthis._settings = settings;\r\n\t\tHeatTileGeneratorWorker._nextId++;\r\n\t\tif (HeatTileGeneratorWorker._nextId == 0x7FFFFFFFFFFFFFFF) {\r\n\t\t\tHeatTileGeneratorWorker._nextId = 0;\r\n\t\t}\r\n\t\tthis._id = HeatTileGeneratorWorker._nextId;\r\n\t}\r\n\tdoWork(): void {\r\n\t\tlet blurRadius: number = this.settings.blurRadius;\r\n\t\tlet zoomedBlurRadius: number = blurRadius;\r\n\t\tlet maxBlurRadius: number = this.settings.maxBlurRadius;\r\n\t\tlet scaler: HeatTileScaler = this.settings.scaler;\r\n\t\tthis._x = this.settings.x;\r\n\t\tthis._y = this.settings.y;\r\n\t\tthis._z = this.settings.z;\r\n\t\tif (this.settings.useBlurRadiusAdjustedForZoom && this._z > 0) {\r\n\t\t\tlet zoomFactor = Math.sqrt(1 * 1 + 1 * 1) * Math.pow(2, this._z - 1);\r\n\t\t\tzoomedBlurRadius = blurRadius * zoomFactor;\r\n\t\t}\r\n\t\tif (!isNaN_(maxBlurRadius)) {\r\n\t\t\tif (zoomedBlurRadius > maxBlurRadius) {\r\n\t\t\t\tzoomedBlurRadius = maxBlurRadius;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet longitudes: number[] = this.settings.xValues;\r\n\t\tlet latitudes: number[] = this.settings.yValues;\r\n\t\tlet values: number[] = this.settings.values;\r\n\t\tlet longitudesLength: number = this.settings.xValues.length;\r\n\t\tlet latitudesLength: number = this.settings.yValues.length;\r\n\t\tlet currLongitude: number;\r\n\t\tlet currLatitude: number;\r\n\t\tlet currValue: number;\r\n\t\tlet currMinLongitude: number;\r\n\t\tlet currMaxLongitude: number;\r\n\t\tlet currMinLatitude: number;\r\n\t\tlet currMaxLatitude: number;\r\n\t\tlet minimumLongitude: number = this.settings.minimumVisibleLongitude;\r\n\t\tlet maximumLongitude: number = this.settings.maximumVisibleLongitude;\r\n\t\tlet minimumLatitude: number = this.settings.minimumVisibleLatitude;\r\n\t\tlet maximumLatitude: number = this.settings.maximumVisibleLatitude;\r\n\t\tlet filterBreadth: number = this.getFilterBreadth(this.settings.tileViewport, zoomedBlurRadius);\r\n\t\tlet filter: number[] = this.getFilter(filterBreadth, zoomedBlurRadius);\r\n\t\tlet zoomedBlurRadiusLat: number = Math.abs(scaler.unscaleLatitude(0, this.settings.window, this.settings.tileViewport) - scaler.unscaleLatitude(zoomedBlurRadius, this.settings.window, this.settings.tileViewport));\r\n\t\tlet zoomedBlurRadiusLon: number = Math.abs(scaler.unscaleLongitude(0, this.settings.window, this.settings.tileViewport) - scaler.unscaleLongitude(zoomedBlurRadius, this.settings.window, this.settings.tileViewport));\r\n\t\tlet filterStartX: number;\r\n\t\tlet filterStartY: number;\r\n\t\tlet visibleLongitudes: List$1<number> = new List$1<number>(Number_$type, 0);\r\n\t\tlet visibleLatitudes: List$1<number> = new List$1<number>(Number_$type, 0);\r\n\t\tlet visibleValues: List$1<number> = new List$1<number>(Number_$type, 0);\r\n\t\tfor (let i = 0; i < longitudesLength; i++) {\r\n\t\t\tcurrLongitude = longitudes[i];\r\n\t\t\tcurrLatitude = latitudes[i];\r\n\t\t\tcurrValue = values[i];\r\n\t\t\tcurrMinLongitude = currLongitude - zoomedBlurRadiusLon;\r\n\t\t\tcurrMaxLongitude = currLongitude + zoomedBlurRadiusLon;\r\n\t\t\tcurrMinLatitude = currLatitude - zoomedBlurRadiusLat;\r\n\t\t\tcurrMaxLatitude = currLatitude + zoomedBlurRadiusLat;\r\n\t\t\tif (currMaxLongitude < minimumLongitude || currMaxLatitude < minimumLatitude || currMinLatitude > maximumLatitude || currMinLongitude > maximumLongitude) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tvisibleLongitudes.add(currLongitude);\r\n\t\t\tvisibleLatitudes.add(currLatitude);\r\n\t\t\tvisibleValues.add(currValue);\r\n\t\t}\r\n\t\tlet imageData: number[] = this.getImageBytes(this.settings.tileViewport);\r\n\t\tlet accumulationData: number[] = this.getAccumulationData(this.settings.tileViewport);\r\n\t\tlet tileWidth: number = <number>truncate(this.settings.tileViewport.width);\r\n\t\tlet visibleLength: number = visibleLatitudes.count;\r\n\t\tscaler.scaleLatitudes(visibleLatitudes, this.settings.window, this.settings.tileViewport);\r\n\t\tscaler.scaleLongitudes(visibleLongitudes, this.settings.window, this.settings.tileViewport);\r\n\t\tlet filterX: number;\r\n\t\tlet filterY: number;\r\n\t\tlet filterVal: number;\r\n\t\tlet filteredValue: number;\r\n\t\tfor (let i1 = 0; i1 < visibleLength; i1++) {\r\n\t\t\tfilterStartX = <number>truncate(Math.floor(visibleLongitudes._inner[i1] - zoomedBlurRadius));\r\n\t\t\tfilterStartY = <number>truncate(Math.floor(visibleLatitudes._inner[i1] - zoomedBlurRadius));\r\n\t\t\tfor (let j = filterStartX; j < filterStartX + filterBreadth; j++) {\r\n\t\t\t\tfor (let k = filterStartY; k < filterStartY + filterBreadth; k++) {\r\n\t\t\t\t\tfilterX = j - filterStartX;\r\n\t\t\t\t\tfilterY = k - filterStartY;\r\n\t\t\t\t\tif (j < 0 || j > (tileWidth - 1) || k < 0 || k > (tileWidth - 1)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfilterVal = filter[filterY * filterBreadth + filterX];\r\n\t\t\t\t\tfilteredValue = visibleValues._inner[i1] * filterVal;\r\n\t\t\t\t\taccumulationData[k * tileWidth + j] = accumulationData[k * tileWidth + j] + filteredValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet accumulationLength: number = accumulationData.length;\r\n\t\tlet maxValue: number = -1.7976931348623157E+308;\r\n\t\tlet minValue: number = 1.7976931348623157E+308;\r\n\t\tlet currAcc: number;\r\n\t\tif (!isNaN_(this.settings.globalMinimum) && !isNaN_(this.settings.globalMaximum) && this.settings.useGlobalMinMax && !this.settings.testRun) {\r\n\t\t\tminValue = this.settings.globalMinimum;\r\n\t\t\tmaxValue = this.settings.globalMaximum;\r\n\t\t\tif (!isNaN_(this.settings.minimumValue)) {\r\n\t\t\t\tminValue = this.settings.minimumValue;\r\n\t\t\t}\r\n\t\t\tif (!isNaN_(this.settings.maximumValue)) {\r\n\t\t\t\tmaxValue = this.settings.maximumValue;\r\n\t\t\t}\r\n\t\t} else if (!isNaN_(this.settings.minimumValue) && !isNaN_(this.settings.maximumValue)) {\r\n\t\t\tminValue = this.settings.minimumValue;\r\n\t\t\tmaxValue = this.settings.maximumValue;\r\n\t\t} else {\r\n\t\t\tlet maxAccLocation: number = -1;\r\n\t\t\tlet minAccLocation: number = -1;\r\n\t\t\tfor (let i2 = 0; i2 < accumulationLength; i2++) {\r\n\t\t\t\tcurrAcc = accumulationData[i2];\r\n\t\t\t\tif (currAcc > 0) {\r\n\t\t\t\t\tif (currAcc > maxValue) {\r\n\t\t\t\t\t\tmaxValue = currAcc;\r\n\t\t\t\t\t\tmaxAccLocation = i2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (currAcc < minValue) {\r\n\t\t\t\t\t\tminValue = currAcc;\r\n\t\t\t\t\t\tminAccLocation = i2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet maxAccPixelY: number = <number>truncate(Math.floor(maxAccLocation / <number>tileWidth));\r\n\t\t\tlet maxAccPixelX: number = maxAccLocation % tileWidth;\r\n\t\t\tlet minAccPixelY: number = <number>truncate(Math.floor(minAccLocation / <number>tileWidth));\r\n\t\t\tlet minAccPixelX: number = minAccLocation % tileWidth;\r\n\t\t\tthis.settings.globalMinimum = minValue;\r\n\t\t\tthis.settings.globalMaximum = maxValue;\r\n\t\t\tlet maxCount: number = 0;\r\n\t\t\tlet minCount: number = 0;\r\n\t\t\tlet sumMaxLatitude: number = 0;\r\n\t\t\tlet sumMaxLongitude: number = 0;\r\n\t\t\tlet sumMinLatitude: number = 0;\r\n\t\t\tlet sumMinLongitude: number = 0;\r\n\t\t\tfor (let i3 = 0; i3 < visibleLength; i3++) {\r\n\t\t\t\tfilterStartX = <number>truncate(Math.floor(visibleLongitudes._inner[i3] - zoomedBlurRadius));\r\n\t\t\t\tfilterStartY = <number>truncate(Math.floor(visibleLatitudes._inner[i3] - zoomedBlurRadius));\r\n\t\t\t\tfor (let j1 = filterStartX; j1 < filterStartX + filterBreadth; j1++) {\r\n\t\t\t\t\tfor (let k1 = filterStartY; k1 < filterStartY + filterBreadth; k1++) {\r\n\t\t\t\t\t\tfilterX = j1 - filterStartX;\r\n\t\t\t\t\t\tfilterY = k1 - filterStartY;\r\n\t\t\t\t\t\tif (j1 < 0 || j1 > (tileWidth - 1) || k1 < 0 || k1 > (tileWidth - 1)) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j1 == maxAccPixelX && k1 == maxAccPixelY) {\r\n\t\t\t\t\t\t\tmaxCount++;\r\n\t\t\t\t\t\t\tsumMaxLatitude = sumMaxLatitude + scaler.unscaleLatitude(visibleLatitudes._inner[i3], this.settings.window, this.settings.tileViewport);\r\n\t\t\t\t\t\t\tsumMaxLongitude = sumMaxLongitude + scaler.unscaleLongitude(visibleLongitudes._inner[i3], this.settings.window, this.settings.tileViewport);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (j1 == minAccPixelX && k1 == minAccPixelY) {\r\n\t\t\t\t\t\t\tminCount++;\r\n\t\t\t\t\t\t\tsumMinLatitude = sumMinLatitude + scaler.unscaleLatitude(visibleLatitudes._inner[i3], this.settings.window, this.settings.tileViewport);\r\n\t\t\t\t\t\t\tsumMinLongitude = sumMinLongitude + scaler.unscaleLongitude(visibleLongitudes._inner[i3], this.settings.window, this.settings.tileViewport);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._maxAccPixelLatitude = sumMaxLatitude / maxCount;\r\n\t\t\tthis._maxAccPixelLongitude = sumMaxLongitude / maxCount;\r\n\t\t\tthis._minAccPixelLatitude = sumMinLatitude / minCount;\r\n\t\t\tthis._minAccPixelLongitude = sumMinLongitude / minCount;\r\n\t\t\tif (!isNaN_(this.settings.minimumValue)) {\r\n\t\t\t\tminValue = this.settings.minimumValue;\r\n\t\t\t}\r\n\t\t\tif (!isNaN_(this.settings.maximumValue)) {\r\n\t\t\t\tmaxValue = this.settings.maximumValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.settings.testRun) {\r\n\t\t\tthis.doRGBInterpolation(imageData, accumulationData, maxValue, minValue);\r\n\t\t\tthis._imageData = imageData;\r\n\t\t}\r\n\t\tthis.finish();\r\n\t}\r\n\tprivate doRGBInterpolation(imageData: number[], accumulationData: number[], maxValue: number, minValue: number): void {\r\n\t\tlet currAcc: number;\r\n\t\tlet accumulationLength: number = accumulationData.length;\r\n\t\tif (this.settings.useLogarithmicScale) {\r\n\t\t\tif (minValue <= 0) {\r\n\t\t\t\tminValue = 0;\r\n\t\t\t} else {\r\n\t\t\t\tminValue = logBase(minValue, this.settings.logarithmBase);\r\n\t\t\t}\r\n\t\t\tif (maxValue <= 0) {\r\n\t\t\t\tmaxValue = 0;\r\n\t\t\t} else {\r\n\t\t\t\tmaxValue = logBase(maxValue, this.settings.logarithmBase);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet p: number = 0;\r\n\t\tlet range: number = maxValue - minValue;\r\n\t\tif (isNaN_(range) || range <= 0) {\r\n\t\t\trange = 1;\r\n\t\t}\r\n\t\tlet currA: number;\r\n\t\tlet currR: number;\r\n\t\tlet currG: number;\r\n\t\tlet currB: number;\r\n\t\tlet useLogarithm = this.settings.useLogarithmicScale;\r\n\t\tlet logarithmBase = this.settings.logarithmBase;\r\n\t\tif (this.settings.scaleColors != null) {\r\n\t\t\tlet minA: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet maxA: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet minR: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet maxR: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet minG: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet maxG: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet minB: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet maxB: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet rangeA: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet rangeR: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet rangeG: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet rangeB: number[] = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\tlet offsets: number[] = this.settings.scaleColorOffsets;\r\n\t\t\tif (offsets == null || offsets.length != this.settings.scaleColors.length) {\r\n\t\t\t\toffsets = <number[]>new Array(this.settings.scaleColors.length);\r\n\t\t\t\tif (offsets.length == 1) {\r\n\t\t\t\t\toffsets[0] = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i = 0; i < this.settings.scaleColors.length; i++) {\r\n\t\t\t\t\t\toffsets[i] = <number>i / <number>(this.settings.scaleColors.length - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i1 = 0; i1 < this.settings.scaleColors.length; i1++) {\r\n\t\t\t\tminA[i1] = this.settings.scaleColors[i1].a;\r\n\t\t\t\tminR[i1] = this.settings.scaleColors[i1].r;\r\n\t\t\t\tminG[i1] = this.settings.scaleColors[i1].g;\r\n\t\t\t\tminB[i1] = this.settings.scaleColors[i1].b;\r\n\t\t\t\tif (i1 < this.settings.scaleColors.length - 1) {\r\n\t\t\t\t\tmaxA[i1] = this.settings.scaleColors[i1 + 1].a;\r\n\t\t\t\t\tmaxR[i1] = this.settings.scaleColors[i1 + 1].r;\r\n\t\t\t\t\tmaxG[i1] = this.settings.scaleColors[i1 + 1].g;\r\n\t\t\t\t\tmaxB[i1] = this.settings.scaleColors[i1 + 1].b;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmaxA[i1] = this.settings.scaleColors[i1].a;\r\n\t\t\t\t\tmaxR[i1] = this.settings.scaleColors[i1].r;\r\n\t\t\t\t\tmaxG[i1] = this.settings.scaleColors[i1].g;\r\n\t\t\t\t\tmaxB[i1] = this.settings.scaleColors[i1].b;\r\n\t\t\t\t}\r\n\t\t\t\trangeA[i1] = maxA[i1] - minA[i1];\r\n\t\t\t\trangeR[i1] = maxR[i1] - minR[i1];\r\n\t\t\t\trangeG[i1] = maxG[i1] - minG[i1];\r\n\t\t\t\trangeB[i1] = maxB[i1] - minB[i1];\r\n\t\t\t}\r\n\t\t\tfor (let i2 = 0; i2 < accumulationLength; i2++) {\r\n\t\t\t\tcurrAcc = accumulationData[i2];\r\n\t\t\t\tif (currAcc == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (useLogarithm) {\r\n\t\t\t\t\tif (currAcc <= 0) {\r\n\t\t\t\t\t\tcurrAcc = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcurrAcc = logBase(currAcc, logarithmBase);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tp = (currAcc - minValue) / (range);\r\n\t\t\t\tif (p < 0) {\r\n\t\t\t\t\tp = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (p > 1) {\r\n\t\t\t\t\tp = 1;\r\n\t\t\t\t}\r\n\t\t\t\tlet k: number = 0;\r\n\t\t\t\tfor (let j = 0; j < offsets.length; j++) {\r\n\t\t\t\t\tif (offsets[j] >= p) {\r\n\t\t\t\t\t\tk = j - 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (k > offsets.length - 2) {\r\n\t\t\t\t\tk = offsets.length - 2;\r\n\t\t\t\t}\r\n\t\t\t\tif (k < 0) {\r\n\t\t\t\t\tk = 0;\r\n\t\t\t\t}\r\n\t\t\t\tp = (p - offsets[k]) / (offsets[k + 1] - offsets[k]);\r\n\t\t\t\tcurrA = <number>truncate(Math.floor(minA[k] + p * (rangeA[k])));\r\n\t\t\t\tcurrR = <number>truncate(Math.floor(minR[k] + p * (rangeR[k])));\r\n\t\t\t\tcurrG = <number>truncate(Math.floor(minG[k] + p * (rangeG[k])));\r\n\t\t\t\tcurrB = <number>truncate(Math.floor(minB[k] + p * (rangeB[k])));\r\n\t\t\t\timageData[4 * i2] = currA;\r\n\t\t\t\timageData[4 * i2 + 1] = currR;\r\n\t\t\t\timageData[4 * i2 + 2] = currG;\r\n\t\t\t\timageData[4 * i2 + 3] = currB;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet minA1: number = this.settings.minimumColor.a;\r\n\t\t\tlet maxA1: number = this.settings.maximumColor.a;\r\n\t\t\tlet minR1: number = this.settings.minimumColor.r;\r\n\t\t\tlet maxR1: number = this.settings.maximumColor.r;\r\n\t\t\tlet minG1: number = this.settings.minimumColor.g;\r\n\t\t\tlet maxG1: number = this.settings.maximumColor.g;\r\n\t\t\tlet minB1: number = this.settings.minimumColor.b;\r\n\t\t\tlet maxB1: number = this.settings.maximumColor.b;\r\n\t\t\tlet rangeA1: number = maxA1 - minA1;\r\n\t\t\tlet rangeR1: number = maxR1 - minR1;\r\n\t\t\tlet rangeG1: number = maxG1 - minG1;\r\n\t\t\tlet rangeB1: number = maxB1 - minB1;\r\n\t\t\tfor (let i3 = 0; i3 < accumulationLength; i3++) {\r\n\t\t\t\tcurrAcc = accumulationData[i3];\r\n\t\t\t\tif (currAcc == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (useLogarithm) {\r\n\t\t\t\t\tcurrAcc = logBase(currAcc, logarithmBase);\r\n\t\t\t\t}\r\n\t\t\t\tp = (currAcc - minValue) / (range);\r\n\t\t\t\tif (p < 0) {\r\n\t\t\t\t\tp = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (p > 1) {\r\n\t\t\t\t\tp = 1;\r\n\t\t\t\t}\r\n\t\t\t\tcurrA = <number>truncate(Math.floor(minA1 + p * (rangeA1)));\r\n\t\t\t\tcurrR = <number>truncate(Math.floor(minR1 + p * (rangeR1)));\r\n\t\t\t\tcurrG = <number>truncate(Math.floor(minG1 + p * (rangeG1)));\r\n\t\t\t\tcurrB = <number>truncate(Math.floor(minB1 + p * (rangeB1)));\r\n\t\t\t\timageData[4 * i3] = currA;\r\n\t\t\t\timageData[4 * i3 + 1] = currR;\r\n\t\t\t\timageData[4 * i3 + 2] = currG;\r\n\t\t\t\timageData[4 * i3 + 3] = currB;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate getAccumulationData(tileViewport: Rect): number[] {\r\n\t\tlet arr = <number[]>new Array(<number>truncate(tileViewport.width) * <number>truncate(tileViewport.height));\r\n\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\tarr[i] = 0;\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tprivate getImageBytes(tileViewport: Rect): number[] {\r\n\t\tlet arr = <number[]>new Array(<number>truncate(tileViewport.width) * <number>truncate(tileViewport.height) * 4);\r\n\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\tarr[i] = 0;\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tprivate getFilter(filterBreadth: number, zoomedBlurRadius: number): number[] {\r\n\t\tlet filter = <number[]>new Array(<number>filterBreadth * <number>filterBreadth);\r\n\t\tfor (let i = 0; i < filter.length; i++) {\r\n\t\t\tfilter[i] = 0;\r\n\t\t}\r\n\t\tlet radius = filterBreadth / 2;\r\n\t\tlet center = filterBreadth / 2;\r\n\t\tfor (let i1 = 0; i1 < filterBreadth; i1++) {\r\n\t\t\tfor (let j = 0; j < filterBreadth; j++) {\r\n\t\t\t\tlet dist = Math.sqrt(Math.pow(i1 - center, 2) + Math.pow(j - center, 2));\r\n\t\t\t\tif (dist > radius) {\r\n\t\t\t\t\tfilter[j * filterBreadth + i1] = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfilter[j * filterBreadth + i1] = radius - dist;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet sum: number = 0;\r\n\t\tlet max: number = -1.7976931348623157E+308;\r\n\t\tlet min: number = 1.7976931348623157E+308;\r\n\t\tfor (let i2 = 0; i2 < filterBreadth; i2++) {\r\n\t\t\tfor (let j1 = 0; j1 < filterBreadth; j1++) {\r\n\t\t\t\tlet curr = filter[j1 * filterBreadth + i2];\r\n\t\t\t\tif (curr == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tsum += curr;\r\n\t\t\t\tmax = curr > max ? curr : max;\r\n\t\t\t\tmin = curr < min ? curr : min;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i3 = 0; i3 < filterBreadth; i3++) {\r\n\t\t\tfor (let j2 = 0; j2 < filterBreadth; j2++) {\r\n\t\t\t\tlet curr1 = filter[j2 * filterBreadth + i3];\r\n\t\t\t\tif (curr1 == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tlet p = (curr1 - min) / (max - min);\r\n\t\t\t\tfilter[j2 * filterBreadth + i3] = 0.01 + p * (0.99);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfilter[<number>truncate(center) * filterBreadth + <number>truncate(center)] = 1;\r\n\t\treturn filter;\r\n\t}\r\n\tprivate getFilterBreadth(tileViewport: Rect, zoomedBlurRadius: number): number {\r\n\t\treturn <number>truncate(Math.floor(zoomedBlurRadius * 2));\r\n\t}\r\n\tprivate finish(): void {\r\n\t\tif (this.completedSink == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.completedSink.onCompleted(((() => {\r\n\t\t\tlet $ret = new HeatTileImageCreatedEventArgs();\r\n\t\t\t$ret.url = this._url;\r\n\t\t\t$ret.x = this._x;\r\n\t\t\t$ret.y = this._y;\r\n\t\t\t$ret.z = this._z;\r\n\t\t\t$ret.globalMinimumValue = this.settings.globalMinimum;\r\n\t\t\t$ret.globalMaximumValue = this.settings.globalMaximum;\r\n\t\t\t$ret.globalMaximumValueLongitude = this._maxAccPixelLongitude;\r\n\t\t\t$ret.globalMaximumValueLatitude = this._maxAccPixelLatitude;\r\n\t\t\t$ret.globalMinimumValueLongitude = this._minAccPixelLongitude;\r\n\t\t\t$ret.globalMinimumValueLatitude = this._minAccPixelLatitude;\r\n\t\t\t$ret.imageData = this._imageData;\r\n\t\t\t$ret.image = this.settings.image;\r\n\t\t\treturn $ret;\r\n\t\t})()));\r\n\t}\r\n\tprivate static _curr: number = 0;\r\n\tprivate _maxAccPixelLatitude: number = 0;\r\n\tprivate _maxAccPixelLongitude: number = 0;\r\n\tprivate _minAccPixelLatitude: number = 0;\r\n\tprivate _minAccPixelLongitude: number = 0;\r\n\tprivate _completedSink: ITileWorkCompletedSink = null;\r\n\tget completedSink(): ITileWorkCompletedSink {\r\n\t\treturn this._completedSink;\r\n\t}\r\n\tset completedSink(value: ITileWorkCompletedSink) {\r\n\t\tthis._completedSink = value;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ScalerVisibleBounds extends Base {\r\n\tstatic $t: Type = markType(ScalerVisibleBounds, 'ScalerVisibleBounds');\r\n\tconstructor(left: number, top: number, right: number, bottom: number) {\r\n\t\tsuper();\r\n\t\tthis.left = left;\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t}\r\n\tprivate _top: number = 0;\r\n\tget top(): number {\r\n\t\treturn this._top;\r\n\t}\r\n\tset top(value: number) {\r\n\t\tthis._top = value;\r\n\t}\r\n\tprivate _bottom: number = 0;\r\n\tget bottom(): number {\r\n\t\treturn this._bottom;\r\n\t}\r\n\tset bottom(value: number) {\r\n\t\tthis._bottom = value;\r\n\t}\r\n\tprivate _right: number = 0;\r\n\tget right(): number {\r\n\t\treturn this._right;\r\n\t}\r\n\tset right(value: number) {\r\n\t\tthis._right = value;\r\n\t}\r\n\tprivate _left: number = 0;\r\n\tget left(): number {\r\n\t\treturn this._left;\r\n\t}\r\n\tset left(value: number) {\r\n\t\tthis._left = value;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Point, Type, markType } from \"./type\";\r\nimport { Size } from \"./Size\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class Rect extends Base {\r\n\tstatic $t: Type = markType(Rect, 'Rect');\r\n\tconstructor(initNumber: number, left: number, top: number, width: number, height: number);\r\n\tconstructor(initNumber: number, left: number, top: number, size: Size);\r\n\tconstructor(initNumber: number, point1: Point, point2: Point);\r\n\tconstructor(initNumber: number, point1: Point, size: Size);\r\n\tconstructor(initNumber: number);\r\n\tconstructor(initNumber: number, ..._rest: any[]);\r\n\tconstructor(initNumber: number, ..._rest: any[]) {\r\n\t\tsuper();\r\n\t\tinitNumber = (initNumber == void 0) ? 0 : initNumber;\r\n\t\tswitch (initNumber) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tlet left: number = <number>_rest[0];\r\n\t\t\t\tlet top: number = <number>_rest[1];\r\n\t\t\t\tlet width: number = <number>_rest[2];\r\n\t\t\t\tlet height: number = <number>_rest[3];\r\n\t\t\t\tthis.top = top;\r\n\t\t\t\tthis.left = left;\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet left: number = <number>_rest[0];\r\n\t\t\t\tlet top: number = <number>_rest[1];\r\n\t\t\t\tlet size: Size = <Size>_rest[2];\r\n\t\t\t\tthis.top = top;\r\n\t\t\t\tthis.left = left;\r\n\t\t\t\tthis.width = size.width;\r\n\t\t\t\tthis.height = size.height;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t{\r\n\t\t\t\tlet point1: Point = <Point>_rest[0];\r\n\t\t\t\tlet point2: Point = <Point>_rest[1];\r\n\t\t\t\tthis.top = Math.min(point1.y, point2.y);\r\n\t\t\t\tthis.left = Math.min(point1.x, point2.x);\r\n\t\t\t\tthis.width = Math.max(Math.max(point1.x, point2.x) - this.left, 0);\r\n\t\t\t\tthis.height = Math.max(Math.max(point1.y, point2.y) - this.top, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t{\r\n\t\t\t\tlet point1: Point = <Point>_rest[0];\r\n\t\t\t\tlet size: Size = <Size>_rest[1];\r\n\t\t\t\tthis.top = point1.y;\r\n\t\t\t\tthis.left = point1.x;\r\n\t\t\t\tthis.width = size.width;\r\n\t\t\t\tthis.height = size.height;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t{\r\n\t\t\t\tthis.top = 0;\r\n\t\t\t\tthis.left = 0;\r\n\t\t\t\tthis.width = 0;\r\n\t\t\t\tthis.height = 0;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate _x: number = 0;\r\n\tget x(): number {\r\n\t\treturn this._x;\r\n\t}\r\n\tset x(value: number) {\r\n\t\tthis._x = value;\r\n\t\tthis._left = this._x;\r\n\t\tthis._right = this._left + this._width;\r\n\t}\r\n\tprivate _y: number = 0;\r\n\tget y(): number {\r\n\t\treturn this._y;\r\n\t}\r\n\tset y(value: number) {\r\n\t\tthis._y = value;\r\n\t\tthis._top = this._y;\r\n\t\tthis._bottom = this._top + this._height;\r\n\t}\r\n\tprivate _width: number = 0;\r\n\tget width(): number {\r\n\t\treturn this._width;\r\n\t}\r\n\tset width(value: number) {\r\n\t\tthis._width = value;\r\n\t\tthis._right = this._left + this._width;\r\n\t}\r\n\tprivate _height: number = 0;\r\n\tget height(): number {\r\n\t\treturn this._height;\r\n\t}\r\n\tset height(value: number) {\r\n\t\tthis._height = value;\r\n\t\tthis._bottom = this._top + this._height;\r\n\t}\r\n\tprivate _top: number = 0;\r\n\tget top(): number {\r\n\t\treturn this._top;\r\n\t}\r\n\tset top(value: number) {\r\n\t\tthis._top = value;\r\n\t\tthis.y = this._top;\r\n\t}\r\n\tprivate _left: number = 0;\r\n\tget left(): number {\r\n\t\treturn this._left;\r\n\t}\r\n\tset left(value: number) {\r\n\t\tthis._left = value;\r\n\t\tthis.x = this._left;\r\n\t}\r\n\tprivate _right: number = 0;\r\n\tget right(): number {\r\n\t\treturn this._right;\r\n\t}\r\n\tset right(value: number) {\r\n\t\tthis._right = value;\r\n\t\tthis._width = this._right - this._left;\r\n\t}\r\n\tprivate _bottom: number = 0;\r\n\tget bottom(): number {\r\n\t\treturn this._bottom;\r\n\t}\r\n\tset bottom(value: number) {\r\n\t\tthis._bottom = value;\r\n\t\tthis._height = this._bottom - this._top;\r\n\t}\r\n\tget isEmpty(): boolean {\r\n\t\treturn this._width < 0;\r\n\t}\r\n\tstatic get empty(): Rect {\r\n\t\treturn new Rect(0, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);\r\n\t}\r\n\tequals1(value: Rect): boolean {\r\n\t\tif (Rect.l_op_Equality(value, null)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (value.x == this.x && value.y == this.y && value.width == this.width && value.height == this.height) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate containsInternal(x: number, y: number): boolean {\r\n\t\treturn x >= this._x && x - this._width <= this._x && y >= this._y && y - this._height <= this._y;\r\n\t}\r\n\tcontainsLocation(x: number, y: number): boolean {\r\n\t\treturn !this.isEmpty && this.containsInternal(x, y);\r\n\t}\r\n\tcontainsPoint(point: Point): boolean {\r\n\t\treturn this.containsLocation(point.x, point.y);\r\n\t}\r\n\tcontainsRect(rect: Rect): boolean {\r\n\t\treturn !this.isEmpty && !rect.isEmpty && (this._x <= rect._x && this._y <= rect._y && this._x + this._width >= rect._x + rect._width) && this._y + this._height >= rect._y + rect._height;\r\n\t}\r\n\tinflate(width: number, height: number): void {\r\n\t\tthis.x -= width;\r\n\t\tthis.y -= height;\r\n\t\tthis.width += width * 2;\r\n\t\tthis.height += height * 2;\r\n\t\tif (this._width < 0 || this._height < 0) {\r\n\t\t\tthis.makeEmpty();\r\n\t\t}\r\n\t}\r\n\tprivate makeEmpty(): void {\r\n\t\tthis.top = Number.POSITIVE_INFINITY;\r\n\t\tthis.left = Number.POSITIVE_INFINITY;\r\n\t\tthis.width = Number.NEGATIVE_INFINITY;\r\n\t\tthis.height = Number.NEGATIVE_INFINITY;\r\n\t}\r\n\tintersectsWith(rect: Rect): boolean {\r\n\t\tif (this.isEmpty || rect.isEmpty) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn rect.left < this.right && this.left < rect.right && rect.top < this.bottom && this.top < rect.bottom;\r\n\t}\r\n\tintersect(other: Rect): void {\r\n\t\tif (!this.intersectsWith(other)) {\r\n\t\t\tthis.makeEmpty();\r\n\t\t} else {\r\n\t\t\tlet maxX: number = Math.max(this.x, other.x);\r\n\t\t\tlet maxY: number = Math.max(this.y, other.y);\r\n\t\t\tlet newWidth: number = Math.min(this.x + this.width, other.x + other.width) - maxX;\r\n\t\t\tlet newHeight: number = Math.min(this.y + this.height, other.y + other.height) - maxY;\r\n\t\t\tif (newWidth < 0) {\r\n\t\t\t\tnewWidth = 0;\r\n\t\t\t}\r\n\t\t\tif (newHeight < 0) {\r\n\t\t\t\tnewHeight = 0;\r\n\t\t\t}\r\n\t\t\tthis._width = newWidth;\r\n\t\t\tthis._height = newHeight;\r\n\t\t\tthis._x = maxX;\r\n\t\t\tthis._y = maxY;\r\n\t\t\tthis._left = this._x;\r\n\t\t\tthis._top = this._y;\r\n\t\t\tthis._right = this._left + this._width;\r\n\t\t\tthis._bottom = this._top + this._height;\r\n\t\t}\r\n\t}\r\n\tunion(other: Rect): void {\r\n\t\tif (this.isEmpty) {\r\n\t\t\tthis._x = other.x;\r\n\t\t\tthis._y = other.y;\r\n\t\t\tthis._width = other.width;\r\n\t\t\tthis._height = other.height;\r\n\t\t\tthis._left = this._x;\r\n\t\t\tthis._top = this._y;\r\n\t\t\tthis._right = this._left + this._width;\r\n\t\t\tthis._bottom = this._top + this._height;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!other.isEmpty) {\r\n\t\t\tlet minX: number = Math.min(this.x, other.x);\r\n\t\t\tlet minY: number = Math.min(this.y, other.y);\r\n\t\t\tlet newWidth: number = this.width;\r\n\t\t\tlet newHeight: number = this.height;\r\n\t\t\tif (other.width == Number.POSITIVE_INFINITY || this.width == Number.POSITIVE_INFINITY) {\r\n\t\t\t\tnewWidth = Number.POSITIVE_INFINITY;\r\n\t\t\t} else {\r\n\t\t\t\tlet maxRight: number = Math.max(this.right, other.right);\r\n\t\t\t\tnewWidth = maxRight - minX;\r\n\t\t\t}\r\n\t\t\tif (other.height == Number.POSITIVE_INFINITY || this.height == Number.POSITIVE_INFINITY) {\r\n\t\t\t\tnewHeight = Number.POSITIVE_INFINITY;\r\n\t\t\t} else {\r\n\t\t\t\tlet maxBottom: number = Math.max(this.bottom, other.bottom);\r\n\t\t\t\tnewHeight = maxBottom - minY;\r\n\t\t\t}\r\n\t\t\tthis._x = minX;\r\n\t\t\tthis._y = minY;\r\n\t\t\tthis._width = newWidth;\r\n\t\t\tthis._height = newHeight;\r\n\t\t\tthis._left = this._x;\r\n\t\t\tthis._top = this._y;\r\n\t\t\tthis._right = this._left + this._width;\r\n\t\t\tthis._bottom = this._top + this._height;\r\n\t\t}\r\n\t}\r\n\tequals(obj: any): boolean {\r\n\t\tif (obj == null) {\r\n\t\t\treturn super.equals(obj);\r\n\t\t}\r\n\t\tlet other = <Rect>obj;\r\n\t\treturn other.left == this.left && other.top == this.top && other.width == this.width && other.height == this.height;\r\n\t}\r\n\tgetHashCode(): number {\r\n\t\treturn (this._x) ^ (this._y) ^ (this._width) ^ (this._height);\r\n\t}\r\n\tcopy(): Rect {\r\n\t\treturn new Rect(0, this.x, this.y, this.width, this.height);\r\n\t}\r\n\tstatic l_op_Equality(a: Rect, b: Rect): boolean {\r\n\t\tif (<any>a == null) {\r\n\t\t\treturn <any>b == null;\r\n\t\t} else if (<any>b == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn a._x == b._x && a._y == b._y && a._width == b._width && a._height == b._height;\r\n\t}\r\n\tstatic l_op_Inequality(a: Rect, b: Rect): boolean {\r\n\t\tif (<any>a == null) {\r\n\t\t\treturn <any>b != null;\r\n\t\t} else if (<any>b == null) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn a._x != b._x || a._y != b._y || a._width != b._width || a._height != b._height;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"./type\";\r\nimport { ScalerVisibleBounds } from \"./ScalerVisibleBounds\";\r\nimport { Rect } from \"./Rect\";\r\nimport { List$1 } from \"./List$1\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileScaler extends Base {\r\n\tstatic $t: Type = markType(HeatTileScaler, 'HeatTileScaler');\r\n\tprivate static readonly minimumLatitude: number = -85.05112878;\r\n\tprivate static readonly maximumLatitude: number = 85.05112878;\r\n\tprivate static readonly minimumLongitude: number = -180;\r\n\tprivate static readonly maximumLongitude: number = 180;\r\n\tprivate static readonly degreeAsRadian: number = Math.PI / 180;\r\n\tprivate _latitudeSpan: number = 0;\r\n\tprivate _longitudeSpan: number = 0;\r\n\tprivate _projectedMaximum: number = 0;\r\n\tprivate _projectedRange: number = 0;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._latitudeSpan = HeatTileScaler.maximumLatitude - HeatTileScaler.minimumLatitude;\r\n\t\tthis._longitudeSpan = HeatTileScaler.maximumLongitude - HeatTileScaler.minimumLongitude;\r\n\t\tthis._projectedMaximum = this.getProjectedValue(HeatTileScaler.maximumLatitude);\r\n\t\tthis._projectedRange = this.getProjectedValue(HeatTileScaler.maximumLatitude) - this.getProjectedValue(HeatTileScaler.minimumLatitude);\r\n\t}\r\n\tprivate getProjectedValue(value: number): number {\r\n\t\tlet valueR: number = value * (HeatTileScaler.degreeAsRadian);\r\n\t\tlet valueSin: number = Math.sin(valueR);\r\n\t\tlet projectedValue: number = 0.5 * Math.log((1 + valueSin) / (1 - valueSin));\r\n\t\treturn projectedValue;\r\n\t}\r\n\tprivate static getVisibleBounds(window: Rect, viewport: Rect): ScalerVisibleBounds {\r\n\t\tlet worldRect = new Rect(0, viewport.left / window.width, viewport.top / window.height, viewport.width / window.width, viewport.height / window.height);\r\n\t\tlet visibleLeft = worldRect.left + worldRect.width * window.left;\r\n\t\tlet visibleRight = worldRect.left + worldRect.width * window.right;\r\n\t\tlet visibleTop = worldRect.top + worldRect.height * window.top;\r\n\t\tlet visibleBottom = worldRect.top + worldRect.height * window.bottom;\r\n\t\tlet visibleBounds = new ScalerVisibleBounds(visibleLeft, visibleTop, visibleRight, visibleBottom);\r\n\t\treturn visibleBounds;\r\n\t}\r\n\tstatic getUnprojectedValue(value: number): number {\r\n\t\tvalue = Math.exp(2 * value);\r\n\t\treturn Math.asin((value - 1) / (value + 1)) / HeatTileScaler.degreeAsRadian;\r\n\t}\r\n\tunscaleLatitude(value: number, window: Rect, viewport: Rect): number {\r\n\t\tlet unscaledValue = (value - viewport.top) * window.width + window.top * viewport.height;\r\n\t\tunscaledValue = this.getProjectedValue(HeatTileScaler.maximumLatitude) - unscaledValue / (viewport.height / this._projectedRange);\r\n\t\treturn HeatTileScaler.getUnprojectedValue(unscaledValue);\r\n\t}\r\n\tscaleLatitude(value: number, window: Rect, viewport: Rect): number {\r\n\t\tlet scaledValue = viewport.top + this.getScaledValue(value, viewport.height);\r\n\t\treturn (scaledValue - window.top * viewport.height) / window.width;\r\n\t}\r\n\tprivate getScaledValue(unscaledValue: number, viewportHeight: number): number {\r\n\t\tunscaledValue = unscaledValue > HeatTileScaler.minimumLatitude ? (unscaledValue < HeatTileScaler.maximumLatitude ? unscaledValue : HeatTileScaler.maximumLatitude) : HeatTileScaler.minimumLatitude;\r\n\t\tlet projectedValue = this.getProjectedValue(unscaledValue);\r\n\t\tlet scaledValue = (this._projectedMaximum - projectedValue) * viewportHeight / this._projectedRange;\r\n\t\treturn (scaledValue);\r\n\t}\r\n\tunscaleLongitude(value: number, window: Rect, viewport: Rect): number {\r\n\t\tlet unscaledValue: number = window.left + window.width * (value - viewport.left) / viewport.width;\r\n\t\treturn HeatTileScaler.minimumLongitude + unscaledValue * (this._longitudeSpan);\r\n\t}\r\n\tscaleLongitude(value: number, window: Rect, viewport: Rect): number {\r\n\t\tlet scaledValue: number = (value - HeatTileScaler.minimumLongitude) / (this._longitudeSpan);\r\n\t\treturn viewport.left + viewport.width * (scaledValue - window.left) / window.width;\r\n\t}\r\n\tgetMinimumVisibleLatitude(window: Rect, viewport: Rect): number {\r\n\t\tlet visibleBounds = HeatTileScaler.getVisibleBounds(window, viewport);\r\n\t\treturn this.unscaleLatitude(viewport.bottom, window, viewport);\r\n\t}\r\n\tgetMaximumVisibleLatitude(window: Rect, viewport: Rect): number {\r\n\t\tlet visibleBounds = HeatTileScaler.getVisibleBounds(window, viewport);\r\n\t\treturn this.unscaleLatitude(viewport.top, window, viewport);\r\n\t}\r\n\tgetMinimumVisibleLongitude(window: Rect, viewport: Rect): number {\r\n\t\tlet visibleBounds = HeatTileScaler.getVisibleBounds(window, viewport);\r\n\t\treturn this.unscaleLongitude(viewport.left, window, viewport);\r\n\t}\r\n\tgetMaximumVisibleLongitude(window: Rect, viewport: Rect): number {\r\n\t\tlet visibleBounds = HeatTileScaler.getVisibleBounds(window, viewport);\r\n\t\treturn this.unscaleLongitude(viewport.right, window, viewport);\r\n\t}\r\n\tscaleLatitudes(visibleLatitudes: List$1<number>, window: Rect, viewport: Rect): void {\r\n\t\tlet viewportHeight = viewport.height;\r\n\t\tlet viewportTop = viewport.top;\r\n\t\tfor (let i = 0; i < visibleLatitudes.count; i++) {\r\n\t\t\tlet unscaledValue: number = visibleLatitudes._inner[i];\r\n\t\t\tunscaledValue = unscaledValue > HeatTileScaler.minimumLatitude ? (unscaledValue < HeatTileScaler.maximumLatitude ? unscaledValue : HeatTileScaler.maximumLatitude) : HeatTileScaler.minimumLatitude;\r\n\t\t\tlet valueR: number = unscaledValue * (HeatTileScaler.degreeAsRadian);\r\n\t\t\tlet valueSin: number = Math.sin(valueR);\r\n\t\t\tlet projectedValue: number = 0.5 * Math.log((1 + valueSin) / (1 - valueSin));\r\n\t\t\tlet scaledValue = (this._projectedMaximum - projectedValue) * viewportHeight / this._projectedRange;\r\n\t\t\tscaledValue = viewportTop + scaledValue;\r\n\t\t\tvisibleLatitudes._inner[i] = (scaledValue - window.top * viewportHeight) / window.width;\r\n\t\t}\r\n\t}\r\n\tscaleLongitudes(visibleLongitudes: List$1<number>, window: Rect, viewport: Rect): void {\r\n\t\tlet viewportLeft: number = viewport.left;\r\n\t\tlet viewportWidth: number = viewport.width;\r\n\t\tlet windowLeft: number = window.left;\r\n\t\tlet windowWidth: number = window.width;\r\n\t\tfor (let i = 0; i < visibleLongitudes.count; i++) {\r\n\t\t\tlet scaledValue: number = (visibleLongitudes._inner[i] - HeatTileScaler.minimumLongitude) / (this._longitudeSpan);\r\n\t\t\tvisibleLongitudes._inner[i] = viewport.left + viewport.width * (scaledValue - window.left) / window.width;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface ITileWorkCompletedSink { \r\n\tonCompleted(args: TileImageCreatedEventArgs): void;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let ITileWorkCompletedSink_$type = new Type(null, 'ITileWorkCompletedSink');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, typeGetValue, Type, markType } from \"./type\";\r\nimport { TileWorkSettings } from \"./TileWorkSettings\";\r\nimport { Color } from \"./Color\";\r\nimport { HeatTileGeneratorWorker } from \"./HeatTileGeneratorWorker\";\r\nimport { HeatTileScaler } from \"./HeatTileScaler\";\r\nimport { Rect } from \"./Rect\";\r\nimport { ITileWorkCompletedSink, ITileWorkCompletedSink_$type } from \"./ITileWorkCompletedSink\";\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { HeatTileImageCreatedEventArgs } from \"./HeatTileImageCreatedEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileGeneratorWebWorker extends Base {\r\n\tstatic $t: Type = markType(HeatTileGeneratorWebWorker, 'HeatTileGeneratorWebWorker');\r\n\tprivate static _scaler: HeatTileScaler = new HeatTileScaler();\r\n\tprivate static _workers: HeatTileGeneratorWorker[] = <HeatTileGeneratorWorker[]>[];\r\n\tprivate static _postmessage: any = null;\r\n\tstatic get postmessage(): any {\r\n\t\treturn HeatTileGeneratorWebWorker._postmessage;\r\n\t}\r\n\tstatic set postmessage(value: any) {\r\n\t\tHeatTileGeneratorWebWorker._postmessage = value;\r\n\t}\r\n\tprivate static _yValues: number[] = null;\r\n\tprivate static _xValues: number[] = null;\r\n\tprivate static _values: number[] = null;\r\n\tstatic onmessage(args_: any): void {\r\n\t\tlet data_ = args_.data;\r\n\t\tlet cancelTile: boolean = <boolean>(data_.cancelTile);\r\n\t\tlet z = <number>(data_.z);\r\n\t\tlet y = <number>(data_.y);\r\n\t\tlet x = <number>(data_.x);\r\n\t\tif (cancelTile) {\r\n\t\t\tfor (let i_ = 0; i_ < HeatTileGeneratorWebWorker._workers.length; i_++) {\r\n\t\t\t\tlet currWorker = HeatTileGeneratorWebWorker._workers[i_];\r\n\t\t\t\tif (currWorker.settings.testRun) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (currWorker.settings.z == z && currWorker.settings.x == x && currWorker.settings.y == y) {\r\n\t\t\t\t\tlet workers_ = HeatTileGeneratorWebWorker._workers;\r\n\t\t\t\t\tworkers_.splice(i_, 1);\r\n\t\t\t\t\ti_--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet innerSettings = new TileWorkSettings();\r\n\t\tlet settings: any = <any><any>data_;\r\n\t\tif (!<boolean>settings[\"messageId\"]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (<boolean>settings[\"isNewData\"]) {\r\n\t\t\tlet yValues_ = settings[\"yValues\"];\r\n\t\t\tlet xValues_ = settings[\"xValues\"];\r\n\t\t\tlet values_ = settings[\"values\"];\r\n\t\t\tHeatTileGeneratorWebWorker._yValues = <number[]><any>(new Float64Array(yValues_));\r\n\t\t\tHeatTileGeneratorWebWorker._xValues = <number[]><any>(new Float64Array(xValues_));\r\n\t\t\tHeatTileGeneratorWebWorker._values = <number[]><any>(new Float64Array(values_));\r\n\t\t}\r\n\t\tlet outerColors: any[] = <any[]>settings[\"scaleColors\"];\r\n\t\tlet scaleColors: Color[] = <Color[]>new Array(outerColors.length);\r\n\t\tfor (let i = 0; i < outerColors.length; i++) {\r\n\t\t\tscaleColors[i] = Color.fromArgb(typeGetValue(outerColors[i][\"a\"]), typeGetValue(outerColors[i][\"r\"]), typeGetValue(outerColors[i][\"g\"]), typeGetValue(outerColors[i][\"b\"]));\r\n\t\t}\r\n\t\tinnerSettings.scaler = HeatTileGeneratorWebWorker._scaler;\r\n\t\tinnerSettings.blurRadius = <number>settings[\"blurRadius\"];\r\n\t\tinnerSettings.maxBlurRadius = <number>settings[\"maxBlurRadius\"];\r\n\t\tinnerSettings.useBlurRadiusAdjustedForZoom = <boolean>(settings[\"useBlurRadiusAdjustedForZoom\"]);\r\n\t\tinnerSettings.minimumColor = Color.fromArgb(typeGetValue((<any>settings[\"minimumColor\"])[\"a\"]), typeGetValue((<any>settings[\"minimumColor\"])[\"r\"]), typeGetValue((<any>settings[\"minimumColor\"])[\"g\"]), typeGetValue((<any>settings[\"minimumColor\"])[\"b\"]));\r\n\t\tinnerSettings.maximumColor = Color.fromArgb(typeGetValue((<any>settings[\"maximumColor\"])[\"a\"]), typeGetValue((<any>settings[\"maximumColor\"])[\"r\"]), typeGetValue((<any>settings[\"maximumColor\"])[\"g\"]), typeGetValue((<any>settings[\"maximumColor\"])[\"b\"]));\r\n\t\tinnerSettings.tileViewport = new Rect(0, <number>(<any>settings[\"tileViewport\"])[\"left\"], <number>(<any>settings[\"tileViewport\"])[\"top\"], <number>(<any>settings[\"tileViewport\"])[\"width\"], <number>(<any>settings[\"tileViewport\"])[\"height\"]);\r\n\t\tinnerSettings.yValues = HeatTileGeneratorWebWorker._yValues;\r\n\t\tinnerSettings.xValues = HeatTileGeneratorWebWorker._xValues;\r\n\t\tinnerSettings.values = HeatTileGeneratorWebWorker._values;\r\n\t\tinnerSettings.minimumVisibleLatitude = <number>settings[\"minimumVisibleLatitude\"];\r\n\t\tinnerSettings.minimumVisibleLongitude = <number>settings[\"minimumVisibleLongitude\"];\r\n\t\tinnerSettings.maximumVisibleLatitude = <number>settings[\"maximumVisibleLatitude\"];\r\n\t\tinnerSettings.maximumVisibleLongitude = <number>settings[\"maximumVisibleLongitude\"];\r\n\t\tinnerSettings.z = typeGetValue(settings[\"z\"]);\r\n\t\tinnerSettings.x = typeGetValue(settings[\"x\"]);\r\n\t\tinnerSettings.y = typeGetValue(settings[\"y\"]);\r\n\t\tinnerSettings.window = new Rect(0, <number>(<any>settings[\"window\"])[\"left\"], <number>(<any>settings[\"window\"])[\"top\"], <number>(<any>settings[\"window\"])[\"width\"], <number>(<any>settings[\"window\"])[\"height\"]);\r\n\t\tinnerSettings.testRun = <boolean>settings[\"testRun\"];\r\n\t\tinnerSettings.globalMinimum = <number>settings[\"globalMinimum\"];\r\n\t\tinnerSettings.globalMaximum = <number>settings[\"globalMaximum\"];\r\n\t\tinnerSettings.useGlobalMinMax = <boolean>settings[\"useGlobalMinMax\"];\r\n\t\tinnerSettings.minimumValue = <number>settings[\"minimumValue\"];\r\n\t\tinnerSettings.maximumValue = <number>settings[\"maximumValue\"];\r\n\t\tinnerSettings.scaleColorOffsets = <number[]>settings[\"scaleColorOffsets\"];\r\n\t\tinnerSettings.scaleColors = scaleColors;\r\n\t\tinnerSettings.useLogarithmicScale = <boolean>settings[\"useLogarithmicScale\"];\r\n\t\tinnerSettings.logarithmBase = <number>settings[\"logarithmBase\"];\r\n\t\tlet worker = new HeatTileGeneratorWorker(innerSettings);\r\n\t\tworker.messageId = typeGetValue(settings[\"messageId\"]);\r\n\t\tworker.transferableSupported = true;\r\n\t\tworker.completedSink = new CompletedSinkImpl(worker);\r\n\t\tlet workersl_ = HeatTileGeneratorWebWorker._workers;\r\n\t\tlet worker_ = worker;\r\n\t\tworkersl_.push(worker_);\r\n\t}\r\n\tstatic start(): void {\r\n\t\tlet workers_ = HeatTileGeneratorWebWorker._workers;\r\n\t\t\r\n            setInterval(function () {\r\n\t            if (workers_.length > 0) {\r\n\t\t            var worker = workers_.shift();\r\n\r\n\t\t            worker.doWork();\r\n\t\t            worker.completedSink = null;\r\n\t            }\r\n            }, 16);;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CompletedSinkImpl extends Base implements ITileWorkCompletedSink {\r\n\tstatic $t: Type = markType(CompletedSinkImpl, 'CompletedSinkImpl', (<any>Base).$type, [ITileWorkCompletedSink_$type]);\r\n\tprivate _worker: HeatTileGeneratorWorker = null;\r\n\tconstructor(worker: HeatTileGeneratorWorker) {\r\n\t\tsuper();\r\n\t\tthis._worker = worker;\r\n\t}\r\n\tonCompleted(e: TileImageCreatedEventArgs): void {\r\n\t\tlet args = <HeatTileImageCreatedEventArgs>e;\r\n\t\tlet outerArgs: any = <any>{};\r\n\t\tlet imageData_ = args.imageData;\r\n\t\touterArgs[\"messageId\"] = this._worker.messageId;\r\n\t\touterArgs[\"imageData\"] = (args.imageData == null ? null : (<any>(new Uint8ClampedArray(imageData_)))[\"buffer\"]);\r\n\t\touterArgs[\"z\"] = args.z;\r\n\t\touterArgs[\"x\"] = args.x;\r\n\t\touterArgs[\"y\"] = args.y;\r\n\t\touterArgs[\"url\"] = args.url;\r\n\t\touterArgs[\"globalMinimumValue\"] = args.globalMinimumValue;\r\n\t\touterArgs[\"globalMaximumValue\"] = args.globalMaximumValue;\r\n\t\touterArgs[\"globalMaximumValueLongitude\"] = args.globalMaximumValueLongitude;\r\n\t\touterArgs[\"globalMaximumValueLatitude\"] = args.globalMaximumValueLatitude;\r\n\t\touterArgs[\"globalMinimumValueLongitude\"] = args.globalMinimumValueLongitude;\r\n\t\touterArgs[\"globalMinimumValueLatitude\"] = args.globalMinimumValueLatitude;\r\n\t\tif (this._worker.transferableSupported && outerArgs[\"imageData\"] != null) {\r\n\t\t\t(<(arg1: any, arg2: any[]) => void>HeatTileGeneratorWebWorker.postmessage)(outerArgs, <any[]>[ outerArgs[\"imageData\"] ]);\r\n\t\t} else {\r\n\t\t\t(<(arg1: any) => void>HeatTileGeneratorWebWorker.postmessage)(outerArgs);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { HeatTileGeneratorWebWorker } from 'igniteui-core/HeatTileGeneratorWebWorker';\r\n\r\nlet worker: Worker = self as any;\r\n\r\nworker.onmessage = HeatTileGeneratorWebWorker.onmessage;\r\nHeatTileGeneratorWebWorker.postmessage = function () { self.postMessage.apply(self, Array.prototype.slice.call(arguments)); };\r\n\r\nHeatTileGeneratorWebWorker.start();\r\n\r\nexport default {} as typeof Worker & (new () => Worker);\r\n"],"sourceRoot":""}